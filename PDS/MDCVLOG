* +--- ZOS170A ---- MDCVLOG -------------------------------------+
* |                                                                   |
* | NOMBRE ....... MDCVLOG                                            |
* |                                                                   |
* | UBICACION .... SYST.LINKLIB           AMODE(24)  RMODE(24)        |
* |                                                                   |
* | AUTOR ........ ANGEL LUIS DOMINGUEZ MARTIN      2000              |
* |                JOSE MARIA MARTINEZ BESTEIRO     2000              |
* |                                                                   |
* | FUNCIONES .... MODULO DE CONVERSION DE MDBS DE OPERLOG A          |
* |                TEXTO MULTILINEA DE FORMATO SYSLOG TRADICIONAL.    |
* |                                                                   |
* | OBJETIVOS .... FACILITAR LA CONSULTA DE OPERLOG, GUARDADO EN      |
* |                FORMATO MDB, POR MEDIO DE LA UTILIDAD VERLOG.      |
* |                                                                   |
* | LENGUAJE ..... ASSEMBLER H.                                       |
* |                                                                   |
* | TIPO ......... MODULO                                             |
* |                                                                   |
* | PARAMETROS ... AREA PASADA POR EL PROGRAMA LLAMANTE               |
* |                VER LA DSECT $PARAM AL FINAL DEL FUENTE DONDE SE   |
* |                EXPLICAN LOS VALORES Y LAS FUNCIONES POSIBLES      |
* |                                                                   |
* +---------------------------------------(C) DOMINGUEZ 1999,2004-----+
MDCVLOG  INICIO     (12,11,10),COMEN='CONVERSION MDB A SYSLOG',        X
               VERSION=ZOS170A,                                        X
               TIPO=NORENT
*        +--------------------------+
*>>>>>>>>| RECEPCION DE PARAMETROS  |
*        +--------------------------+
         L     R2,0(R2)
         USING $PARAM,R2
* PREPARACION FICHERO DE ENTRADA
         CLC   KSYSIN,$DDN         <> CASO ESPECIAL DE DDN ES SYSIN?
         BNE   LB05A
*        +-----------------------------------------------+
*>>>>>>>>| LA DDNAME DE ENTRADA ES ESPECIAL: VALOR=SYSIN |
*        +-----------------------------------------------+
*        | ELLO IMPLICA QUE APUNTA A UNA LISTA DE DSN'S  |
*        | DE FICHEROS QUE HAY QUE                       |
*        | "ALLOCAR" Y "CONCATENAR" PARA PASARSELAS AL   |
*        | PROGRAMA PARA SU TRATAMIENTO                  |
*        +-----------------------------------------------+
         OPEN      (FISYS,(INPUT))
         SLR       R3,R3               <> CONTADOR DD'S ASIGNADAS
         LA        R4,$DACOND          <> AREA DE IR PONIENDO DDNAME'S
LB00     EQU       *
         GET       FISYS               <> LEER REGISTRO
         LA        R3,1(,R3)           <> AVANCE CONTADOR
         C         R3,$DACONDT         <> COMPARAR CON TOPE
         BH        LB00ERR
*
         MVC       $DATOSCD,0(R1)      <> PONER EL DSNAME
*
         CALL  MDALDIN,                                                X
               ($WORKDIN,$PETICIR,$RETINF,$DATOSCI),VL
         LTR   R15,R15             <> CODIGO RETORNO MDALDIN
         BZ    LB00OK1             <> ASIGNACION CORRECTA, SEGUIR
*
         WTO       '**MDCVLOG** ERRROR ALLOC DINAMICA ENTRADA'
         ABEND     777,DUMP
*
LB00OK1  EQU       *
         MVC       0(L'$RIDDN,R4),$RIDDN DDNAME DEVUELTA MDALDIN
         MVI       L'$RIDDN(R4),C','  <> MOVER COMA SEPARADORA
         LA        R4,L'$RIDDN+1(R4)  <> AVANCE R4
         B         LB00               <> TRATAR OTRO REGISTRO
*
LB00ERR  EQU       *
         WTO       '**MDCVLOG** EXCEDIDO NUM. FICHEROS (MAX=168).'
         ABEND     666,DUMP            <> EXCEDIDO NUMERO DE DD'S
*
ENDFISYS EQU       *                   <> FIN FICHERO TIPO SYSIND
         CLOSE     (FISYS)
*
         BCTR      R4,R0
         MVI       0(R4),C' '      <> QUITAR LA ULTIMA COMA
         MVI       1(R4),C';'
         MVI       2(R4),C' '
*
         CALL  MDALDIN,                                                X
               ($WORKDIN,$PETICIC,$DACONI),VL
         LTR   R15,R15             <> CODIGO RETORNO MDALDIN
         BZ    LB00OK2             <> ASIGNACION CORRECTA, SEGUIR
*
         WTO       '**MDCVLOG** ERRROR ALLOC DINAMICA ENTRADA'
         ABEND     777,DUMP
*
LB00OK2  EQU   *
         LA    R1,SYUSR8           <> DIRECCIONAR LA DCB DE ENTRADA
         USING IHADCB,R1           <> USING DCB
         MVC   DCBDDNAM,$DACOND    <> MOVER DDNAME A UTILIZAR
         DROP  R1
         B     LB05B
*        +-----------------------------------------------+
*>>>>>>>>| LA DDNAME DE ENTRADA ES NORMAL                |
*        +-----------------------------------------------+
*        | ELLO IMPLICA QUE APUNTA A UNO O VARIOS DSN'S  |
*        | CONCATENADOS DE FICHEROS DE OPERLOG           |
*        +-----------------------------------------------+
LB05A    EQU   *
         LA    R1,SYUSR8           <> DIRECCIONAR LA DCB DE ENTRADA
         USING IHADCB,R1           <> USING DCB
         MVC   DCBDDNAM,$DDN       <> MOVER DDNAME A UTILIZAR
         DROP  R1
LB05B    EQU   *
* CASO ESPECIAL FICHERO DE SALIDA SI PARAMETRO $DSN ES DDNAME=
         CLC   $DSN(L'KDDNAME),KDDNAME
         BNE   LB08
         LA    R1,SYUSR9           <> DIRECCIONAR LA DCB DE ENTRADA
         USING IHADCB,R1           <> USING DCB
         MVC   DCBDDNAM,$DSN+L'KDDNAME    <> MODIFICAR DDNAME DEFECTO
         DROP  R1
         B     LB20
* CONSTRUCCION DE PRIMERA AREA DE PARAMETROS PARA MDALDIN
LB08     EQU   *
         LA    R1,$DATOSA
         MVC   0(L'$DATOSA0,R1),$DATOSA0
         LA    R1,L'$DATOSA0(R1)
         CLC   $DSN(L'KSYSOUT),KSYSOUT
         BE    LB10
         MVC   0(L'$DATOSA1,R1),$DATOSA1
         LA    R1,L'$DATOSA1(R1)
         MVC   $DATOSA2(44),$DSN   <> DSN DEL FICHERO DE SALIDA
         MVC   0(L'$DATOSA2,R1),$DATOSA2
         LA    R1,L'$DATOSA2(R1)
LB10     DS    0H
         MVC   0(L'$DATOSA9,R1),$DATOSA9
* CONSTRUCCION DE SEGUNDA AREA DE PARAMETROS PARA MDALDIN
         LA    R1,$DATOSB
         CLC   $DSN(L'KSYSOUT),KSYSOUT
         BE    LB11
         MVC   0(L'$DATOSB1,R1),$DATOSB1
         LA    R1,L'$DATOSB1(R1)
         B     LB12
LB11     DS    0H
         MVC   $DATOSB,$DSN   <> DSN DEL FICHERO DE SALIDA
         LA    R1,L'$DSN(R1)
         B     LB13
LB12     DS    0H
         MVC   0(L'$DATOSB2,R1),$DATOSB2
         LA    R1,L'$DATOSB2(R1)
LB13     DS    0H
         MVC   0(L'$DATOSB9,R1),$DATOSB9
*
         MVC   MDCVMSGT,$DATOSA    <> ERROR DE ASIGNACION
         BAS   R14,MESSR           DISPLAY IT
         MVC   MDCVMSGT,$DATOSB    <> ERROR DE ASIGNACION
         BAS   R14,MESSR           DISPLAY IT
         CALL  MDALDIN,                                                X
               ($WORKDIN,$PETICI,$DATOSA,$DATOSB),VL
         LTR   R15,R15             <> CODIGO RETORNO MDALDIN
         BZ    LB20                <> ASIGNACION CORRECTA, SEGUIR
*
         MVC   MDCVMSGT,MDCVMSG1   <> ERROR DE ASIGNACION
         STCM  R15,B'1111',TWORK
         UNPK  TWORK+6(9),TWORK(5)
         TR    TWORK+6(8),HEXTAB
         BAS   R14,MESSR           DISPLAY IT
         MVC   MDCVMSG3+4(8),TWORK+6
         MVC   MDCVMSGT,MDCVMSG3
         UNPK  TWORK(5),$WORKRC
         TR    TWORK(4),HEXTAB
         MVC   MDCVMSG3+17(4),TWORK
         MVC   MDCVMSGT,MDCVMSG3
*
ERRMSG   DS    0H
         LA    R2,MDCVMSG          POINT TO ERROR MESSAGE
         BAS   R14,MESSR           DISPLAY IT
         ABEND 888,DUMP
*
*        +--------------------------+
*>>>>>>>>| PROCESO DEL FICHERO      |
*        +--------------------------+
LB20     DS    0H
         OPEN  (SYUSR8,(INPUT))    <> ABRIR FICHERO OPERLOG
         OPEN  (SYUSR9,(OUTPUT))
*        +--------------------------+
*>>>>>>>>|   PROCESO DEL PROGRAMA   |
*        +--------------------------+
COPYLOOP DS    0H
         GET   SYUSR8              <> LEER PRIMER REGISTRO
         LR    R8,R1               <> R8 DIRECCIONA PRIMER REGISTRO
         USING MDB,R8
         MVI   FLAGS1,0            CLEAR PROCESSING FLAGS
         MVC   LOGBUF(128),=CL128' '  CLEAR OUT LOG RECORD         F04C
         LR    R6,R8               CALC END OF MDB IN R6
         AH    R6,MDBLEN           START+MDBLEN IN HEADER
         LA    R7,MDBHLEN(0,R8)    ADDRESS OF FIRST OBJECT
         CR    R7,R6               SEE IF THIS IS THE END
         BNL   COPYLOOP            GET ANOTHER MDB IF SO (NO           X
                                   OBJECTS)                        FD2C
         DROP  R8
         USING MDB,R7
*
* SCAN MDB OBJECTS LOOKING FOR GENERAL AND CP OBJECTS, AND
* SAVE SYSLOG INFORMATION FROM THEM
*
OBJLP    DS    0H                  LOOP THROUGH THE OBJECTS
         LH    R3,MDBTYPE          GET TYPE
         C     R3,=A(MDBGOBJ)      CHECK FOR GENERAL OBJECT
         BNE   NOTG                NOT GENERAL OBJECT
         TM    FLAGS1,FLAGGO       SEE IF FIRST GENERAL OBJECT
         BO    NXTOBJ              NO, SKIP IT
         OI    FLAGS1,FLAGGO       SHOW GENERAL OBJECT WAS FOUND
         USING MDBG,R7             ADDRESSABILITY TO GENERAL OBJECT
***********************************************************************
* MOVE GENERAL OBJECT FIELDS INTO LOG RECORD OR SAVE THEM
***********************************************************************
         BAS   R14,GENINFO         FILL IN THE APPROPRIATE FIELDS      X
                                   IN THE LOG RECORD FROM THE MDB      X
                                   GENERAL OBJECT                  F04A
         MVC   JOBNAME,MDBGJBNM    SAVE JOB NAME
         SR    R15,R15             CLEAR A REG
         ICM   R15,7,MDBGSEQ       MESSAGE SEQUENCE NUMBER
         CVD   R15,DBLWD           CONVERT TO DECIMAL
         UNPK  MLID,DBLWD          SAVE LOW 3 DIGITS AS EBCDIC         X
                                   MULTILINE ID
         OI    MLID+2,C'0'         MAKE IT PRINTABLE
         B     NXTOBJ              BUMP TO NEXT OBJECT
*
NOTG     DS    0H
         C     R3,=A(MDBCOBJ)      CHECK FOR CONTROL PROG OBJECT
         BNE   NXTOBJ              NOT CONTROL PROG OBJECT, GET NEXT
         TM    FLAGS1,FLAGCO       SEE IF FIRST CONTROL PROG OBJECT
         BO    NXTOBJ              NO, SKIP IT
         USING MDBSCP,R7           ADDRESSABILITY TO CTL PROG OBJECT
         CLC   MDBCPNAM,=C'MVS '   MAKE SURE IT IS AN MVS OBJECT
         BNE   NXTOBJ              IF NOT, JUST SKIP CP OBJECT
         CLC   MDBCVER,=AL4(MDBCVER5) SEE IF IT'S THE RIGHT VERSION
         BL    COPYLOOP            SKIP MDB IF NOT                 FD2C
         OI    FLAGS1,FLAGCO       SET PROCESSED CONTROL PROG OBJECT
***********************************************************************
* MOVE CONTROL PGM OBJECT FIELDS INTO LOG RECORD OR SAVE THEM
*
* SET UP RECORD TYPE
***********************************************************************
         BAS   R14,CPINFO          FILL IN THE APPROPRIATE FIELDS      X
                                   IN THE LOG RECORD FROM THE MDB      X
                                   CP OBJECT                       F04A
***********************************************************************
* SAVE CONSOLE ID, CONSOLE NAME, MCS FLAGS, AND DESCRIPTORS        FP4C
***********************************************************************
         MVC   CONSID,MDBCCNID     SAVE CONSOLE ID
         MVC   CONSNAME,MDBCCNNM   SAVE CONSOLE NAME               FD1A
         MVC   MCSFLAGS,MDBCMCSF   SAVE MCS FLAGS                  FD1A
         MVC   DESCS,MDBCDESC      SAVE DESCRIPTOR CODES           FP4A
***********************************************************************
* REMEMBER WHETHER THIS IS A WTL
***********************************************************************
         MVI   WTLFLAG,C'N'        ASSUME NOT WTL
         TM    MDBCMSC2,MDBCWTL    IS IT A WTL?
         BNO   NXTOBJ              NO, OK
         MVI   WTLFLAG,C'Y'        SHOW IT'S A WTL
***********************************************************************
NXTOBJ   DS    0H                  FIND NEXT OBJECT
***********************************************************************
         TM    FLAGS1,FLAGGO+FLAGCO SEE IF WE FOUND GENERAL AND SCP
         BO    FNDTXT              GOT THEM, LOOP THROUGH TEXT OBJS
         USING MDB,R7
         AH    R7,MDBLEN           BUMP TO NEXT OBJECT
         CR    R7,R6               SEE IF THIS IS THE END
         BL    OBJLP               NO, PROCESS THIS OBJECT
         B     COPYLOOP            MISSING NECESSARY OBJECTS,          X
                                   SKIP IT                         FD2C
         DROP  R7
***********************************************************************
* FIND TEXT OBJECTS, CONVERT THEM TO SYSLOG RECORDS
***********************************************************************
FNDTXT   DS    0H
         LA    R7,MDBHLEN(0,R8)    ADDRESS OF FIRST OBJECT
         CR    R7,R6               SEE IF THIS IS THE END
         BNL   COPYLOOP            GET ANOTHER MDB IF SO               X
                                   OBJECTS)                        FD2C
         USING MDB,R7
***********************************************************************
* FILL IN JOBNAME/CONSNAME FIELD
***********************************************************************
         BAS   R14,JOBINFO         FILL IN JOBNAME/CONSNAME FIELD  F04A
*
* SCAN MDB LOOKING FOR TEXT OBJECTS
*
***********************************************************************
TOBJLP   CLC   MDBTYPE,=AL2(MDBTOBJ) CHECK FOR TEXT OBJECT
         BNE   NXTTOBJ             NOT TEXT OBJECT, TRY NEXT
***********************************************************************
* TEXT OBJECT - CONVERT IT TO SYSLOG RECORD AND PUT IT TO THE FILE
*
***********************************************************************
         USING MDBT,R7             ADDRESSABILITY TO TEXT OBJECT
***********************************************************************
* CALCULATE LENGTH OF TEXT IN R2
***********************************************************************
         LH    R2,MDBTLEN          GET TEXT OBJECT LENGTH
         S     R2,=A(MDBTMSGT-MDBTLEN) SUBTRACT NON-TEXT SIZE
         BNP   NXTTOBJ             SKIP IT IF LENGTH IS ZERO OR LESS
         LA    R3,MDBTMSGT         GET ADDRESS OF TEXT
         CLI   WTLFLAG,C'Y'        IS IT A WTL?
         BNE   NOTWTL              NO, SKIP TO THE NON-WTL CASE
***********************************************************************
*
* MESSAGE CAME FROM A WTL
*
* PUT ONLY THE TEXT (NO CONTROL INFO) FROM THE FIRST LINE
*
***********************************************************************
         CH    R2,=H'128'          DOES TEXT LENGTH EXCEED MAX?
         BNH   WTLLOK              NO, OK
         LA    R2,128              SET IT TO MAX
WTLLOK   S     R2,=F'1'            SUBTRACT 1 FOR MVC
         BM    COPYLOOP            SKIP IT IF NEGATIVE (LENGTH < 1)FD2C
         EX    R2,WTLMV            MOVE IN THE TEXT
         LA    R2,5(0,R2)          ADD FOR RDW AND GET BACK THE 1
         STH   R2,LOGBUFL          SET RECORD LENGTH               FP4C
PUT1     PUT   SYUSR9,LOGBUFP      PUT THE SYSLOG RECORD
         B     COPYLOOP            GET NEXT MDB                    FD2C
WTLMV    MVC   LOGBUF(*-*),0(R3)   EXECUTED ABOVE
*
NOTWTL   DS    0H
***********************************************************************
* NOT A WTL
*
***********************************************************************
         BAS   R14,PROCLINE        PROCESS TEXT LINE               F04A
*
* BUMP TO NEXT OBJECT
*
NXTTOBJ  DS    0H
         USING MDB,R7
         AH    R7,MDBLEN           BUMP TO NEXT OBJECT
         CR    R7,R6               SEE IF THIS IS THE END
         BL    TOBJLP              NO, LOOK AT THIS OBJECT
         DROP  R7
         B     COPYLOOP            DONE WITH THIS MDB; GET NEXT    FD2C
*
***********************************************************************
* END COPY LOOP                                                   FD2C*
***********************************************************************
*
***********************************************************************
* PUTREC -- PUT A RECORD TO THE OUTPUT FILE AND SET UP FOR NEXT       *
*                                                                     *
*   INPUT:                                                            *
*     R3 -> TEXT                                                      *
*     R4  = TEXT LENGTH                                               *
*     R14 = RETURN ADDRESS                                            *
***********************************************************************
PUTREC   DS    0H
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT
         LR    R1,R4               LENGTH OF TEXT
         S     R1,=F'1'            SUBTRACT 1 FOR MVC
         BM    PUTRECX             RETURN IF NEGATIVE (LENGTH < 1)
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYRR            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
         LA    R2,HCRTEXT          BORROW R2 (PR WILL RESTORE IT)  F04A
         A     R2,LOFF               FOR OFFSET TO TEXT IN LOG RECORD  X
                                                                   F04A
         EX    R1,PUTMV            MOVE IN THE TEXT                F04A
         A     R1,=A(HCRHEADL+5)   CALCULATE LENGTH OF LOG RECORD  F04A
         DROP  R9                  DROP ADDRESSABILITY TO HCRREC   F04A
         B     PUTCONT             CONTINUE TO CALCULATE OUTPUT        X
                                   RECORD LENGTH                   F04A
TWODGYRR DS    0H                  PROCESS 2-DIGIT YEAR RECORDS    F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCL,R9              ADDRESSABILITY TO HCL MAPPING   F04A
         LA    R2,HCLTEXT          BORROW R2 (PR WILL RESTORE IT)
         A     R2,LOFF               FOR OFFSET TO TEXT IN LOG RECORD
         EX    R1,PUTMV            MOVE IN THE TEXT
         A     R1,=A(HCLHEADL+5)   CALCULATE LENGTH OF LOG RECORD
         DROP  R9                  DROP ADDRESSABILITY TO HCL      F04A
PUTCONT  DS    0H
         A     R1,LOFF               INCLUDING THE OFFSET
         STH   R1,LOGBUFL          MOVE IT INTO PREFIX
PUT2     PUT   SYUSR9,LOGBUFP      PUT THE SYSLOG RECORD
*
* SET UP FOR NEXT RECORD
*
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYRN            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
         ICM   R15,1,HCRREQTP     SAVE REQUEST TYPE                F04A
         MVC   HCRREC(128),=CL128' ' CLEAR OUT LOG RECORD          F04A
         STCM  R15,1,HCRREQTP     RESTORE REQUEST TYPE             F04A
         MVI   FIRSTLNE,C'N'       SHOW THIS IS NO LONGER FIRST LINE   X
                                                                   F04A
         DROP  R9                  DROP ADDRESSABILITY TO HCRREC   F04A
         B     PUTRECX             EXIT SUBROUTINE                 F04A
TWODGYRN DS    0H                  PROCESS 2-DIGIT YEAR RECORDS    F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCL,R9              ADDRESSABILITY TO HCL MAPPING   F04A
         ICM   R15,1,HCLREQTP     SAVE REQUEST TYPE
         MVC   HCL(128),=CL128' ' CLEAR OUT LOG RECORD
         STCM  R15,1,HCLREQTP     RESTORE REQUEST TYPE
         MVI   FIRSTLNE,C'N'       SHOW THIS IS NO LONGER FIRST LINE
         DROP  R9                  DROP ADDRESSABILITY TO HCL      F04A
PUTRECX  PR    ,                  RETURN
PUTMV    MVC   0(*-*,R2),0(R3)    EXECUTED INSTRUCTION
***********************************************************************
* GENINFO -- GET INFORMATION FROM THE MDB GENERAL OBJECT AND          *
*            FILL IN THE APPROPRIATE LOG RECORD FIELDS.               *
*            USE THE HCL OR HCR TO MAP THE LOG RECORDS DEPENDING      *
*            ON WHETHER THE OUTPUT RECORDS SHOULD HAVE A 2-DIGIT      *
*            YEAR OR A 4-DIGIT YEAR RESPECTIVELY.                 F04A*
*                                                                     *
*   INPUT:                                                        F04A*
*     R7 -> MDBG                                                  F04A*
*     R14 = RETURN ADDRESS                                        F04A*
***********************************************************************
GENINFO  DS    0H                                                  F04A
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT       F04A
         USING MDBG,R7             ADDRESSABILITY TO GENERAL OBJECT    X
                                                                   F04A
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYR1            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
*
* SET UP LOG RECORD BASE
*                                                                  F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
         MVC   HCRSYSID,MDBGOSNM   SYSTEM NAME                     F04A
         MVC   HCRDATE,MDBGDSTP    DATE WITH 4-DIGIT YEAR (YYYYDDD)    X
                                                                   F04A
         MVC   HCRTIME,MDBGTIMH    TIME                            F04A
         MVI   HCRTIME+2,C':'      SEPARATE WITH                   F04A
         MVI   HCRTIME+5,C':'       COLONS                         F04A
         DROP  R9                                                  F04A
         B     GENEXIT             EXIT SUBROUTINE                 F04A
TWODGYR1 DS    0H                  PROCESS 2-DIGIT YEAR OUTPUT RECORDS X
                                                                   F04A
* SET UP LOG RECORD BASE
*                                                                  F04M
         LA    R9,LOGBUF           SYSLOG RECORD                   F04C
         USING HCL,R9              ADDRESSABILITY                  F04C
         MVC   HCLSYSID,MDBGOSNM   SYSTEM NAME                     F04M
         MVC   HCLDATE,MDBGDSTP+2  DATE (NOTE THAT MDB FORM IS YYYYDDD)
         MVC   HCLTIME,MDBGTIMH    TIME                            F04M
         MVI   HCLTIME+2,C':'      SEPARATE WITH                   F04M
         MVI   HCLTIME+5,C':'       COLONS                         F04M
         DROP  R9                                                  F04A
GENEXIT  DS    0H                  EXIT SUBROUTINE                 F04A
         DROP  R7                  DROP ADDRESSABILITY TO MDB GENERAL  X
                                   OBJECT                          F04A
         PR                        RETURN TO CALLER                F04A
*
***********************************************************************
* CPINFO --  GET INFORMATION FROM THE MDB CP OBJECT AND               *
*            FILL IN THE APPROPRIATE LOG RECORD FIELDS.               *
*            USE THE HCL OR HCR TO MAP THE LOG RECORDS DEPENDING      *
*            ON WHETHER THE OUTPUT RECORDS SHOULD HAVE A 2-DIGIT      *
*            YEAR OR A 4-DIGIT YEAR RESPECTIVELY.                 F04A*
*                                                                     *
*   INPUT:                                                        F04A*
*     R7 -> MDBSCP                                                F04A*
*     R14 = RETURN ADDRESS                                        F04A*
***********************************************************************
CPINFO   DS    0H                                                  F04A
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT       F04A
         USING MDBSCP,R7           ADDRESSABILITY TO CP OBJECT     F04A
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYR2            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
*
* SET UP LOG RECORD BASE
*                                                                  F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
         MVI   HCRRECTP,HCRMLWTO   ASSUME A MULTILINE MSG          F04A
         CLC   MDBCLCNT,=F'1'      SEE IF MORE THAN ONE LINE       F04A
         BH    CPROK4              OK IF SO                        F04A
         MVI   HCRRECTP,HCRWTO     MAKE IT A SINGLE LINE MESSAGE   F04A
         TM    MDBMLVL1,MDBMLR     IS IT A WTOR?                   F04A
         BNO   CPROK4              NO, OK                          F04A
         MVI   HCRRECTP,HCRWTOR    MAKE IT A WTOR                  F04A
***********************************************************************
* SET UP REQUEST TYPE                                              F04A
***********************************************************************
CPROK4   TM    MDBCMSC2,MDBCOCMD   IS IT AN OPERATOR CMD ECHO?     F04A
         BNO   CPNOP4              NO, TRY NEXT                    F04A
         MVI   HCRREQTP,HCRCMD     MARK IT AS OPERATOR COMMAND     F04A
         CLC   MDBCCNID,=F'0'      IS IT AN INTERNAL CMD (CONS ID=0)?  X
                                                                   F04A
         BNE   CPRC4               NO, SO HCLCMD IS OK             F04A
         MVI   HCRREQTP,HCRINTNL   MARK IT AS INTERNAL COMMAND     F04A
         B     CPRC4                                               F04A
CPNOP4   TM    MDBCATT1,MDBCMCSC   IS IT A COMMAND RESPONSE?       F04A
         BO    CPRSP4              YES, MARK IT SO                 F04A
         TM    MDBDESC1,MDBDESCE   IS IT DESC=5 (ALSO CMD RESP)    F04A
         BNO   CPRC4               NO, NOT CMD RESPONSE            F04A
CPRSP4   MVI   HCRREQTP,HCRRESP   MARK IT AS COMMAND RESPONSE      F04A
***********************************************************************
* MAKE ROUTING CODES PRINTABLE                                     F04A
***********************************************************************
CPRC4    UNPK  TWORK(9),MDBCERC(5) UNPACK FIRST 28 ROUTING CODES   F04A
         TR    TWORK(7),HEXTAB     MAKE THEM PRINTABLE             F04A
         MVC   HCRROUTC,TWORK      MOVE INTO RECORD                F04A
***********************************************************************
* MAKE REQUEST FLAGS PRINTABLE                                     F04A
***********************************************************************
         UNPK  TWORK(9),MDBCXMOD(5) UNPACK REQUEST FLAGS           F04A
         TR    TWORK(8),HEXTAB     MAKE THEM PRINTABLE             F04A
         MVC   HCRREQFL,TWORK      MOVE INTO RECORD                F04A
         MVC   REQFL,TWORK         SAVE FOR SECOND LINE            F04A
         DROP  R9                                                  F04A
         B     CPEXIT              EXIT SUBROUTINE                 F04A
TWODGYR2 DS    0H                  PROCESS 2-DIGIT YEAR OUTPUT RECORDS X
                                                                   F04A
* SET UP LOG RECORD BASE
*                                                                  F04M
         LA    R9,LOGBUF           SYSLOG RECORD                   F04C
         USING HCL,R9              ADDRESSABILITY                  F04C
         MVI   HCLRECTP,HCLMLWTO   ASSUME A MULTILINE MSG          F04M
         CLC   MDBCLCNT,=F'1'      SEE IF MORE THAN ONE LINE       F04M
         BH    CPROK               OK IF SO                        F04M
         MVI   HCLRECTP,HCLWTO     MAKE IT A SINGLE LINE MESSAGE   F04M
         TM    MDBMLVL1,MDBMLR     IS IT A WTOR?                   F04M
         BNO   CPROK               NO, OK                          F04M
         MVI   HCLRECTP,HCLWTOR    MAKE IT A WTOR                  F04M
***********************************************************************
* SET UP REQUEST TYPE                                              F04M
***********************************************************************
CPROK    TM    MDBCMSC2,MDBCOCMD   IS IT AN OPERATOR CMD ECHO?     F04M
         BNO   CPNOP               NO, TRY NEXT                    F04M
         MVI   HCLREQTP,HCLCMD     MARK IT AS OPERATOR COMMAND     F04M
         CLC   MDBCCNID,=F'0'      IS IT AN INTERNAL CMD (CONS ID=0)?  X
                                                                   F04M
         BNE   CPRC                NO, SO HCLCMD IS OK             F04M
         MVI   HCLREQTP,HCLINTNL   MARK IT AS INTERNAL COMMAND     F04M
         B     CPRC                                                F04M
CPNOP    TM    MDBCATT1,MDBCMCSC   IS IT A COMMAND RESPONSE?       F04M
         BO    CPRSP               YES, MARK IT SO                 F04M
         TM    MDBDESC1,MDBDESCE   IS IT DESC=5 (ALSO CMD RESP)    F04M
         BNO   CPRC                NO, NOT CMD RESPONSE            F04M
CPRSP    MVI   HCLREQTP,HCLRESP   MARK IT AS COMMAND RESPONSE      F04M
***********************************************************************
* MAKE ROUTING CODES PRINTABLE                                     F04M
***********************************************************************
CPRC     UNPK  TWORK(9),MDBCERC(5) UNPACK FIRST 28 ROUTING CODES   F04M
         TR    TWORK(7),HEXTAB     MAKE THEM PRINTABLE             F04M
         MVC   HCLROUTC,TWORK      MOVE INTO RECORD                F04M
***********************************************************************
* MAKE REQUEST FLAGS PRINTABLE                                     F04M
***********************************************************************
         UNPK  TWORK(9),MDBCXMOD(5) UNPACK REQUEST FLAGS           F04M
         TR    TWORK(8),HEXTAB     MAKE THEM PRINTABLE             F04M
         MVC   HCLREQFL,TWORK      MOVE INTO RECORD                F04M
         MVC   REQFL,TWORK         SAVE FOR SECOND LINE            F04M
         DROP  R9                                                  F04A
CPEXIT   DS    0H                  EXIT SUBROUTINE                 F04A
         DROP  R7                  DROP ADDRESSABILITY TO MDB CP       X
                                                                   F04A
         PR                        RETURN TO CALLER                F04A
*
***********************************************************************
* JOBINFO--  GET JOBNAME INFORMATION AND FILL IN THE                  *
*            APPROPRIATE LOG RECORD FIELDS.                           *
*            USE THE HCL OR HCR TO MAP THE LOG RECORDS DEPENDING      *
*            ON WHETHER THE OUTPUT RECORDS SHOULD HAVE A 2-DIGIT      *
*            YEAR OR A 4-DIGIT YEAR RESPECTIVELY.                 F04A*
*                                                                     *
*   INPUT:                                                        F04A*
*     R7 -> MDB                                                   F04A*
*     R14 = RETURN ADDRESS                                        F04A*
***********************************************************************
JOBINFO  DS    0H                                                  F04A
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT       F04A
         USING MDB,R7              ADDRESSABILITY TO MDB OBJECT    F04A
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYR3            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
*
* SET UP LOG RECORD BASE
*                                                                  F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
         CLI   HCRREQTP,HCRCMD     IS IT A COMMAND?                F04A
         BNE   NOTCMD4             NO, TRY NEXT                    F04A
         CLC   CONSID,=F'128'      IS IT AN INSTREAM COMMAND?      F04A
         BE    GETCONS4            YES, USE CONSOLE NAME (INSTREAM)    X
                                                                   F04A
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?               F04A
         BE    GETCONS4            YES, USE CONSOLE NAME           F04A
         B     CHKMCS4             GO SEE IF IT'S AN MCS CONSOLE   F04A
NOTCMD4  CLI   HCRREQTP,HCRINTNL   IS IT AN INTERNAL COMMAND?      F04A
         BNE   NOTINTL4            NO, TRY NEXT                    F04A
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?               F04A
         BNE   GETJOB4             NO, SO USE JOB NAME             F04A
         MVI   HCRREQTP,HCRCMD     CHANGE REQUEST TYPE TO "COMMAND"    X
                                                                   F04A
         B     GETCONS4            USE CONSOLE NAME (INTERNAL)     F04A
NOTINTL4 CLI   HCRREQTP,HCLRESP    IS IT A COMMAND RESPONSE?       F04A
         BNE   GETJOB4             NO, SO USE JOB NAME             F04A
         TM    MCSFLAG1,MDBMCSB+MDBMCSH WAS IT SENT BY CONSOLE ID      X
                                        IN REG 0?                  F04A
         BZ    GETJOB4             NO, USE JOB NAME                F04A
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?               F04A
         BNE   GETJOB4             NO, SO USE JOB NAME             F04A
         CLC   CONSID,=F'0'        IS IT INTERNAL?                 F04A
         BE    GETCONS4            YES, USE CONSOLE NAME (INTERNAL)    X
                                                                   F04A
         CLC   CONSID,=F'128'      IS IT INSTREAM?                 F04A
         BE    GETCONS4            YES, USE CONSOLE NAME (INSTREAM)    X
                                                                   F04A
CHKMCS4  CLI   CONSID,X'00'        IS CONSOLE CLASS ZERO (MCS)?    F04A
         BE    GETJOB4             YES, USE JOB NAME               F04A
         TM    CONSID,X'E0'        IS CONSOLE CLASS A JES3 CONSOLE?    X
                                                                   F04A
         BNZ   GETJOB4             YES, SO USE JOB NAME            F04A
***********************************************************************
* MOVE CONSOLE NAME INTO HCR                                       F04A
***********************************************************************
GETCONS4 MVC   HCRCONID,CONSNAME   MOVE IN CONSOLE NAME FROM MDB   F04A
         CLC   CONSID,=F'0'        IS IT "INTERNAL"?               F04A
         BNE   CONSNOT4            NO, OK                          F04A
         MVC   HCRCONID,=CL8'INTERNAL' MOVE IN "INTERNAL"
         B     MDBJBOK4
CONSNOT4 CLC   CONSID,=F'128'      IS IT "INSTREAM"?
         BNE   MDBJBOK4            NO, OK
         MVC   HCRCONID,=CL8'INSTREAM' MOVE IN "INSTREAM"
         B     MDBJBOK4            DONE WITH JOB/CONSOLE FIELD
***************************************************************
*        MOVE IN JOB NAME
GETJOB4  MVC   HCRJOBID,JOBNAME    MOVE IN JOB NAME
*
MDBJBOK4 DS    0H
*
* ERASE THE TIMESTAMP IF NOTIME WAS REQUESTED
***************************************************************
         TM    MCSFLAG2,MDBMCSI    WAS "NOTIME" REQUESTED?
         BNO   TIMEOK              NO, SO LEAVE TIME ALONE
         MVC   HCRTIME,=CL11' '    BLANK OUT THE TIME STAMP
         DROP  R9
         B     TIMEOK              EXIT SUBROUTINE
TWODGYR3 DS    0H                  PROCESS 2-DIGIT YEAR OUTPUT RECO
* SET UP LOG RECORD BASE
*
         LA    R9,LOGBUF           SYSLOG RECORD
         USING HCL,R9              ADDRESSABILITY
         CLI   HCLREQTP,HCLCMD     IS IT A COMMAND?
         BNE   NOTCMD              NO, TRY NEXT
         CLC   CONSID,=F'128'      IS IT AN INSTREAM COMMAND?
         BE    GETCONS             YES, USE CONSOLE NAME (INSTREAM)
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?
         BE    GETCONS             YES, USE CONSOLE NAME
         B     CHKMCS              GO SEE IF IT'S AN MCS CONSOLE
NOTCMD   CLI   HCLREQTP,HCLINTNL   IS IT AN INTERNAL COMMAND?
         BNE   NOTINTL             NO, TRY NEXT
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?
         BNE   GETJOB              NO, SO USE JOB NAME
         MVI   HCLREQTP,HCLCMD     CHANGE REQUEST TYPE TO "COMMAND"
         B     GETCONS             USE CONSOLE NAME (INTERNAL)
NOTINTL  CLI   HCLREQTP,HCLRESP    IS IT A COMMAND RESPONSE?
         BNE   GETJOB              NO, SO USE JOB NAME
         TM    MCSFLAG1,MDBMCSB+MDBMCSH WAS IT SENT BY CONSOLE ID      *
                                        IN REG 0?
         BZ    GETJOB              NO, USE JOB NAME
         CLC   JOBNAME,=CL8' '     IS JOBNAME BLANK?
         BNE   GETJOB              NO, SO USE JOB NAME
         CLC   CONSID,=F'0'        IS IT INTERNAL?
         BE    GETCONS             YES, USE CONSOLE NAME (INTERNAL)
         CLC   CONSID,=F'128'      IS IT INSTREAM?
         BE    GETCONS             YES, USE CONSOLE NAME (INSTREAM)
CHKMCS   CLI   CONSID,X'00'        IS CONSOLE CLASS ZERO (MCS)?
         BE    GETJOB              YES, USE JOB NAME
         TM    CONSID,X'E0'        IS CONSOLE CLASS A JES3 CONSOLE?
         BNZ   GETJOB              YES, SO USE JOB NAME
*******************************************************************
* MOVE CONSOLE NAME INTO HCL
*******************************************************************
GETCONS  MVC   HCLCONID,CONSNAME   MOVE IN CONSOLE NAME FROM MDB
         CLC   CONSID,=F'0'        IS IT "INTERNAL"?
         BNE   CONSNOTI            NO, OK
         MVC   HCLCONID,=CL8'INTERNAL' MOVE IN "INTERNAL"
         B     MDBJOBOK
CONSNOTI CLC   CONSID,=F'128'      IS IT "INSTREAM"?
         BNE   MDBJOBOK            NO, OK
         MVC   HCLCONID,=CL8'INSTREAM' MOVE IN "INSTREAM"
         B     MDBJOBOK            DONE WITH JOB/CONSOLE FIELD
*******************************************************************
*        MOVE IN JOB NAME
GETJOB   MVC   HCLJOBID,JOBNAME    MOVE IN JOB NAME
*
MDBJOBOK DS    0H
*
* ERASE THE TIMESTAMP IF NOTIME WAS REQUESTED
*******************************************************************
         TM    MCSFLAG2,MDBMCSI    WAS "NOTIME" REQUESTED?
         BNO   TIMEOK              NO, SO LEAVE TIME ALONE
         MVC   HCLTIME,=CL11' '    BLANK OUT THE TIME STAMP
         DROP  R9
TIMEOK   DS    0H
*******************************************************************
* REMEMBER THIS IS THE FIRST LINE IN THE MESSAGE
         MVI   FIRSTLNE,C'Y'       SET FIRST-LINE INDICATOR
         DROP  R7                  DROP ADDRESSABILITY TO MDB OBJEC
         PR                        RETURN TO CALLER
*
***********************************************************************
* PROCLINE-  PROCESS THE LINE. TEST TO SEE IF THE MESSAGE IF A        *
*            MULTILINE MESSAGE, AND IF SO SET THE APPROPRIATE         *
*            LOG RECORD FIELDS.                                       *
*            TEST TO SEE IF THE LINE FITS IN ONE OUTPUT RECORD.       *
*            IF LINE DOES NOT FIT IN ONE OUTPUT RECORD, THEN          *
*            SPLIT THE LINE. FINALLY PUT THE OUTPUT RECORD IN         *
*            THE OUTPUT DATASET.                                      *
*            USE THE HCL OR HCR TO MAP THE LOG RECORDS DEPENDING      *
*            ON WHETHER THE OUTPUT RECORDS SHOULD HAVE A 2-DIGIT      *
*            YEAR OR A 4-DIGIT YEAR RESPECTIVELY.                 F04A*
*                                                                     *
*   INPUT:                                                        F04A*
*     R7 -> MDBT                                                  F04A*
*     R14 = RETURN ADDRESS                                        F04A*
***********************************************************************
PROCLINE DS    0H                                                  F04A
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT       F04A
         USING MDBT,R7             ADDRESSABILITY TO MDB TEXT          X
                                   OBJECT                          F04A
         TM    PFLAGS,CENTURY      DOES CUSTOMER WANT A 4-DIGIT YEAR   X
                                   IN OUTPUT RECORDS               F04A
         BNO   TWODGYR4            NO, CUSTOMER WANTS A 2-DIGIT YEAR   X
                                   IN THE OUTPUT RECORDS           F04A
*
* SET UP LOG RECORD BASE
*                                                                  F04A
         LA    R9,LOGBUF           SYSLOG RECORD                   F04A
         USING HCRREC,R9           ADDRESSABILITY TO HCR MAPPING   F04A
***********************************************************************
* SEE IF THIS IS LINE 2 OR GREATER OF A MULTILINE, AND IF SO
*     SHOW THE MULTILINE ID AND
*     FILL IN THE RECORD TYPE FROM THE LINE TYPE                   F04A
***********************************************************************
         CLI   FIRSTLNE,C'Y'       SEE IF THIS IS THE FIRST LINE   F04A
         BE    MDBMLOK4            BYPASS IF SO                    F04A
         MVC   HCRMLID,MLID        MOVE IN THE MULTILINE ID NUMBER F04A
         MVC   HCRREQFL,REQFL      MOVE IN REQUEST FLAGS           F04A
         TM    MDBTLNT1,MDBTLABT   SEE IF LABEL LINE               F04A
         BNO   TXTNL4              NO, TRY DATA                    F04A
         MVI   HCRRECTP,HCRLABEL   SHOW IT IS A LABEL              F04A
TXTNL4   TM    MDBTLNT1,MDBTDATT   SEE IF DATA LINE                F04A
         BNO   TXTND4              NO, TRY END                     F04A
         MVI   HCRRECTP,HCRDATA    SHOW IT IS DATA                 F04A
TXTND4   TM    MDBTLNT1,MDBTENDT   SEE IF END LINE                 F04A
         BNO   MDBMLOK4            NO, OK                          F04A
         MVI   HCRRECTP,HCRDTEND   SHOW IT IS THE END LINE         F04A
MDBMLOK4 DS    0H                                                  F04A
***********************************************************************
* PLACE TEXT BEHIND CONTROL INFO                                   F04A
***********************************************************************
         MVC   LOFF,=F'0'          INIT OFFSET OF TEXT IN LOG RECORD
*                                   (ZERO FOR FIRST LINE, THEN ONE)
*                                                                  F04A
***********************************************************************
* LOOP THROUGH TEXT, ISSUE PUT FOR EACH PIECE OF TEXT UP TO LENGTH 128
*                                                                  F04A
***********************************************************************
TXTLP4   C     R2,=A(128-HCRHEADL) SEE IF TEXT IS TOO LONG FOR BUFFER  X
                                                                   F04A
         BNH   TXTDN4              DO LAST PIECE IF NOT            F04A
***********************************************************************
* TRUNCATE AT A BLANK OR COMMA, GET LENGTH IN R4                   F04A
***********************************************************************
         LA    R4,127-HCRHEADL(0,R3) STARTING POSITION             F04A
         LA    R1,118-HCRHEADL(0,R3) ENDING POSITION               F04A
         MVC   BLANKCT,=F'1'       ASSUME THERE IS A BLANK         F04A
TXTSC4   CLI   0(R4),C' '          LOOK FOR A BLANK                F04A
         BE    TXTL4               STOP IF FOUND                   F04A
         CLI   0(R4),C','          LOOK FOR A COMMA                F04A
         BNE   TXTBK4              NOT FOUND, TRY PREVIOUS POSITION    X
                                                                   F04A
         LA    R4,1(,R4)           KEEP COMMA ON THIS LINE         F04A
         MVC   BLANKCT,=F'0'       SHOW NO BLANK FOUND             F04A
         B     TXTL4               SPLIT THE LINE                  F04A
TXTBK4   BCTR  R4,0                BACK UP                         F04A
         CR    R4,R1               SEE IF AT END POSITION          F04A
         BNL   TXTSC4              LOOP BACK IF NOT                F04A
         LA    R4,128-HCRHEADL(0,R3) TOO BIG - TRUNC AT 128        F04A
         MVC   BLANKCT,=F'0'       SHOW NO BLANK FOUND             F04A
TXTL4    SR    R4,R3               CALCULATE LENGTH                F04A
***********************************************************************
* ISSUE PUT FOR THE PARTIAL TEXT                                   F04A
***********************************************************************
         BAS   R14,PUTREC          PUT THE SYSLOG RECORD           F04A
         MVI   HCRRECTP,HCRSPLIT   SHOW THIS IS A CONTINUATION     F04A
         MVC   LOFF,=F'1'          ADJUST TEXT OFFSET FOR CONT. LINES  X
                                                                   F04A
         A     R4,BLANKCT          SKIP THE BLANK IF THERE WAS ONE F04A
         SR    R2,R4               REDUCE THE COUNT                F04A
         AR    R3,R4               BUMP DOWN THE RECORD            F04A
         B     TXTLP4              LOOP TO DO ALL PIECES           F04A
***********************************************************************
* ISSUE PUT FOR LAST (OR ONLY) PIECE                               F04A
*                                                                  F04A
TXTDN4   DS    0H                                                  F04A
*                                                                  F04A
* IF THIS IS THE FIRST LINE OF A MULTILINE AND IS NOT AN OPERATOR  F04A
*     REQUEST (DESCRIPTOR CODE 9), APPEND THE MULTILINE ID TO THE  F04A
*     TEXT.  IF THERE IS NOT ENOUGH ROOM IN THE LINE FOR THE ID,   F04A
*     PRINT IT ON THE NEXT (SPLIT) LINE BY ITSELF.                 F04A
***********************************************************************
         CLI   HCRRECTP,HCRMLWTO   IS IT FIRST LINE OF MULTILINE?  F04A
         BNE   NOTFIRST            NO, OK                          F04A
         TM    DESC2,MDBDESCI      IS IT DESCRIPTOR CODE 9?        F04A
         BO    NOTFIRST            YES, OK                         F04A
         C     R2,=A(128-HCRHEADL-4) SEE IF THERE IS ROOM FOR MLID F04A
         BH    MLSPLIT4            GO SPLIT LINE IF NOT            F04A
*        BUILD LINE WITH MLID APPENDED                             F04A
         LR    R14,R2              GET TEXT LENGTH                 F04A
         BCTR  R14,0               SUBTRACT 1 FOR MVC              F04A
         EX    R14,MLMVC4          MOVE IN THE TEXT                F04A
         LA    R14,MLTEMPLN(R2)    END OF TEXT + 1                 F04A
         MVC   0(4,R14),HCID       APPEND MLID                     F04A
         A     R2,=F'4'            ADD 4 TO LENGTH FOR MLID        F04A
         LA    R3,MLTEMPLN         POINT TO NEW LINE               F04A
         B     NOTFIRST            GO PUT THE LINE                 F04A
MLMVC4   MVC   MLTEMPLN(*-*),0(R3) EXECUTED ABOVE                  F04A
*        PUT THE LINE AND BUILD A SPLIT LINE CONTAINING THE MLID   F04A
MLSPLIT4 DS    0H                                                  F04A
         LR    R4,R2               GET TEXT LENGTH                 F04A
         BAS   R14,PUTREC          PUT THE LINE                    F04A
         MVI   HCRRECTP,HCRSPLIT   SHOW THIS IS A CONTINUATION     F04A
         L     R2,=F'4'            LENGTH OF MLID                  F04A
         LA    R3,HCID             ADDRESS OF MLID                 F04A
         DROP  R9                                                  F04A
         B     NOTFIRST            GO PUT THE LINE                 F04A
TWODGYR4 DS    0H                  PROCESS 2-DIGIT YEAR OUTPUT RECORDS X
                                                                   F04A
* SET UP LOG RECORD BASE
*                                                                  F04M
         LA    R9,LOGBUF           SYSLOG RECORD                   F04C
         USING HCL,R9              ADDRESSABILITY                  F04C
***********************************************************************
* SEE IF THIS IS LINE 2 OR GREATER OF A MULTILINE, AND IF SO
*     SHOW THE MULTILINE ID AND
*     FILL IN THE RECORD TYPE FROM THE LINE TYPE                   F04M
***********************************************************************
         CLI   FIRSTLNE,C'Y'       SEE IF THIS IS THE FIRST LINE   F04M
         BE    MDBMLOK             BYPASS IF SO                    F04M
         MVC   HCLMLID,MLID        MOVE IN THE MULTILINE ID NUMBER F04M
         MVC   HCLREQFL,REQFL      MOVE IN REQUEST FLAGS           F04M
         TM    MDBTLNT1,MDBTLABT   SEE IF LABEL LINE               F04M
         BNO   TXTNL               NO, TRY DATA                    F04M
         MVI   HCLRECTP,HCLLABEL   SHOW IT IS A LABEL              F04M
TXTNL    TM    MDBTLNT1,MDBTDATT   SEE IF DATA LINE                F04M
         BNO   TXTND               NO, TRY END                     F04M
         MVI   HCLRECTP,HCLDATA    SHOW IT IS DATA                 F04M
TXTND    TM    MDBTLNT1,MDBTENDT   SEE IF END LINE                 F04M
         BNO   MDBMLOK             NO, OK                          F04M
         MVI   HCLRECTP,HCLDTEND   SHOW IT IS THE END LINE         F04M
MDBMLOK  DS    0H                                                  F04M
***********************************************************************
* PLACE TEXT BEHIND CONTROL INFO                                   F04M
***********************************************************************
         MVC   LOFF,=F'0'          INIT OFFSET OF TEXT IN LOG RECORD
*                                   (ZERO FOR FIRST LINE, THEN ONE)
*                                                                  F04M
***********************************************************************
* LOOP THROUGH TEXT, ISSUE PUT FOR EACH PIECE OF TEXT UP TO LENGTH 128
*                                                                  F04M
***********************************************************************
TXTLP    C     R2,=A(128-HCLHEADL) SEE IF TEXT IS TOO LONG FOR BUFFER  X
                                                                   F04M
         BNH   TXTDN               DO LAST PIECE IF NOT            F04M
***********************************************************************
* TRUNCATE AT A BLANK OR COMMA, GET LENGTH IN R4                   F04M
***********************************************************************
         LA    R4,127-HCLHEADL(0,R3) STARTING POSITION             F04M
         LA    R1,118-HCLHEADL(0,R3) ENDING POSITION               F04M
         MVC   BLANKCT,=F'1'       ASSUME THERE IS A BLANK         F04M
TXTSC    CLI   0(R4),C' '          LOOK FOR A BLANK                F04M
         BE    TXTL                STOP IF FOUND                   F04M
         CLI   0(R4),C','          LOOK FOR A COMMA                F04M
         BNE   TXTBK               NOT FOUND, TRY PREVIOUS POSITION    X
                                                                   F04M
         LA    R4,1(,R4)           KEEP COMMA ON THIS LINE         F04M
         MVC   BLANKCT,=F'0'       SHOW NO BLANK FOUND             F04M
         B     TXTL                SPLIT THE LINE                  F04M
TXTBK    BCTR  R4,0                BACK UP                         F04M
         CR    R4,R1               SEE IF AT END POSITION          F04M
         BNL   TXTSC               LOOP BACK IF NOT                F04M
         LA    R4,128-HCLHEADL(0,R3) TOO BIG - TRUNC AT 128        F04M
         MVC   BLANKCT,=F'0'       SHOW NO BLANK FOUND             F04M
TXTL     SR    R4,R3               CALCULATE LENGTH                F04M
***********************************************************************
* ISSUE PUT FOR THE PARTIAL TEXT                                   F04M
***********************************************************************
         BAS   R14,PUTREC          PUT THE SYSLOG RECORD           F04M
         MVI   HCLRECTP,HCLSPLIT   SHOW THIS IS A CONTINUATION     F04M
         MVC   LOFF,=F'1'          ADJUST TEXT OFFSET FOR CONT. LINES  X
                                                                   F04M
         A     R4,BLANKCT          SKIP THE BLANK IF THERE WAS ONE F04M
         SR    R2,R4               REDUCE THE COUNT                F04M
         AR    R3,R4               BUMP DOWN THE RECORD            F04M
         B     TXTLP               LOOP TO DO ALL PIECES           F04M
***********************************************************************
* ISSUE PUT FOR LAST (OR ONLY) PIECE                               F04M
*                                                                  F04M
TXTDN    DS    0H                                                  F04M
*                                                                  F04M
* IF THIS IS THE FIRST LINE OF A MULTILINE AND IS NOT AN OPERATOR  F04M
*     REQUEST (DESCRIPTOR CODE 9), APPEND THE MULTILINE ID TO THE  F04M
*     TEXT.  IF THERE IS NOT ENOUGH ROOM IN THE LINE FOR THE ID,   F04M
*     PRINT IT ON THE NEXT (SPLIT) LINE BY ITSELF.                 F04M
***********************************************************************
         CLI   HCLRECTP,HCLMLWTO   IS IT FIRST LINE OF MULTILINE?  F04M
         BNE   NOTFIRST            NO, OK                          F04M
         TM    DESC2,MDBDESCI      IS IT DESCRIPTOR CODE 9?        F04M
         BO    NOTFIRST            YES, OK                         F04M
         C     R2,=A(128-HCLHEADL-4) SEE IF THERE IS ROOM FOR MLID F04M
         BH    MLSPLIT             GO SPLIT LINE IF NOT            F04M
*        BUILD LINE WITH MLID APPENDED                             F04M
         LR    R14,R2              GET TEXT LENGTH                 F04M
         BCTR  R14,0               SUBTRACT 1 FOR MVC              F04M
         EX    R14,MLMVC           MOVE IN THE TEXT                F04M
         LA    R14,MLTEMPLN(R2)    END OF TEXT + 1                 F04M
         MVC   0(4,R14),HCID       APPEND MLID                     F04M
         A     R2,=F'4'            ADD 4 TO LENGTH FOR MLID        F04M
         LA    R3,MLTEMPLN         POINT TO NEW LINE               F04M
         B     NOTFIRST            GO PUT THE LINE                 F04M
MLMVC    MVC   MLTEMPLN(*-*),0(R3) EXECUTED ABOVE                  F04M
*        PUT THE LINE AND BUILD A SPLIT LINE CONTAINING THE MLID   F04M
MLSPLIT  DS    0H                                                  F04M
         LR    R4,R2               GET TEXT LENGTH                 F04M
         BAS   R14,PUTREC          PUT THE LINE                    F04M
         MVI   HCLRECTP,HCLSPLIT   SHOW THIS IS A CONTINUATION     F04M
         L     R2,=F'4'            LENGTH OF MLID                  F04M
         LA    R3,HCID             ADDRESS OF MLID                 F04M
         DROP  R9                                                  F04A
NOTFIRST DS    0H                                                  F04M
*                                                                  F04M
         LR    R4,R2               GET LENGTH OF TEXT              F04M
         BAS   R14,PUTREC          PUT THE SYSLOG RECORD           F04M
         DROP  R7                  DROP ADDRESSABILITY TO MDB TEXT     X
                                   OBJECT                          F04A
         PR                        RETURN TO CALLER                F04A
*
* MESSR -- DISPLAY A MESSAGE                                          *
*                                                                     *
*   INPUT:                                                            *
*     R2 -> TEXT OF MESSAGE                                           *
*     R14 = RETURN ADDRESS                                            *
***********************************************************************
MESSR    DS    0H
         BAKR  R14,0               SAVE CALLER'S ENVIRONMENT
         WTO   TEXT=(R2)           DISPLAY MESSAGE
         PR                        RETURN TO CALLER
*
ENDFILE1 DS        0H
         CLOSE     (SYUSR8)
         CLOSE     (SYUSR9)
         FIN       CR,TIPO=NORENT
*        +--------------------------------+
*>>>>>>>>| RESERVA DE AREAS ESTATICAS     |
*        +--------------------------------+
FISYS    DCB   DDNAME=SYSIN,MACRF=GL,DSORG=PS,EODAD=ENDFISYS
*        <> FB-80-0
SYUSR8   DCB       MACRF=GL,DSORG=PS,EODAD=ENDFILE1
*        <> VB-4096-8196
*
SYUSR9   DCB   DDNAME=SYUSR9,      DCB FOR OUTPUT FILE                 X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=VB,                                               X
               LRECL=132           128 + 4 FOR RDW
*
REQFL    DC    CL8' '              COPY OF REQUEST FLAGS
WTLFLAG  DS    C                   'Y' INDICATES A WTL
FIRSTLNE DS    C                   'Y' INDICATES THE FIRST MSG LINE
BLANKCT  DS    F                   COUNT OF BLANKS IN MESSAGE SEGMENT
LOFF     DS    F                   OFFSET OF TEXT IN LOG RECORD
DBLWD    DS    D                   WORK AREA FOR CVD
TWORK    DS    CL16                WORK AREA FOR HEX TRANSLATE
JOBNAME  DS    CL8                 JOBNAME
CONSNAME DS    CL8                 CONSOLE NAME
CONSID   DS    XL4                 CONSOLE ID
*
MCSFLAGS DS    0CL2                MCS FLAGS FROM MDB
MCSFLAG1 DS    X                   MCS FLAG 1
MCSFLAG2 DS    X                   MCS FLAG 2
*
KSYSIN   DC    CL8'SYSIN   '
KSYSOUT  DC    CL7'SYSOUT='
KDDNAME  DC    CL7'DDNAME='
*
* MENSAJES DEL PROGRAMA
*
MDCVMSG  DC    AL2(MDCVMLEN)
MDCVMSGC DC    CL12'**MDCVLOG** '
MDCVMSGT DC    CL40' '
MDCVMLEN EQU   *-MDCVMSGC
*
MDCVMSG1 DC    CL40'ASIGNACION DINAMICA ERRONEA. '
MDCVMSG2 DC    CL40'ERROR EN TIPO DE FICHERO. '
MDCVMSG3 DC    CL40'R15=XXXXXXXX  RC=XXXX '
*
PFLAGS   DS    XL1                 PARAMETER FLAGS
COPY     EQU   X'01'               "COPY" WAS SPECIFIED
DELETE   EQU   X'02'               "DELETE" WAS SPECIFIED
HCFORMAT EQU   X'04'               "HCFORMAT" WAS SPECIFIED
YEAR     EQU   X'08'               "HCFORMAT(YEAR)" WAS SPECIFIED
CENTURY  EQU   X'10'               "HCFORMAT(CENTURY)" WAS SPECIFIE
*
HCID     DC    CL4' '              HARDCOPY ID
         ORG   HCID+1              MULTILINE ID GOES IN BYTES 2-4
*
MLID     DC    C'NNN'              MULTILINE ID FROM MESSAGE
         ORG   ,
MLTEMPLN DC    CL80' '             WORK AREA FOR SPLIT LINE
*
DESCS    DS    0XL2                COPY OF DESCRIPTOR CODES
DESC1    DS    XL1                 DESCRIPTOR CODES BYTE 1
DESC2    DS    XL1                 DESCRIPTOR CODES BYTE 2
*
FLAGS1   DS    XL1                 MDB FLAGS
FLAGGO   EQU   X'01'               PROCESSED GENERAL OBJECT
FLAGCO   EQU   X'02'               PROCESSED CONTROL PROG OBJECT
*
* BUFFER FOR LOG RECORD
*
LOGBUFP  DS    0F                  PREFIX TO LOG RECORD
LOGBUFL  DS    H                   LENGTH OF LOGBUF DATA + 4
         DC    H'0'
LOGBUF   DS    CL128               LOG RECORD (MAPPED BY IHAHCLOG)
*
*
*      TRANSLATE TABLE FOR TESTING FOR EBCDIIC NUMBERS
*
NUMTAB   DC    240X'FF',10X'00',6X'FF'
*
*      TRANSLATE TABLES FOR SCANNING PARM FIELD
*
TRTTAB1  DC    256X'00'
         ORG   TRTTAB1+C','         STOP ON COMMA
         DC    C','
         ORG   TRTTAB1+C'('         STOP ON RIGHT PAREN
         DC    C'('
         ORG   ,
TRTTAB2  DC    256X'00'
         ORG   TRTTAB2+C')'         STOP ON LEFT PAREN
         DC    C')'
         ORG   ,
ZLPAREN  DC    0F'0',3X'00',C'('   3 ZEROS AND A LEFT PAREN
*
*      TRANSLATE TABLE FOR HEX CONVERSION
*      MUST BE AT LEAST 240 BYTES PAST BASE
HEXTAB   EQU   *-240
         DC    C'0123456789ABCDEF' MUST FOLLOW HEXTAB
*        +--------------------------------+
*>>>>>>>>| AREAS DE LLAMADA A MDALDIN     |
*        +--------------------------------+
$PETICI  DC        CL10'ALLOC  '
$PETICIR DC        CL10'ALLOCR '
$PETICIC DC        CL10'CONCAT '
$DATOSA  DC        CL60' '
$DATOSB  DC        CL92' '
*
$DATOSCI DC        CL08'SHR DSN='
$DATOSCD DS        CL44' '
$DATOSCF DC        CL3' ; '
*
$DATOSA0 DC        CL10'DD=SYUSR9 '
$DATOSA1 DC        CL04'DSN='
$DATOSA2 DC        CL44' '
$DATOSA9 DC        CL02' ;'
$DATOSB1 DC        CL45' NEW CATLG UNIT=SYSALLDA CYL PRIM=008 SEC=005'
$DATOSB2 DC        CL45' RLSE VB LRECL=132 BLKSIZE=0 CLOSE'
$DATOSB9 DC        CL02' ;'
*
*        INFORMACION DEVUELTA POR MDALDIN
*
$RETINF  DS        0CL60
$RIDDN   DS        CL8
$RIDSN   DS        CL44
$RIDSORG DS        CL2
$RIVOL   DS        CL6
*
$DACONDT DC        F'168'              <> HASTA 168 FICHEROS CONCAT
*
$DACONI  DC        C'DD='              <> INICIO DE CLAVE
$DACOND  DS        CL1512              <> ESPACIO PARA 168 DDNAME'S
$DACONF  DC        C' ; '              <> FIN TECNICO MDLADIN
*
         LTORG
*
$WORKDIN DC        F'4000'             <> WORK FACILITADA POR MODULO
         DS        CL71
$WORKRC  DS        CL02
         DS        CL3927
*
         PRINT NOGEN
         IEAVG132 ,                MDB PREFIX
         IEAVM105 ,                MDB
         IHAHCLOG ,                HARDCOPY LOG FORMAT
*
* ---------------------------------------------------------------------
*        DSECT DE PARAMETROS  CON CODIGOS DE LLAMADA/RETORNO
* ---------------------------------------------------------------------
$PARAM   DSECT
*
$LEN     DS    CL2          <> LONGITUD DE PARAMETRO (NO SE USA PERO SE
*                              PONE POR COMPATIBILIDAD A LLAMADAS JCL)
$DDN     DS    CL8          <> DDNAME DEL FICHERO CON LOS MDBS
*                              SI EL NOMBRE DE LA DDNAME ES SYSIN SE
*                              TRATA COMO UN FICHERO DE LRECL=80 DONDE
*                              EN LAS 44 PRIMERAS POSICIONES LLEVARA
*                              LOS DSNAMES A ALLOCAR DINAMICAMENTE Y
*                              CONCATENAR PARA SU TRATAMIENTO
*                              SE ADMITEN UN MAXIMO DE 168 FICHEROS QUE
*                              CORRESPONDERIAN A UNA SEMANA (7X24)
$DSN     DS    CL44         <> DSN/SYSOUT/DDN FICHERO SALIDA SYSLOG
*                              DDNAME=XXXXXXXX
*                              SYSOUT=X
*                              XXXXX.XXXXXX.XXXXX.XXX
*
         DCBD      DSORG=PS            <> MAPA DE REGISTROS MDB
*
         END
//
