
  March, 2001 (updated November 2006)

    This library contains several modules, clist, proc, and panels to
    set up our way to take advantage on OPERLOG.

    We appreciate comments or suggestions bout this tool.
    Some modules were taken from old share tapes. You'll fing their
    author's credits on top of them.
    Please, do not remove this data.

    If you want anybody to blame, here we are:

                   Angel Luis DOMINGUEZ MARTIN
                   BBVA Banco Bilbao Vizcaya Argentaria - Spain
                   email: u0z72b6@gmail.com

                   Jose Maria MARTINEZ BESTEIRO
                   Capgemini - Spain
                   email: josemmar@capgemini.es

  Antecedents: SYSLOG vs OPERLOG
  -----------------------------------

    We use in the past IBM's "powerfull program VPW, Virtual Paper
    Writter, to archive data from SYSLOG, so we could be able to
    search and exploit data from SYSLOG, using clist, rexx or
    any other program, as well as doing searchs directly from
    ISPF.

    Once we left being the Y2K transition, we scheduled the move to
    the new OPERLOG format, known as MDB records, in order to achieve
    as much knowledge as we could, over the whole sysplex, and every
    system within it.

    VPW was "killed" and a new set of programs and utilities took
    place instead.

    Nostalgics can download in Binary without CR/LF the member VPWDOC
    to PC and print it. It is a WORD document but unfortunatley in
    Spanish.

    With all our systems using OPERLOG, we start using IBM's sample
    program, named IEAMDBLG, that you can find in SYS1.SAMPLIB. This
    facility lets you write to SYSOUT, using SYSLOG format, the
    contents of the OPERLOG log stream, as well as mark MDBs for
    deletion.

    We found this program missed some options, that could be very
    ussefull, but decided, for compatibility reasons, not to write
    a new program, but to upgrade IEAMDBLG. Our version of the module,
    is fully compatible, with no JCL change, with the original one.

    We introduced four new options: COPY(ALL), COPY(MDB), DELETE(ALL)
    and ENQ. You can find a description of each in the program
    itself.

    This new version of the program is SMPE installable. You can find
    a SYSMOD sample in member @MVSX08. This usermod does mark the
    sample member IEAMDBLG, to get a warning message when another PTF
    updates it.

    We scheduled the program to run every 60 minutes at xx:05 time.
    We put MDBs on DASD dataset, under SMS control, with a management
    class criteria of keeping then on DASD for 10 days, making one
    backup copy, for recovery reasons, and deleting them.

    You will find a JCL sample for the STC in member OPERLOG.

    We manage a set of dataset with the following data set name
    pattern:
                       OPERLOG.PLEX$A.B0010328.T020500
                       OPERLOG.PLEX$A.B0010328.T030500
                       OPERLOG.PLEX$A.B0010328.T040500

    Where PLEX$A is the SYSPLEX name, B0010328 is the same as 20010328
    (AAAAMMDD form) and T020500 means the GMT time for first register
    inside this file. Depending on your GMT time zone, you can have a
    difference from local times inside and the dataset name outside.
    This is in order to make this application DST compliant, avoiding
    problems when local time changes back and forward daylight saving.

    If you start IEAMDBLG at IPL time and, after that, at an hourly
    basis, you will get about 24 files per day in normal operations.
    Instruct your SMS routines to migrate, delete or BKUP this files.

    We maintain 10 days on disk to access data interactively from ISPF,
    but this number can be easily changed, and this notation is useful
    to dyanamically allocate the data we need.

    As referred to in APAR PQ07414, SDSF gets slow response time using
    the OPERLOG component. So it is much better to search MDBs within
    the unloaded data on DASD, using the accompanying VERLOG facility
    from ISPF.


  USING VERLOG
  --------------------

    New MDB records can be accessed by browsing directly the data
    set, but MDB format is not really a friendly one. So we designed
    an ISPF application to get then as usual, with the aid of search
    arguments: sysids, start-date-time to end-date-time, and so on,
    making it ieasier accessing to LOG data. Search results can be
    put into a file, if you want, and you can save this selected log
    data for later use: i.e. reporting software and hardware problems
    to IBM or other ISVs.

    For compatibility purposes, data obtained are in SYSLOG format,
    so you can look at it as you did in the past.

    You can use clist VERLOG to start the search. Two panels,
    (members VLOGP00 and VLOGH00) and a program (member SYVERLOG) to
    do the search. You must tailor the clist to match your data set
    naming conventions, but we think it will not be a complex task
    for experienced system programmers that have started
    operlog and so on .... Of course this ISPF aplication will take
    into account differences between LOCAL and GMT time, so all your
    searchs will be performed using your local time.

    To obtain the real and executable SYVERLOG program you MUST run
    the JCL in $$ASM member. Tailor it to suit your standards and
    provide an intermediate LOAD to do the assembly. It will produce
    several routines and the facility load module itself.

    Of course, put CLIST and ISPPLIB in your SYSPROC and
    ISPPLIB concatenation. We suggest to put SYVERLOG in a
    linklisted library, but this is optional.

    Now, you are ready to enjoy this tool.


                              - - - o o o O o o o - - -

