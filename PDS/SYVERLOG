* +--- ZOS170E --------- SYVERLOG ------------------------------------+
* |                                                                   |
* | NOMBRE ....... SYVERLOG                                           |
* |                                                                   |
* | UBICACION .... SYST.LINKLIB           AMODE(24) RMODE(24)         |
* |                                                                   |
* | AUTOR ........ ANGEL LUIS DOMINGUEZ MARTIN. (C) 1999, 2004, 2006  |
* |                                                                   |
* | FUNCIONES .... FACILITA LA VISUALIZACION SELECTIVA DE LOS DATOS   |
* |                DE SYSLOG DE LOS DIFERENTES SYSPLEX/SISTEMAS, O    |
* |                OBTIENE EN BATCH LOS REGISTROS MDB DE UN PERIODO   |
* |                DE TIEMPO DETERMINADO Y/O UN SISTEMA CONCRETO.     |
* |                                                                   |
* | OBJETIVOS .... FAVORECER BUSQUEDAS DE DATOS DE OPERLOG DEL SISTEMA|
* |                                                                   |
* | LENGUAJE ..... ASSEMBLER H.                                       |
* |                                                                   |
* | TIPO ......... PROGRAMA                                           |
* |                                                                   |
* | PARAMETROS ... RECIBE OBLIGATORIAMENTE TRES PARAMETROS,           |
* | INTERAC.ISPF   SEPARADOS POR COMAS, COMO EL SIGUIENTE EJEMPLO     |
* |                                                                   |
* |                USTS.DM4216.SPFOLOG,DDNAME,OPERLOG.PLEX$A          |
* |                                                                   |
* |      MAX. 26   PRIMERO: PREFIJO FICHEROS DE RESULTADOS            |
* | (*)  OBL.  8*  SEGUNDO: DDNAME ASIGNADA FICHEROS INTERMEDIOS MDB  |
* |      MAX. 29   TERCERO: PREFIJO DE FICHEROS DE OPERLOG EXISTENTES |
* |                                                                   |
* | (*) CAMPO OBLIGATORIO DE OCHO POSICIONES. LA ULTIMA INDICA LA     |
* |     PANTALLA (SCREEN) QUE ESTA USANDO. SE UTILIZA PARA EL PO-     |
* |     SICIONAMIENTO DIRECTO DE MENSAJES EN PANTALLA POR TPUT.       |
* |                                                                   |
* | PARAMETROS ... RECIBE OBLIGATORIAMENTE TRES PARAMETROS,           |
* | BATCH SELECC.. SEPARADOS POR COMAS, POSICIONALMENTE FIJOS Y CUYOS |
* |                VALORES SON UTILIZADOS PERO NO VERIFICADOS POR EL  |
* |                PROGRAMA LO QUE PUEDE DAR LUGAR A ABENDS VARIOS,   |
* |                SEGUN EL EJEMPLO                                   |
* |                                                                   |
* |                AAAAMMDD/HHMM-AAAAMMDD/HHMM,SYSNAME ,OPERLOG       |
* |                                                                   |
* |      FIJO 27   FECHA HORA DE COMIENZO - FECHA HORA DE FIN         |
* |      FIJO  1   UNA COMA                                           |
* |      FIJO  8   SYSNAME SI SE DESEA SELECCIONAR UN SYSNAME CONCRETO|
* |                A ESPACIOS PARA SELECCIONAR TODO EL SYSPLEX        |
* |      FIJO  1   UNA COMA                                           |
* |      FIJO  8   PRIMER NIVEL DE FICHEROS DE OPERLOG                |
* |  TOTAL -- 45   POSICIONES EN EL CASO DE BATCH SELECCION           |
* +===================================================================+
* | AVISO IMPORTANTE DE CARA AL FUENTE DE ESTE PROGRAMA               |
* +===================================================================+
* |                                                                   |
* | LA NOTACION    *--->>>>    INDICA QUE HAY UNA BIFURCACION A LA    |
* |                            TARJETA A BASE DE DESPLAZAMIENTOS CON  |
* |                            SUMAS DE TAMANOS DE INSTRUCCIONES      |
* |                            OJO A SU MODIFICACION.                 |
* +-------------------------------------------------------------------+
SYVERLOG INICIO    (12,11,10),COMEN='VISUALIZA DATOS SYSLOG. ',        X
               VERSION=ZOS170E,                                        X
               AMODE=24,                                               X
               RMODE=24,                                               X
               TIPO=NORENT
*        +----------------------------+
*>>>>>>>>| DETECCION DE ENTORNO       |--------------------------------
*        +----------------------------+
         XC        SWTSOIND,SWTSOIND   <> INDICAMOS BATCH
         EXTRACT   ATSOIND,'S',FIELDS=(TSO)
         L         R15,ATSOIND
         TM        0(R15),X'80'        <> SI ESTA A UNOS ES TSO
         BO        LB05                <> PROCESO INTERACTIVO ISPF
*        +----------------------------+
*>>>>>>>>| RECEPCION DE PARAMETROS    |--------------------------------
*        | PROCESO BATCH DE SELECCION |
*        +----------------------------+
LB00     EQU       *
         L         R2,0(,R2)           <> DIRECCIONAR EL PARAMETRO
         SLR       R15,R15
         LH        R15,0(R2)           <> TAMA#O DEL PARAMETRO
         LTR       R15,R15             <> HAY PARAMETRO ?
         BZ        LB00AERR
         LA        1,L'PRBTIME+L'PRBPRF+L'PRBSYSNA+1+1
         CR        R15,R1              <> MAXIMO SUMA DE LONGITUDES
         BE        LB00A
LB00AERR ABEND     770,DUMP            <> ERRORES EN EL PARAMETRO
*                                      <> REVISAR LAS LONGITUDES QUE SE
*                                      <> HAN PASADO DESDE EL JCL
*
LB00A    EQU       *
         MVC       PRBTIME,2(R2)
         MVC       PRBSYSNA,L'PRBTIME+1+2(R2)
         MVC       PRBPRF,L'PRBTIME+L'PRBSYSNA+2+2(R2)
*
*        OBTENER EL NOMBRE DEL SYSPLEX PARA
*        ADICIONARLO AL PREFIJO DE OPERLOG
*
*
         MVI       @SYMBLIN,C' '
         MVC       @SYMBLIN+1(L'@SYMBLIN-1),@SYMBLIN
         MVC       @SYMBLIN(9),=C'&&SYSPLEX.'
*
         XC        SYMBP(SYMBP_LEN),SYMBP
         LA        R1,@SYMBLIN
         ST        R1,SYMBPPATTERN@
         LA        R1,L'@SYMBLIN
         ST        R1,SYMBPPATTERNLENGTH
         LA        R1,WORKA15
         ST        R1,SYMBPTARGET@
         LA        R1,L'WORKA15
         STCM      R1,B'1111',@SYMBLGT
         LA        R1,@SYMBLGT
         ST        R1,SYMBPTARGETLENGTH@
*                  ---SYMBPSYMBOLTABLE@
*                  ---SYMBPTIMESTAMP@
         LA        R1,@SYMBRC
         ST        R1,SYMBPRETURNCODE@
         LINK      EP=ASASYMBM,MF=(E,SYMBP)
*
*        PREPARAMOS PREFIJO EN EL PARAMETRO DE INTERACTIVO ISPF
*
         CLC       PRBPRF,BLANCOS
         BE        LB00AERR
         MVC       PRMDSN,BLANCOS      <> CLEAR CAMPOS PARAMETRO
         MVC       PRMDSN(8),PRBPRF    <> PREFIJO OPERLOG RECIBIDO
         LA        R1,PRMDSN+L'PRMDSN-1
LB00B1   EQU       *
         CLI       0(R1),C' '
         BNE       *+4+4
         BCT       R1,LB00B1
*
         MVI       1(R1),C'.'
         MVC       2(8,R1),WORKA15       <> PREFIJO OPERLOG.SYSPLEX
*
*        CALCULAR LA LONGITUD DEL PREFIXO OPERLOG.SYSPLEX
*
         LA        R15,PRMDSN+L'PRMDSN-1  APUNTAR AL ULTIMO
LB00B2   EQU       *
         CLI       0(R15),C' '
         BNE       LB00B2X
         BCT       R15,LB00B2
*
LB00B2X  EQU       *
         LA        R1,PRMDSN           <> COMIENZO DEL CAMPO
         SR        R15,R1              <> LONGITUD MENOS 1
         LA        R15,1(R15)          <> LONGITUD REAL
         ST        R15,PRMDSN_L        <> ALMACENAR LA LOONGITUD
*
         MVC       PRMDD,KMDBSEL       <> FORZADA MDBSEL EN BATCH
*
*        CAMPOS QUE SE OBTENDRIAN DEL PANEL
*
         MVC       @FECINI,PRBTIME
         MVC       @HORAINI,PRBTIME+9
         MVC       @FECFIN,PRBTIME+14
         MVC       @HORAFIN,PRBTIME+23
*
         MVI       @VLOARG1,C'*'       <> TODOS LOS REGISTROS
*
         MVC       @VLOARGM(8),PRBSYSNA   SI HAY UN SISTEMA O BLANCOS
*
         B         LB15LOAD            <> IR A CARGA DE MODULOS
*        +----------------------------+
*>>>>>>>>| RECEPCION DE PARAMETROS    |--------------------------------
*        | PROCESO INTERACTIVO ISPF   |
*        +----------------------------+
LB05     EQU       *
         OI        SWTSOIND,X'80'      <> INDICAMOS ENTORNO TSO
         L         R2,0(,R2)           <> DIRECCIONAR EL PARAMETRO
         MVC       PRMDD,BLANCOS       <> CLEAR CAMPOS PARAMETRO
         MVC       PRMDSN,BLANCOS      <> CLEAR CAMPOS PARAMETRO
         MVC       PRMPRF,BLANCOS      <> CLEAR CAMPOS PARAMETRO
         SLR       R15,R15
         LH        R15,0(R2)           <> TAMA#O DEL PARAMETRO
         LTR       R15,R15             <> HAY PARAMETRO ?
         BZ        LB10ABE
         LA        1,L'PRMDD+L'PRMDSN+L'PRMPRF+1+1
         CR        R15,R1              <> MAXIMO SUMA DE LONGITUDES
         BNH       LB10
LB10ABE  ABEND     771,DUMP            <> ERRORES EN EL PARAMETRO
*                                      <> EL PROGRAMADOR DE SISTEMAS
*                                      <> DEBE REVISAR LA CLIST/REXX
*                                      <> QUE DA CONTROL A ESTE PGM.
*
LB10MVC1 MVC       PRMPRF(0),0(R3)     <> MOVE PRMPRF
LB10MVC2 MVC       PRMDD(0),0(R3)      <> MOVE PRMDD
LB10MVC3 MVC       PRMDSN(0),0(R3)     <> MOVE PRMDSN
*
LB10     DS        0H                  <> GENERACION DE DATOS
         LA        R3,2(R2)            <> R3 COMIENZO DE CADA CAMPO
         LA        R4,2(R2)            <> R4 AVANCE POR EL PARAMETRO
         LA        R5,2(R2)
         AR        R5,R15              <> OCTETO SIGUIENTE A PARAMETRO
*
LB10A    DS        0H
         CLI       0(R4),C','
         BE        LB101
         LA        R4,1(R4)
         CR        R4,R5
         BNL       LB10ABE             <> FINALIZADO EL PARAMETRO
         B         LB10A               <> REPETIR BUCLE
*
LB101    DS        0H                  <> ENCONTRADA PRIMERA COMA
         SR        R4,R3               <> LONGITUD PRIMER CAMPO
         SLR       R14,R14             <> CLEAR R14
         LA        R14,L'PRMPRF        <> LONGITUD MAXIMA PREFIJO
         CR        R4,R14              <> MAYOR, ERROR
         BH        LB10ABE
         ST        R4,PRMPRF_L         <> ALMACENAR LONGITUD
         BCTR      R4,R0               <> UNO MENOS PARA EXECUTE
         EX        R4,LB10MVC1         <> MOVE VARIABLE
         AR        R3,R4
         AH        R3,KH2              <> EL UNO MENOS Y LA COMA
         LR        R4,R3               <> PREPARAR SEGUNDO PARAMETRO
*
LB20A    DS        0H
         CLI       0(R4),C','
         BE        LB201
         LA        R4,1(R4)
         CR        R4,R5
         BNL       LB10ABE             <> FINALIZADO EL PARAMETRO
         B         LB20A               <> REPETIR BUCLE
*
LB201    DS        0H                  <> ENCONTRADA PRIMERA COMA
         SR        R4,R3               <> LONGITUD PRIMER CAMPO
         SLR       R14,R14             <> CLEAR R14
         LA        R14,L'PRMDD         <> LONGITUD MAXIMA DD
         CR        R4,R14              <> MAYOR, ERROR
         BH        LB10ABE
         BCTR      R4,R0               <> UNO MENOS PARA EXECUTE
         EX        R4,LB10MVC2         <> MOVE VARIABLE
         AR        R3,R4
         AH        R3,KH2              <> EL UNO MENOS Y LA COMA
         LR        R4,R3               <> PREPARAR TERCER PARAMETRO
*
LB30A    DS        0H
         SR        R5,R3               <> LONGITUD ULTIMO
         SLR       R14,R14             <> CLEAR R14
         LA        R14,L'PRMDSN        <> LONGITUD MAXIMA DSN'S
         CR        R5,R14              <> MAYOR, ERROR
         BH        LB10ABE
         ST        R5,PRMDSN_L         <> ALMACENAR LONGITUD
         BCTR      R5,R0               <> UNO MENOS PARA EXECUTE
         EX        R5,LB10MVC3         <> MOVE VARIABLE
*
LB30Z    DS        0H
         CLC       PRMPRF,BLANCOS
         BE        LB10ABE
         CLC       PRMDD,BLANCOS
         BE        LB10ABE
         CLC       PRMDSN,BLANCOS
         BE        LB10ABE
*
*        +----------------------------------------+
*>>>>>>>>|   CARGA DE MODULOS                     |--------------------
*        +----------------------------------------+
LB15LOAD EQU       *
         LOAD      EP=ISPLINK
         ST        R0,AISPLINK
         LOAD      EP=MDTPUT
         ST        R0,AMDTPUT
         LOAD      EP=MDFECHS
         ST        R0,AMDFECHS
         LOAD      EP=MDCATSI
         ST        R0,AMDCATSI
         LOAD      EP=MDALDIN          <> AUNQUE LLAMADA CALL ESTATICA
         ST        R0,AMDALDIN
         LOAD      EP=MDCVLOG          <> AUNQUE LLAMADA CALL ESTATICA
         ST        R0,AMDCVLOG
*        +----------------------------------------+
*>>>>>>>>|   COMPROBACION DE ENTORNO              |--------------------
*        +----------------------------------------+
         TM        SWTSOIND,X'80'      <> SI ESTA A CEROS ES BATCH
         BZ        LB40                <> PROCESO BATCH - SALTAMOS
*        +----------------------------------------+
*>>>>>>>>|   DEFINICION DE VARIABLES PANEL ISPF   |--------------------
*        +----------------------------------------+
         L         R3,KTVARL           <> NRO.ELEMTNOS TABLA
         LA        R4,TVAR             <> COMIENDO DE LA TABLA
LB20     DS        0H
         LA        R5,LVARN(,R4)
         L         R6,LVARD(,R4)
         LA        R7,LVARL(,R4)
         L         R15,AISPLINK
         CALL      (15),(KVDEFINE,(R5),(R6),KCHAR,(R7)),VL
         LA        R4,LVARE(,R4)
         BCT       R3,LB20
*        +-----------------------------------------+
*>>>>>>>>|   LLAMADA A PANEL ISPF DE ACTUALIZACION |-------------------
*        +-----------------------------------------+
LB29     DS        0H
         MVC       @MSL(L'PRMDSN),PRMDSN
         B         LB30DIS
LB30     DS        0H
*
*        EN EL R1 RECIBIMOS EL NUMERO DE MENSAJE EN LA TABLA
*        DE MENSAJES PARA SU DISPLAY EN EL PANEL
*
         MH        R1,TBMENSAL+2
         LA        R15,TBMENSA
         LA        R15,0(R1,R15)       <> APUNTAR A MENSAJE
         MVC       @MSL,0(R15)
LB30DIS  DS        0H
         L         R15,AISPLINK
         CALL      (15),(KDISPLAY,KPANEL),VL
*
         LTR       R15,R15
         BZ        LB40
         B         ENDOFPG2
*        +-----------------------------------------+
*>>>>>>>>|   VERIFICACIONES DE CAMPOS DEL PANEL    |-------------------
*        +-----------------------------------------+
LB40     DS        0H
         ZAP       TOTRGSEL,KP0        <> CLEAR REGISTROS SELECCIONADOS
         LA        R9,WFECHS
         USING     INFECHSA,R9         <> MAPA AREA DE FECHAS
         XC        $CODIGO,$CODIGO
         MVI       $CODIGO+1,X'04'     <> VERIFICAR GREGORIANA
         MVI       $OBTJULI,C'S'       <> OBTENER JULIANA
         MVI       $OBTBASE,C'S'       <> OBTENER FECHA BASE
         MVC       $FEGREGO(4),@AI
         MVC       $FEGREGO+4(2),@MI
         MVC       $FEGREGO+6(2),@DI
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,0                <> MENSA=0
         B         LB30                <> REDISPLAY DEL PANEL
*---->>>
         MVC       FECINIJ,$FEJULIA
         MVC       BASINI,$FEBASE
         XC        $CODIGO,$CODIGO
         MVI       $CODIGO+1,X'04'
         MVI       $OBTJULI,C'S'       <> OBTENER JULIANA
         MVI       $OBTBASE,C'S'       <> OBTENER FECHA BASE
         MVC       $FEGREGO(4),@AF
         MVC       $FEGREGO+4(2),@MF
         MVC       $FEGREGO+6(2),@DF
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,1                <> MENSAJE 1
         B         LB30                <> REDISPLAY DEL PANEL
*---->>>
         MVC       FECFINJ,$FEJULIA
         MVC       BASFIN,$FEBASE
         CLC       BASINI,BASFIN
         BL        LB40B
         BH        LB40A
         CLC       @HORAINI,@HORAFIN   <> COMPARAR HORAS PARA DIA IGUAL
         BNH       LB40B
         LA        R1,3                <> MENSAJE 3
         B         LB30
LB40A    DS        0H
         LA        R1,2                <> MENSAJE 2
         B         LB30                <> REDISPLAY DEL PANEL
LB40B    DS        0H
         XC        $CODIGO,$CODIGO     <> OBTENER FECHA DEL DIA
         MVI       $OBTJULI,C'S'       <> OBTENER JULIANA
         MVI       $OBTBASE,C'S'       <> OBTENER FECHA BASE
         MVI       $OBTEDT,C'S'
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,5                <> MENSAJE 5
         B         LB30                <> NO DEBERIA DE OCURRIR
*---->>>                               <> FECHA BASE DEL DIA
         MVC       BASHOY,$FEBASE
         MVC       HORHOY,$HORA
*
         DROP      R9
         CLC       BASFIN,BASHOY       <> VERIFICAR FECHA FINAL
         BNH       *+4+4+4
         LA        R1,6                <> MENSAJE 6
         B         LB30
*---->>>
         BL        LB40D
         CLC       @HORAFIN,HORHOY     <> PARA DIA FINAL HOY
         BNH       *+4+4+4
         LA        R1,7
         B         LB30
*---->>>
LB40D    DS        0H
         PACK      WORKD,BASINI        <> DIFERENCIA ENTRE FECHAS
         CVB       R3,WORKD
         PACK      WORKD,BASFIN
         CVB       R4,WORKD
         SR        R4,R3
         CH        R4,KH9
         BNH       *+4+4+4
         LA        R1,8                <> MENSAJE 8
         B         LB30
*---->>>
         MVC       HORINIE(2),@HI      <> PREPARAR HORA INICIO EDITADA
         MVI       HORINIE+2,C'.'      <> PREPARAR HORA INICIO EDITADA
         MVC       HORINIE+3(2),@NI    <> PREPARAR HORA INICIO EDITADA
*
         MVC       HORFINE(2),@HF      <> PREPARAR HORA FIN EDITADA
         MVI       HORFINE+2,C'.'      <> PREPARAR HORA FIN EDITADA
         MVC       HORFINE+3(2),@NF    <> PREPARAR HORA FIN EDITADA
*
         LA        R15,@VNJOB          <> NUMERO DE JOB
         LA        R1,L'@VNJOB         <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VNJOB$
*
         LA        R15,@VNSTC          <> NUMERO DE STC
         LA        R1,L'@VNSTC         <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VNSTC$
*
         LA        R15,@VNTSU          <> NUMERO DE TSU
         LA        R1,L'@VNTSU          <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VNTSU$
*
         LA        R15,@VLOARGD        <> ARGUMENTO DESDE
         LA        R1,L'@VLOARGD        <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARGD$
*
         LA        R15,@VLOARGH        <> ARGUMENTO HASTA
         LA        R1,L'@VLOARGH       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARGH$
*
         LA        R15,@VLOARG1        <> ARGUMENTO UNO
         LA        R1,L'@VLOARG1       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARG1$
*
         LA        R15,@VLOARG2        <> ARGUMENTO DOS
         LA        R1,L'@VLOARG2       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARG2$
*
         LA        R15,@VLOARG3        <> ARGUMENTO TRES
         LA        R1,L'@VLOARG3       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARG3$
*
         LA        R15,@VLOSDSN        <> ARGUMENTO TRES
         LA        R1,L'@VLOSDSN       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOSDSN$
*
         LA        R15,@VLOARGM        <> ARGUMENTO MAQUINAS
         LA        R1,L'@VLOARGM       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARGM$
*
         LA        R15,@VLOARGN        <> NOMBRE DE JOB/STC/TSU
         LA        R1,L'@VLOARGN       <> SU LONGITUD TOTAL
         BAL       R14,RTLO00          <> ESTABLECER SU LONGITUD REAL
         ST        R1,VLOARGN$
*
         CLI       @X,C' '             <> COMPARADOR-1 A ESPACIOS
         BNE       LB40D01             <> SI SALTAR
         CLC       VLOARG2$,KF0
         BNE       LB40DERR            <> ERROR SINCRONISMO
         CLC       VLOARG3$,KF0
         BNE       LB40DERR            <> ERROR SINCRONISMO
         B         LB40D04
LB40D01  DS        0H                  <> @X ESTA A ESPACIOS
         CLC       VLOARG1$,KF0
         BE        LB40DERR            <> ERROR SINCRONISMO
         CLC       VLOARG2$,KF0
         BE        LB40DERR            <> ERROR SINCRONISMO
*
         CLI       @Y,C' '
         BNE       LB40D02
         CLC       VLOARG3$,KF0
         BNE       LB40DERR            <> ERROR SINCRONISMO
         B         LB40D04
LB40D02  CLI       @X,C' '
         BE        LB40DERR
         CLC       VLOARG3$,KF0
         BE        LB40DERR            <> ERROR SINCRONISMO
         B         LB40D04
LB40DERR DS        0H
         LA        R1,14               <> ERROR SINCRONISMO ARGS
         B         LB30
*
LB40D04  DS        0H
         MVI       GLBID,C' '          <> BLANQUEAR GLBID
         MVC       GLBID+1(L'GLBID-1),GLBID
*
         L         R1,VNJOB$
         LTR       R1,R1
         BZ        *+4+6+4+2+2+4
         MVC       JOBID,KJOB          <> CONSTANTE DE JOB
         LA        R15,JOBID+L'JOBID   <> DIRECCIONAR A VALOR NUMERICO
         SR        R15,R1
         BCTR      R1,R0
         EX        R1,JOBIDMVC         <> EFECTUAR MOVIMIENTO
*---->>>>
         L         R1,VNSTC$
         LTR       R1,R1
         BZ        *+4+6+4+2+2+4
         MVC       STCID,KSTC          <> CONSTANTE DE JOB
         LA        R15,STCID+L'STCID
         SR        R15,R1
         BCTR      R1,R0
         EX        R1,STCIDMVC         <> EFECTUAR MOVIMIENTO
*---->>>>
         L         R1,VNTSU$
         LTR       R1,R1
         BZ        *+4+6+4+2+2+4
         MVC       TSUID,KTSU          <> CONSTANTE DE JOB
         LA        R15,TSUID+L'TSUID   <> DIRECCIONAR A VALOR NUMERICO
         SR        R15,R1
         BCTR      R1,R0
         EX        R1,TSUIDMVC         <> EFECTUAR MOVIMIENTO
*---->>>>
         CLC       GLBID,BLANCOS       <> ALGUN XXXID ?
         BNE       *+4+6+4+6+4+4+4
         CLC       @VLOARGN,BLANCOS    <> ALGUN NOMBRE DE JOB
         BNE       *+4+6+4+4+4
         CLC       VLOARG1$,KF0        <> ALGUN ARGUMENTO ?
         BNE       *+4+4+4
         LA        R1,4                <> SOLICITAR ALGUN DATO
         B         LB30
*---->>>>
         CLC       GLBID,BLANCOS       <> XXXID O JOBNAME SON EXCLUSIV.
         BE        *+4+6+4+4+4         <> ESPACIOS, SALTAMOS
         CLC       @VLOARGN,BLANCOS    <> XXXID NO BLANCOS
         BE        *+4+4+4
         LA        R1,13               <> INFORMAR EXCLUSIVIDAD
         B         LB30
*---->>>>
         CLC       @VLOARGN,BLANCOS    <> XXXID O JOBNAME SON EXCLUSIV.
         BE        *+4+6+4+4+4         <> ESPACIOS, SALTAMOS
         CLC       GLBID,BLANCOS       <> XXXID NO BLANCOS
         BE        *+4+4+4
         LA        R1,13               <> INFORMAR EXCLUSIVIDAD
         B         LB30
*---->>>>
         MVI       TBMAQS,C'*'         <> INDICAR QUE NO HAY
         L         R15,VLOARGM$        <> LONGITUD REAL
         LTR       R15,R15
         BZ        LB40E               <> NO, SALTAR IDENTIF.MAQS
         BCTR      R15,R0              <> UNO MENOS PARA MOVE/EXECUTE
         EX        R15,MAQMVC
         EX        R15,MAQTR
         EX        R15,MAQCLC
         BE        *+4+4+4
         LA        R1,9
         B         LB30
*---->>>>
         LA        R9,TBMAQS           <> DIRECCIONAR TABLA MAQUINAS
*
         LA        R3,@VLOARGM         <> CAMPO DEL PANEL 60 POS
         L         R4,VLOARGM$         <> MAXIMO NUMERO DE POSICIONES
*
LB40M$A  DS        0H
         MVC       0(8,R9),BLANCOS     <> BLANQUEA ESA MAQUINA
         MVC       8(8,R9),KASTERIS    <> ASTERISCA LA SIGUIENTE
         LR        R5,R3               <> R5 PRINCIPIO DE UNA MAQUINA
         SLR       R6,R6               <> LONGITUD DE UNA MAQUINA
LB40M$   DS        0H
         CLI       0(R3),C','          <> BUSCANDO LA COMA
         BE        LB40M$E
         LA        R6,1(,R6)           <> SUMA 1 A CONT POSICIONES
         LA        R3,1(,R3)           <> AVANZA UNA POSICION
         BCT       R4,LB40M$           <> RESTA CONTADOR DE POSIC.
*
LB40M$E  DS        0H
         CH        R6,KH8              <> MAXIMO OCHO POSICIONES
         BNH       *+4+4+4
         LA        R1,9                <> ERROR EN CODIGOS MAQUINAS
         B         LB30
*---->>>
         CH        R6,KH0              <> ESTA A CERO POSICIONES
         BNE       *+4+4+4
         LA        R1,9                <> ERROR EN CODIGOS MAQUINAS
         B         LB30
*---->>>
         BCTR      R6,R0
         EX        R6,LB40$MVC         <> CARGAR ENTRADA MAQUINA
         LA        R9,8(,R9)           <> AVANZAR TABLA DE MAQUINAS
         LTR       R4,R4
         BZ        LB40E
         LA        R3,1(,R3)           <> SALTAMOS LA COMA
         BCTR      R4,R0               <> AVANZAMOS POSIC DE LA COMA
         LTR       R4,R4               <>
         BNZ       LB40M$A
         B         LB40E
*
LB40E    DS        0H
         LA        R8,WFECHS
         USING     INFECHSA,R8         <> MAPA AREA DE FECHAS
         XC        $CODIGO,$CODIGO
         MVI       $OBTEDT,C'S'
         MVI       $OBTGREG,C'S'
         MVI       $OBTJULI,C'S'
         MVI       $OBTBASE,C'S'
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,5                <> MENSAJE 5
         B         LB30                <> NO DEBERIA DE OCURRIR
*---->>>                               <> FECHA BASE DEL DIA
         MVC       HOYGREGO,$FEGREGO   <> FORMATO SYSLOG CLASICO
         NI        HOYGREGO,X'CF'
         MVI       HOYPUNT2,C'.'
         MVI       HOYHACHE,C'H'
         MVC       HOYHORA,$HORA
         DROP      R8
*
         MVI       STSAVEDS,C' '
         MVC       STSAVEDS+1(L'STSAVEDS-1),STSAVEDS
         MVC       STSAVEDS(L'PRMPRF),PRMPRF
         LA        R15,STSAVEDS
         A         R15,PRMPRF_L        <> SALTAR SU LONGITUD
         MVI       0(R15),C'.'         <> PUNTO DE SEPARACION
*
         CLC       @VLOSDSN,BLANCOS    <> GENERAR UN TEMPORAL ?
         BNE       LB40EX01            <> NO, SALTAMOS
*
*        SE HA PEDIDO GENERAR UN FICHERO TEMPORAL
*
         MVC       1(L'HOYSTAMP,R15),HOYSTAMP
         B         LB40E9              <> COMENZAR LOS PROCESOS
*
*        SE HA PEDIDO GENERAR UN FICHERO DE USUARIO
*
LB40EX01 DS        0H
         MVC       1(L'@VLOSDSN,R15),@VLOSDSN
         B         LB40E9              <> COMENZAR LOS PROCESOS
*        +----------------------------------------+
*>>>>>>>>|   GENERACION DE LOS NOMBRES DE FICHERO |--------------------
*        |   DE OPERLOG A LOCALIZAR               |
*        |   EN EL AREA PRMDSN ESTA EL PREFIJO    |
*        +----------------------------------------+
*        |   ACTUALIZACION 18-07-2006             |
*        |                                        |
*        |   AL CAMBIAR LOS NOMBRES EXTERNOS A    |
*        |   FECHA GMT PARA SALVAR LOS CAMBIOS DE |
*        |   HORA, LOS NOMBRES DE FICHERO A       |
*        |   BUSCAR DEBEN SER POR HORA GMT, QUE   |
*        |   SE OBTIENE A PARTIR DE LA TECLEADA   |
*        |   EN EL PANEL MEDIANTE LLAMADA AL      |
*        |   MODULO DE FECHAS FUNCION-GMT.        |
*        +----------------------------------------+
LB40MVSD MVC       DSNDESDE(0),PRMDSN
LB40E9   DS        0H
*
         TM        SWTSOIND,X'80'      <> SI ESTA A CEROS ES BATCH
         BZ        LB40EZ1             <> PROCESO BATCH - SALTAMOS
*
*        LIMPIEZA DE MENSAJES DE ERROR ANTERIOR PARA NO TENER QUE
*        HACER RE-DISPLAY DEL PANEL LO QUE OBLIGARIA AL USUARIO A
*        TECLEAR DOS VECES ENTER.
*
*        SE UTILIZA UN ACCESO DIRECTO A LA PANTALLA, POR ELLO SOLO
*        SE UTILIZA EN LA SCREEN 1, QUE ESTARA LOGICAMENTE POSICIONADA
*        EN LA LINEA 1
*
         MVC       $TPUTX(2),KC04
         CLI       PRMDD+7,C'1'
         BNE       LB40EZ
         MVI       $TPUTTXT,C' '
         MVC       $TPUTTXT+1(L'$TPUTTXT-1),$TPUTTXT
         L         R15,AMDTPUT
         CALL      (15),($TPUTPRM)
*
LB40EZ1  EQU       *
*        INICIALIZACIONES DE CADA BUSQUEDA
LB40EZ   DS        0H
         XC        SWRANGO,SWRANGO     <> CLEAR SWITCHES BUSQUEDAS
         XC        SWDESDE,SWDESDE     <> CLEAR BUSQUEDAS DSNDESDE
         MVC       DSNDESDE,BLANCOS
         MVC       DSNHASTA,BLANCOS
         MVC       DSNWK01,BLANCOS
         MVC       DSNWK02,BLANCOS
         MVI       RTCABRID+1,X'00'
         MVI       LB60SW+1,X'00'
         XC        $CLAVEMD,$CLAVEMD   <> ACCESOS A MDCATSI
*
         L         R3,PRMDSN_L         <> LONGITUD DEL PARAMETRO
         BCTR      R3,R0               <> RESTAR UNO PARA EXECUTE
         EX        R3,LB40MVSD
         LA        R3,DSNDESDE
         A         R3,PRMDSN_L
         MVI       00(R3),C'.'         <> PUNTO DE SEPARACION
         MVI       09(R3),C'.'         <> PUNTO DE SEPARACION
         MVI       10(R3),C'T'         <> COMIENZO DE HORA
         MVC       DSNHASTA,DSNDESDE   <> ESTRUCTURA SIMILAR EN HASTA
*
*        PASAMOS LAS FECHAS-HORAS DE INCIO Y FIN OBTENIDAS DEL
*        PANEL A LAS MISMAS PERO VERSION GMT PARA LOCALIZAR FICHEROS
*
         LA        R9,WFECHS
         USING     INFECHSA,R9         <> MAPA AREA DE FECHAS
         XC        $CODIGO,$CODIGO
         MVI       $CODIGO+1,X'0B'     <> GMTEAR LA FECHA
         MVC       $FEGMT(8),@FECINI
         MVC       $FEGMT+8(4),@HORAINI
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,17               <> MENSA=17
         B         LB30                <> REDISPLAY DEL PANEL
*---->>>
         MVC       @GMTINI,$FEGMT      <> PASAR A CAMPOS "GEMTEADOS"
         MVC       @HORGINI,$FEGMT+8
*
         XC        $CODIGO,$CODIGO
         MVI       $CODIGO+1,X'0B'     <> GMTEAR LA FECHA
         MVC       $FEGMT(8),@FECFIN
         MVC       $FEGMT+8(4),@HORAFIN
         SLR       R1,R1
         LA        R1,AWFECHS
         L         R15,AMDFECHS
         OILH      R15,X'8000'         <> MDFECHS ESTA EN AMODE 31
         BASSM     R14,R15
         CLI       $CODIGO,X'00'
         BE        *+4+4+4
         LA        R1,17               <> MENSA=17
         B         LB30                <> REDISPLAY DEL PANEL
*---->>>
         MVC       @GMTFIN,$FEGMT      <> PASAR A CAMPOS "GEMTEADOS"
         MVC       @HORGFIN,$FEGMT+8
*
         MVC       1(L'@GMTINI,R3),@GMTINI
         NI        1(R3),X'CF'         <> CONVERTIR A LETRA
         MVC       11(L'@HORGINI,R3),@HORGINI
         MVC       11+L'@HORGINI(2,R3),KCEROS
*
         LA        R3,DSNHASTA
         A         R3,PRMDSN_L
         MVC       1(L'@GMTFIN,R3),@GMTFIN
         NI        1(R3),X'CF'         <> CONVERTIR A LETRA
         MVC       11(L'@HORGFIN,R3),@HORGFIN
         MVC       11+L'@HORGFIN(2,R3),KCEROS
*
LB40F    DS        0H
         BAL       R9,RTCA00           <> OBTENER DSNAME
         CLI       DSNOBTEN,X'FF'      <> FINAL DE FICHERO
         BE        ENDOFPGM
*
* DISPLAY DE INFORMACION BAROMETRICA
*
         TM        SWTSOIND,X'80'      <> SI ESTA A CEROS ES BATCH
         BZ        LB60AP1             <> PROCESO BATCH - SALTAMOS
*
         LA        R3,TBTPUTMS
         MVC       20(L'DSNOBTEN,R3),DSNOBTEN
         L         R4,KF20             <> LINEA INICIAL BASICA
         CLI       PRMDD+7,C'1'        <> SCREEN DE ISPF 1?
         BE        *+4+4               <> SALTAMOS
         LA        R4,1(,R4)           <> ZSCREEN=2 SUMAMOS UNO
*---->>>
         ST        R4,STLINBAR         <> LINEA COMIENZO BAROMETRICO
LB50     DS        0H
         CLI       0(R3),C'*'          <> FIN DE TABLA
         BE        LB50A
         CVD       R4,WORKD
         UNPK      $TPUTX(2),WORKD+6(2)
         OI        $TPUTX+1,X'F0'
         MVC       $TPUTTXT,000(R3)
         L         R15,AMDTPUT
         CALL      (15),($TPUTPRM)
         LA        R4,1(R4)
         LA        R3,80(R3)
         B         LB50
*
LB50A    DS        0H
         SLR       R3,R3
         LA        R3,4                <> 4 PARPADEOS
         L         R1,STLINBAR         <> LINEA DE COMIENZO BAROMETRICO
         CVD       R1,WORKD
         UNPK      $TPUTX(2),WORKD+6(2)
         OI        $TPUTX+1,X'F0'
         MVC       $TPUTTXT,TBTPUTMS
         MVC       $TPUTTXT+20(L'DSNOBTEN),DSNOBTEN
LB50A1   DS        0H
         CLI       $TPUTTXT+20,C' '   <> ESTA A BLANCOS
         BE        *+4+6+4
         MVC       $TPUTTXT+20(44),BLANCOS
         B         *+4+6
         MVC       $TPUTTXT+20(44),DSNOBTEN
         L         R15,AMDTPUT
         CALL      (15),($TPUTPRM)
         BCT       R3,LB50A1
*
*        ASIGNACION DINAMICA DE FICHEROS
*
LB60AP1  EQU       *
         XC        MDALWORK,MDALWORK
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPINIT),VL
         LTR       R15,R15
         BZ        *+4+4+4
         LA        R1,11
         B         LB30
*--->>>>
         MVC       MDDAT2B+4(L'DSNOBTEN),DSNOBTEN
         LA        R1,MDDAT2B+L'MDDAT2B-1
LB60A    DS        0H
         CLI       0(R1),C' '
         BNE       *+4+4
         BCT       R1,LB60A
*--->>>>
         MVI       2(R1),C';'          <> INSERCCION ; DEL MDALDIN
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPALLOC,MDDAT2A,MDDAT2B),VL
         LTR       R15,R15             <> CODIGO RETORNO MDALDIN
         BZ        *+4+4+4
         LA        R1,11               <> MENSAJE 11
         B         LB30                <> REDISPLAY DEL PANEL
*--->>>>
         OPEN      (FOPERLOG,(INPUT))
         SLR       R7,R7               <> CONTADOR DE ACCESOS
         SLR       R8,R8               <> CONTADOR DE DIEZMILES
         MVI       $TPUTTXT,C' '
         MVC       $TPUTTXT+1(L'$TPUTTXT-1),$TPUTTXT
*
LB60SW   NOP       LB60READ
         MVI       *-3,X'F0'           <> MARCAR SW ANTERIOR
         LA        R1,FSESLOG          <> DIRECCIONAR LA DCB
         USING     IHADCB,R1           <> USING DCB
         MVC       DCBDDNAM,PRMDD      <> MOVER DDNAME A UTILIZAR
         DROP      R1
         OPEN      (FSESLOG,(OUTPUT))  <> FICHERO DE RESULTADOS
*
LB60READ DS        0H
         GET       FOPERLOG
         LR        R3,R1               <> R3 DIRECCIONA REGIS ENTRADA
         LA        R7,1(R7)            <> SUMAR 1 A REGISTROS LEIDOS
         C         R7,KF10000          <> DIEZ MIL LINEAS
         BNE       LB60XX
         SLR       R7,R7               <> CLEAR CONTADOR
         LA        R8,1(R8)            <> AUMENTO INDICADOR
*
*        BAROMETRIA
*
*
         TM        SWTSOIND,X'80'      <> SI ESTA A CEROS ES BATCH
         BZ        LB60XX              <> PROCESO BATCH - SALTAMOS
*
         L         R1,STLINBAR         <> LINEA DE COMIENZO BAROMETRICO
         LA        R1,1(,R1)           <> LINEA SIGUIENTE
         CVD       R1,WORKD
         UNPK      $TPUTX(2),WORKD+6(2)
         OI        $TPUTX+1,X'F0'
         LA        R15,$TPUTTXT
         AR        R15,R8
         MVI       0(R15),C'>'
         BCTR      R15,R0
         MVI       0(R15),C'='
         L         R15,AMDTPUT
         CALL      (15),($TPUTPRM)
*
LB60XX   DS        0H
*
*        BUSQUEDA EN LOS FICHEROS
*        R3 DIRECCIONA EL REGISTRO LEIDO
*
         USING     MDB,R3              <> DIRECCIONANDO MDB
         LA        R4,MDBHLEN(R3)
         USING     MDBG,R4             <> DIRECCIONANDO MDBG
         LR        R5,R4
         MVC       WORKH,MDBGLEN
         AH        R5,WORKH
         USING     MDBSCP,R5
         LR        R6,R5
         MVC       WORKH,MDBCLEN
         AH        R6,WORKH
         USING     MDBT,R6
*        +------------------------------------------------------+
*>>>>>>>>|   LOCALIZANDO FINAL DE DATOS .......                 |------
*        +------------------------------------------------------+
         CLC       MDBGDSTP(L'FECFINJ),FECFINJ
         BH        LB60Z10             <> MAYOR, SE ACABO TTO.
         BL        LB60A00             <> MENOR, ESTAMOS EN RANGO
*                                      <> FECHA IGUAL
         CLC       MDBGTIMH(L'HORFINE),HORFINE
         BH        LB60Z10             <> MAYOR, SE ACABO
         B         LB60A00             <> ESTAMOS EN RANGO
*        +------------------------------------------------------+
*>>>>>>>>|   SELECCIONANDO MAQUINA                              |------
*        +------------------------------------------------------+
LB60A00  DS        0H
         CLI       TBMAQS,C'*'         <> HAY SELECCION ?
         BE        LB60A10             <> NO SALTAMOS BUSQUEDA
         LA        R15,TBMAQS          <> TABLA DE MAQUINAS
LB60A00B DS        0H
         CLI       0(R15),C'*'
         BE        LB60READ            <> NO ES DE SELECCION, OTRO
         CLC       MDBGOSNM,0(R15)     <> COINCIDE MAQUINA SISTEMA
         BE        LB60A10             <> SISTEMA DETECTADO
         LA        R15,8(R15)          <> POSICIONAR OTRA MAQUINA
         B         LB60A00B
*        +------------------------------------------------------+
*>>>>>>>>|   LOCALIZANDO COMIENZO DE DATOS ....                 |------
*        +------------------------------------------------------+
LB60A10  DS        0H
         TM        SWRANGO,X'80'       <> YA SE DETECTO EL PRINCIPIO ?
         BO        LB60A20             <> SALTAMOS DETECCION PRIMARIA
*
         CLC       MDBGDSTP(L'FECINIJ),FECINIJ
         BL        LB60READ            <> LEER  OTRO REGISTRO
         BH        LB60A05             <> MARCAR DETECTADO INCIO
         CLC       MDBGTIMH(L'HORINIE),HORINIE  <> FECHA IGUAL
         BL        LB60READ
LB60A05  DS        0H
         OI        SWRANGO,X'80'       <> ACTIVAR COMIENZO HALLADO
*        +------------------------------------------------------+
*>>>>>>>>|   ESTAMOS EN RANGO FECHA-HORA PEDIDA                 |------
*        |   LOCALIZANDO DESDE (SI EXISTE)                      |
*        +------------------------------------------------------+
LB60A20  DS        0H
         TM        SWRANGO,X'C0'       <> YA TRATADO EL DESDE ?
         BO        LB60A30             <> SALTANDO AL HASTA
         CLC       @VLOARGD,BLANCOS    <> SOLICITADO UN DESDE ?
         BNE       LB60A20A
         OI        SWRANGO,X'40'       <> COMO LOCALIZADO DESDE
         B         LB60A30
LB60A20A DS        0H
         LA        R1,@VLOARGD
         ST        R1,WBUSDAT
         MVC       WBUSDATL,VLOARGD$
         ST        R3,WBUSCAM
         XC        WBUSCAML,WBUSCAML
         MVC       WBUSCAML+2(2),0(R3)
         BAL       R14,RTBUS           <> REALIZAR LA BUSQUEDA
         TM        SWLOC,X'80'         <> LOCALIZADO EL DESDE?
         BZ        LB60READ            <> NO LEER OTRO REGISTRO
         OI        SWRANGO,X'40'       <> INDICAR LOCALIZACION DE DESDE
         B         LB60A50             <> REGISTRO SELECCIONADO
*        +------------------------------------------------------+
*>>>>>>>>|   ESTAMOS EN RANGO FECHA-HORA PEDIDA                 |------
*        |   LOCALIZANDO HASTA (SI EXISTE)                      |
*        +------------------------------------------------------+
LB60A30  DS        0H
         CLC       @VLOARGH,BLANCOS    <> SOLICITADO UN HASTA ?
         BE        LB60A50             <> NO REGISTRO SELECCIONADO
         LA        R1,@VLOARGH
         ST        R1,WBUSDAT
         MVC       WBUSDATL,VLOARGH$
         ST        R3,WBUSCAM
         XC        WBUSCAML,WBUSCAML
         MVC       WBUSCAML+2(2),0(R3)
         BAL       R14,RTBUS           <> REALIZAR LA BUSQUEDA
         TM        SWLOC,X'80'         <> LOCALIZADO EL HASTA
         BO        LB60Y10             <> SE ACABO EL TRATAMIENTO
         B         LB60A50
*        +------------------------------------------------------+
*>>>>>>>>|   REGISTRO SELECCIONADO DENTRO DEL RANGO             |------
*        +------------------------------------------------------+
LB60A50  DS        0H
         CLC       GLBID,BLANCOS       <> HAY ALGUN XXXID?
         BE        LB60A50M            <> NO, SALTAMOS COMPROBACION
         CLC       MDBCOJID,BLANCOS    <> HAY DATO EN EL REGISTRO ?
         BE        LB60READ            <> SI, SELECCIONAR
         CLC       MDBCOJID,JOBID      <> NO, LEER OTRO
         BE        LB60A50S            <> SI, SELECCIONAR
         CLC       MDBCOJID,STCID      <> COINCIDE STC?
         BE        LB60A50S            <> SI, SELECCIONAR
         CLC       MDBCOJID,TSUID      <> COINCIDE TSU?
         BNE       LB60READ            <> NO SELECCIONADO, LEER OTRO
LB60A50S DS        0H
         CLC       VLOARG1$,KF0        <> HAY MAS ARGUMENTOS ?
         BNE       LB60A60             <> SI, SEGUIR PROCESANDO
         PUT       FSESLOG,(R3)
         AP        TOTRGSEL,KP1        <> SUMAR CONTADOR REGISTROS SEL.
         B         LB60READ
*
LB60A50M DS        0H
         CLC       @VLOARGN,BLANCOS    <> CONSIGNADO UN JOBNAME ?
         BE        LB60A60             <> NO, SALTAMOS
         CLC       MDBCOJBN,@VLOARGN   <> COINCIDE JOBNAME ORIGINATING
         BNE       LB60READ            <> SI, SELECCIONAR
         CLC       VLOARG1$,KF0        <> HAY MAS ARGUMENTOS ?
         BNE       LB60A60             <> SI, SEGUIR PROCESANDO
         PUT       FSESLOG,(R3)
         AP        TOTRGSEL,KP1        <> SUMAR CONTADOR REGISTROS SEL.
         B         LB60READ
*        +------------------------------------------------------+
*>>>>>>>>|   PASADOS LOS FILTROS ANTERIORES                     |------
*        |   BUSQUEDA DE ARGUMENTOS 1 A 3 CON SUS Y / O         |------
*        +------------------------------------------------------+
LB60A60  DS        0H                  <> BUSQUEDA Y/O Y ARGUMENTOS
         XC        SWARG,SWARG
         CLC       VLOARG1$,KF0        <> NO HAY ARGUMENTO-1 ?
         BE        LB60A60A
         CLC       VLOARG1$,KF1        <> ARGUMENTO 1 LONGITUD 1
         BNE       LB60A60C
         CLI       @VLOARG1,C'*'       <> SELECCIONAR TODO
         BNE       LB60A60C            <> NO,PROCESO COMPARATIVO NORMAL
LB60A60A DS        0H                  <> BUSQUEDA Y/O Y ARGUMENTOS
         PUT       FSESLOG,(R3)
         AP        TOTRGSEL,KP1        <> SUMAR CONTADOR REGISTROS SEL.
         B         LB60READ
LB60A60C DS        0H                  <> BUSQUEDA Y/O Y ARGUMENTOS
         LA        R1,@VLOARG1
         ST        R1,WBUSDAT
         MVC       WBUSDATL,VLOARG1$
         ST        R3,WBUSCAM
         XC        WBUSCAML,WBUSCAML
         MVC       WBUSCAML+2(2),0(R3)
         BAL       R14,RTBUS           <> REALIZAR LA BUSQUEDA
         TM        SWLOC,X'80'         <> LOCALIZADO EL HASTA
         BZ        *+4+4
         OI        SWARG,X'80'         <> DETECTADO ARGUMENTO-1
*--->>>>
         CLC       VLOARG2$,KF0        <> EXISTE ARGUMENTO-2
         BE        LB60A60Q
         LA        R1,@VLOARG2
         ST        R1,WBUSDAT
         MVC       WBUSDATL,VLOARG2$
         ST        R3,WBUSCAM
         XC        WBUSCAML,WBUSCAML
         MVC       WBUSCAML+2(2),0(R3)
         BAL       R14,RTBUS           <> REALIZAR LA BUSQUEDA
         TM        SWLOC,X'80'         <> LOCALIZADO EL HASTA
         BZ        *+4+4
         OI        SWARG,X'40'         <> DETECTADO ARGUMENTO-2
*--->>>>
         CLC       VLOARG3$,KF0        <> EXISTE ARGUMENTO-3
         BE        LB60A60Q
         LA        R1,@VLOARG3
         ST        R1,WBUSDAT
         MVC       WBUSDATL,VLOARG3$
         ST        R3,WBUSCAM
         XC        WBUSCAML,WBUSCAML
         MVC       WBUSCAML+2(2),0(R3)
         BAL       R14,RTBUS           <> REALIZAR LA BUSQUEDA
         TM        SWLOC,X'80'         <> LOCALIZADO EL HASTA
         BZ        *+4+4
         OI        SWARG,X'20'         <> DETECTADO ARGUMENTO-3
*--->>>>
LB60A60Q DS        0H
*
*        LA CODIFICACION PARA EL TRATAMIENTO DE LOS ARGUMENTOS Y LAS
*        COMPARACIONES NO ES MUY FINA, PERO FUNCIONA. PROMETO PROCEDER
*        A SU ARREGLO Y MEJORA ALGUN DIA SI DISPONGO DE TIEMPO.
*
         CLI       @X,C' '             <> SOLO UN ARGUMENTO ?
         BNE       LB70A               <> NO, HAY MAS DE UNO
         TM        SWARG,X'80'
         BZ        LB60READ
         B         LB70SEL
LB70A    DS        0H
         CLC       @COMPA,KCO
         BNE       LB70B
         TM        SWARG,X'C0'         <> ARG-1 O ARG-2
         BZ        LB60READ
         B         LB70SEL
LB70B    DS        0H
         CLC       @COMPA,KCOO
         BNE       LB70C
         TM        SWARG,X'E0'         <> ARG-1 O ARG-2 O ARG-3
         BZ        LB60READ
         B         LB70SEL
LB70C    DS        0H
         CLC       @COMPA,KCOY
         BNE       LB70D
         TM        SWARG,X'80'         <> ARG-1 O (ARG-2 Y ARG-3)
         BO        LB70SEL
         TM        SWARG,X'60'         <>
         BO        LB70SEL
         B         LB60READ
LB70D    DS        0H
         CLC       @COMPA,KCY
         BNE       LB70E
         TM        SWARG,X'C0'         <> ARG-1 O ARG-2 O ARG-3
         BO        LB70SEL
         B         LB60READ
LB70E    DS        0H
         CLC       @COMPA,KCYO
         BNE       LB70F
         TM        SWARG,X'20'         <> ARG-1 O ARG-2 O ARG-3
         BO        LB70SEL
         TM        SWARG,X'C0'         <> ARG-1 O ARG-2 O ARG-3
         BO        LB70SEL
         B         LB60READ
LB70F    DS        0H
         CLC       @COMPA,KCYY
         BNE       LB70G
         TM        SWARG,X'E0'         <> ARG-1 Y ARG-2 Y ARG-3
         BO        LB70SEL
         B         LB60READ
LB70G    DS        0H
         ABEND     774,DUMP           <> ERROR EN LA LOGICA AND/OR DE
*                                     <> TTO. DE ARGUMENTOS
LB70SEL  DS        0H
         PUT       FSESLOG,(R3)
         AP        TOTRGSEL,KP1        <> SUMAR CONTADOR REGISTROS SEL.
         B         LB60READ
*        +------------------------------------------------------+
*>>>>>>>>|   ACABADO EL PROCESO DE LO PEDIDO ....               |------
*        +------------------------------------------------------+
LB60Y10  DS        0H
         PUT       FSESLOG,(R3)
LB60Z10  DS        0H
         CLOSE     (FOPERLOG)
         B         ENDOFPGM            <> ACABAMOS EL PROCESO
*
ZOPERLOG DS        0H                  <> FIN DE OPERLOG
         CLOSE     (FOPERLOG)
         B         LB40F               <> OBTENER MAS NOMBRES
         EJECT
*        +----------------------------------------+
*>>>>>>>>|   BUSQUEDA DE DATO EN UN CAMPO         |--------------------
*        |                                        |
*        |   RECIBE CAMPOS                        |
*        |                                        |
*        |     WBUSDAT    DIRECCION DATO A BUSCAR |
*        |     WBUSDATL   LONGITUD  DATO A BUSCAR |
*        |     WBUSCAM    DIRECCION CAMPO         |
*        |     WBUSCAML   LONGITUD  CAMPO         |
*        |                                        |
*        |  TENER EN CUENTA LA TABLA DE MAQUINAS  |
*        |                                        |
*        |  SALVADO/RESTORE DE REGISTROS          |
*        |                                        |
*        |   RETORNA   SWLOC    X'80' ENCONTRADO  |
*        |             SWLOC    X'00' NO ENCONTR. |
*        |                                        |
*        |   ENLACE    R14                        |
*        +----------------------------------------+
RTBUS    DS        0H
         XC        SWLOC,SWLOC         <> INDICAR NO LOCALIZADO
         STM       R3,R9,STREG3A9      <> SALVAR LOS REGISTROS
*
         L         R1,WBUSCAML         <> LONGITUD TOTAL
         S         R1,WBUSDATL         <> MENOS LONGITUD CAMPO
         LA        R1,1(R1)            <> + 1
         L         R5,WBUSCAM
         AR        R5,R1               <> ULTIMO OCTETO A MIRAR
         SLR       R4,R4
         LA        R4,1(R4)            <> AVANCE DE OCTETO EN OCTETO
         L         R3,WBUSCAM          <> COMIENZO DE BUSQUEDA
         B         RTBUS10
RTBUSCLC CLC       0(0,R3),0(R7)       <> COMPARE DINAMICA
RTBUS10  DS        0H
         L         R1,WBUSDATL
         BCTR      R1,R0               <> UNO MENOS PARA EXECUTE
         L         R7,WBUSDAT          <> DATO A BUSCAR
         EX        R1,RTBUSCLC         <> COMPARE
         BE        RTBUS20             <> ENCONTRADO
         BXLE      R3,R4,RTBUS10       <> REHACER EL BUCLE
         B         RTBUS90             <> RETORNO NO ENCONTRADO
RTBUS20  DS        0H
         OI        SWLOC,X'80'         <> INDICAR ENCONTRADO
RTBUS90  DS        0H
         LM        R3,R9,STREG3A9      <> SALVAR LOS REGISTROS
         BR        R14
*        +----------------------------------------+
*>>>>>>>>|   AJUSTE DE LONGITUDES CAMPOS PANEL    |--------------------
*        |                                        |
*        |   RECIBE:   R15: CAMPO                 |
*        |             R1   LONGITUD TOTAL        |
*        |   RETORNA   R1   LONGITUD REAL         |
*        |   ENLACE    R14                        |
*        +----------------------------------------+
RTLOCLC  CLC       0(0,R15),BLANCOS    <> SI TODO EL CAMPO A BLANCOS
RTLO00   DS        0H
         BCTR      R1,R0               <> LONGITUD MENOS UNO
         EX        R1,RTLOCLC          <> EJECUTE COMPARE
         BNE       RTLO10
         SLR       R1,R1               <> LONGITUD A CERO
         B         RTLO30              <> IR A DEVOLVER CONTROL
*
RTLO10   DS        0H
         AR        R15,R1              <> APUNTAR ULTIMA POSICION
*
RTLOBUC  DS        0H
         CLI       0(R15),C' '         <> BUSQUEDA DE NO BLANCO
         BNE       RTLO20
         BCTR      R1,R0               <> RESTANDO LONGITUDES
         BCT       R15,RTLOBUC         <> RESTANDO POSICIONES Y BUCLE
*
         ABEND     778,DUMP            <> NO PUEDE PASAR POR AQUI
*
RTLO20   DS        0H
         CLI       0(R15),C'<'         <> CARACTER ESPECIAL
         BE        RTLO30
         LA        R1,1(R1)            <> RECUPERAR LA LONGITUD
*
RTLO30   DS        0H
         BR        R14                 <> DEVOLUCION DE CONTROL
         EJECT
*        +----------------------------------------+
*>>>>>>>>|   OBTENCION DE DSNAMES DEL CATALOGO    |--------------------
*        |                                        |
*        |   ENLACE CON EL R9                     |
*        |                                        |
*        |   EN UNA SUBRUTINA LLAMA AL MDCATSI    |
*        |   ENLAZANDO CON EL MEDIANTE R8         |
*        |                                        |
*        |   LOS DATOS DSNDESDE Y DSNHASTA SON    |
*        |   TENIDOS EN CUENTA PARA DETERMINAR    |
*        |   LOS FICHEROS A ABRIR.                |
*        |                                        |
*        |   EL AREA DSNOBTEN CONTENDRA EL NOMBRE |
*        |   DE FICHERO A UTILIZAR POR EL PROGRAMA|
*        +----------------------------------------+
RTCA00   DS        0H
RTCA10   DS        0H                  <> PUENTE DEL SALTO
         CLI       DSNWK01,X'00'       <> AREA 1 RELLENA ?
         BNE       RTCA20              <> SI, IR A VERIFICAR AREA 2
         BAL       R8,RTMO00           <> CARGAR AREA
         MVC       DSNWK01,$DRENAME    <> ALMACENAR EN PRIMERA AREA
         CLI       $DRENAME,X'FF'      <> HUBO FIN DE FICHERO
         BNE       RTCA20
         MVI       DSNWK02,X'FF'       <> MARCAR TAMBIEN LA SEGUNDA
*
RTCA20   DS        0H                  <> PUENTE DEL SALTO
         CLI       DSNWK02,X'00'       <> AREA 1 RELLENA ?
         BNE       RTCA30              <> SI, CARGAR AREA 2
         BAL       R8,RTMO00           <> CARGAR AREA
         MVC       DSNWK02,$DRENAME    <> ALMACENAR EN PRIMERA AREA
         B         RTCA30
*
*        EN ESTE PUNTO LAS DOS AREAS ESTAN RELLENAS
*        CON LOS REGISTROS DE DSNAME DEL CATALOGO
*
RTCA30   DS        0H
         TM        SWDESDE,X'80'       <> ESTAMOS LOCALIZANDO DESDE ?
         BO        RTCA40              <> NO, TRABAJAR CON DSNHASTA
*
*        LOCALIZANDO DSNDESDE ....
*
         CLC       DSNDESDE,DSNWK01
         BE        RTCA30E
         BL        RTCA30L
         BH        RTCA30H
RTCA30E  DS        0H
         OI        SWDESDE,X'80'       <> ENCONTRADO EL INICIO
         MVC       DSNOBTEN,DSNWK01
         MVC       DSNWK01,DSNWK02
         MVI       DSNWK02,X'00'       <> INVALIDAR ENTRADA 2
         B         RTCA99              <> DEVOLVER CONTROL
RTCA30H  DS        0H
         CLC       DSNDESDE,DSNWK02    <> IGUAL A ENTRADA-2
         BH        RTCA30HH
         OI        SWDESDE,X'80'       <> DEVOLVEMOS ENTRADA-1
         MVC       DSNOBTEN,DSNWK01
         MVC       DSNWK01,DSNWK02
         MVI       DSNWK02,X'00'       <> INVALIDAR ENTRADA 2
         B         RTCA99              <> DEVOLVER CONTROL
RTCA30HH DS        0H
RTCA30L  DS        0H
         MVC       DSNWK01,DSNWK02
         MVI       DSNWK02,X'00'       <> INVALIDAR ENTRADA 2
         B         RTCA20              <> OBTENER OTRA ENTRADA-2
*
*        LOCALIZANDO DSNHASTA ...
*
RTCA40   DS        0H
         CLC       DSNWK01,DSNHASTA    <> OJO PREGUNTA AL REVES
         BE        RTCA40E
         BL        RTCA40L
         BH        RTCA40H
RTCA40L  DS        0H
RTCA40E  DS        0H
         MVC       DSNOBTEN,DSNWK01
         MVC       DSNWK01,DSNWK02
         MVI       DSNWK02,X'00'       <> INVALIDAR ENTRADA 2
         B         RTCA99              <> DEVOLVER CONTROL
RTCA40H  DS        0H
         MVI       DSNOBTEN,X'FF'
         MVC       DSNOBTEN+1(L'KFDSNEND),KFDSNEND
*
RTCA99   DS        0H
         BR        R9
*        +----------------------------------------+
*>>>>>>>>|   ACCESO AL CATALOGO CON MDCATSI       |--------------------
*        |                                        |
*        |   LOS DATOS QUEDAN EN EL PROPIO AREA   |
*        |   DEL MODULO PARA QUE LOS RECOJA EL    |
*        |   LLAMANTE                             |
*        |                                        |
*        |   ENLACE CON EL R8                     |
*        +----------------------------------------+
RTMOMVC  MVC       0(0,R1),PRMDSN
RTMO00   DS        0H
*
RTCABRID NOP       RTMO10              <> PUENTE PRIMERA VEZ
         MVI       *-3,X'F0'           <> PROVOCAR EL PUENTE
         XC        $CODIGCA,$CODIGCA
         MVI       $FILTRO,C' '
         MVC       $FILTRO+1(L'$FILTRO-1),$FILTRO
         LA        R1,$FILTRO
         L         R15,PRMDSN_L
         BCTR      R15,R0
         EX        R15,RTMOMVC
         LA        R1,$FILTRO
         L         R15,PRMDSN_L
         AR        R1,R15
         MVC       0(L'KMASK1,R1),KMASK1
         XC        $CLAVEMD,$CLAVEMD
         MVC       $WRKLEN,KF4096
*
RTMO10   DS        0H
         L         R15,AMDCATSI
         CALL      (15),($CODIGCA)
         CLI       $CODIGCA,X'FF'
         BNE       RTMO10A
         ABEND     773,DUMP            <> ERRORES DE ACCESO A CATALOGO
RTMO10A  DS        0H
         CLI       $CODIGCA+1,X'00'
         BE        RTMO99
         MVI       $DRENAME,X'FF'      <> MARCAR FIN DE FICHERO
RTMO99   DS        0H
         BR        R8                  <> DEVOLVER CONTROL
         EJECT
*        +----------------------------------------+
*>>>>>>>>|   FINALIZACION DEL PROGRAMA            |--------------------
*        +----------------------------------------+
ENDOFPGM DS        0H
         CLOSE     (FSESLOG)
*
         TM        SWTSOIND,X'80'      <> SI ESTA A CEROS ES BATCH
         BZ        ENDOFPG2            <> PROCESO BATCH - SALTAMOS
*
*        +----------------------------------------+
*>>>>>>>>|   LLAMADA A MDCVLOG PARA CONVERTIR EL  |--------------------
*        |   LOG DE FORMATO MDB A SYSLOG CLASICO  |--------------------
*        +----------------------------------------+
LB80CALL DS        0H
         CLC       @VLOSDSN,BLANCOS    <> SE SOLICITO UN TEMPORAL ?
         BE        LB80CALX            <> SI, HACER LA LLAMADA
*
*        SI SE HA PEDIDO UN FICHERO NO TEMPORAL SE INTENTA SU
*        BORRADO SIN MAS POR SI YA EXISTIERA PARA EVITAR ABEND 888
*        EN EL MODULO DE GENERACION DEL FICHERO
*
         MVC       MDDAT3B+4(L'STSAVEDS),STSAVEDS
         LA        R1,MDDAT3B+L'MDDAT3B-1
*--->>>>
         CLI       0(R1),C' '
         BNE       *+4+4
         BCT       R1,*-4-4            <> REHACER BUCLE
*--->>>>
         MVI       2(R1),C';'          <> INSERCCION ; DEL MDALDIN
*
         XC        MDALWORK,MDALWORK
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPALLOC,MDDAT3AA,MDDAT3B),VL
         LTR       R15,R15             <> CODIGO RETORNO MDALDIN
         BNZ       LB80CALX            <> NO, SUPONEMOS NO EXISTE
*--->>>>
         XC        MDALWORK,MDALWORK
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPUNALL,MDDAT3AU,MDDAT3B),VL
         LTR       R15,R15             <> CODIGO RETORNO MDALDIN
         BZ        *+4+4+4
         LA        R1,15               <> MENSAJE 16
         B         LB30                <> REDISPLAY DEL PANEL
*
LB80CALX DS        0H
         MVC       CVLOGDD,PRMDD       <> DD UTILIZADA
         MVC       CVLOGDSN,STSAVEDS   <> FICHERO SOLICITADO PARA DATOS
*
*        DS    0H
*        MVC   WTO004+8(50),CVLOGPRM
*TO004   WTO   '                                                      '
*
         L         R15,AMDCVLOG
         CALL      (15),(CVLOGPRM),VL
*
         MVC       WSLOGDSN,BLANCOS
         MVC       WSLOGDSN+1(L'CVLOGDSN),CVLOGDSN
         MVI       WSLOGDSN,X'7D'
         LA        R1,WSLOGDSN+L'WSLOGDSN-1
LB80M    DS        0H
         CLI       0(R1),C' '
         BNE       *+4+4
         BCT       R1,LB80M
*--->>>>
         MVI       1(R1),X'7D'
*        +----------------------------------------+
*>>>>>>>>|   EDIT DEL FICHERO DE RESULTADOS       |--------------------
*        +----------------------------------------+
         L         R15,AISPLINK
         CALL      (15),(KEDIT,WSLOGDSN),VL
*        +----------------------------------------+
*>>>>>>>>|   BORRADO  FICHERO DE RESULTADOS       |--------------------
*        +----------------------------------------+
         CLC       @VLOSDSN,BLANCOS    <> SE GENERO UN TEMPORAL ?
         BNE       LB80Z               <> NO, DEJAR GUARDADO EL FICHERO
*
         MVC       MDDAT3B+4(L'CVLOGDSN),CVLOGDSN
         LA        R1,MDDAT3B+L'MDDAT3B-1
LB80X    DS        0H
         CLI       0(R1),C' '
         BNE       *+4+4
         BCT       R1,LB80X
*--->>>>
         MVI       2(R1),C';'          <> INSERCCION ; DEL MDALDIN
*
         XC        MDALWORK,MDALWORK
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPALLOC,MDDAT3AA,MDDAT3B),VL
         LTR       R15,R15             <> CODIGO RETORNO MDALDIN
         BZ        *+4+4+4
         LA        R1,15               <> MENSAJE 15
         B         LB30                <> REDISPLAY DEL PANEL
*--->>>>
         XC        MDALWORK,MDALWORK
         L         R15,AMDALDIN
         CALL      (15),(MDALWORK,KOPUNALL,MDDAT3AU,MDDAT3B),VL
         LTR       R15,R15             <> CODIGO RETORNO MDALDIN
         BZ        *+4+4+4
         LA        R1,15               <> MENSAJE 16
         B         LB30                <> REDISPLAY DEL PANEL
*--->>>>
LB80Z    CP        TOTRGSEL,KP0           <> SELECCIONADO ALGUNO?
         BH        ENDOFPG1               <> SI, SALIDA NORMAL
         LA        R1,12 <> ERROR NO SELECCIONADO NADA
         B         LB30                   <> REDISPLAY PANEL
ENDOFPG1 DS        0H
         B         LB29                   <> REDISPLAY PANEL
ENDOFPG2 DS        0H
         DELETE    EP=ISPLINK
         DELETE    EP=MDTPUT
         DELETE    EP=MDFECHS
         DELETE    EP=MDCATSI
         DELETE    EP=MDCVLOG
         DELETE    EP=MDALDIN
         FIN       CR,TIPO=NORENT
*        +----------------------------------------+
*>>>>>>>>|   MVCS Y CLCS VARIABLES                |--------------------
*        +----------------------------------------+
LB40$MVC MVC       0(0,R9),0(R5)
MAQMVC   MVC       WORKA60(0),@VLOARGM
MAQTR    TR        WORKA60(0),TBTRMAQ     <> VERIFICAR DATOS
MAQCLC   CLC       WORKA60(0),@VLOARGM
JOBIDMVC MVC       0(0,R15),@VNJOB
STCIDMVC MVC       0(0,R15),@VNSTC
TSUIDMVC MVC       0(0,R15),@VNTSU
*        +----------------------------------------+
*>>>>>>>>|   RESERVA DE AREAS                     |--------------------
*        +----------------------------------------+
PRMPRF   DS        CL26                <> PREFIJO PARA FICHEROS
PRMPRF_L DS        F                   <> LONGITUD DEL PREFIJO
PRMDD    DS        CL8                 <> DDNAME ASIGNADO FICHEROS MDB
PRMDSN   DS        CL29                <> PREFIJO FICHEROS OPERLOG
PRMDSN_L DS        F                   <> LONGITUD SDA PARTE PARAMETRO
*
PRBTIME  DS        CL27                <> FECHA/HORA DE SELECCION
PRBSYSNA DS        CL8                 <> SYSNAME O ESPACIOS
PRBPRF   DS        CL8                 <> PREFIJO FICHEROS OPERLOG
*
DSNDESDE DS        CL44                <> DSNAME CONSTRUIDO ARRANQUE
SWDESDE  DS        CL1                 <> BUSCANDO DESDE SI X'00'
DSNHASTA DS        CL44                <> DSNAME CONSTRUIDO FINAL
*
DSNOBTEN DS        CL44                <> DSNAME DEVUELTO POR MDCATSI
DSNWK01  DS        CL44                <> AREAS DE LECTURA PARA LOS
DSNWK02  DS        CL44                <> DSNAMES DEVUELTOS POR MDCATSI
*
ATSOIND  DS        F                   <> INDICADOR ENTORNO TSO
SWTSOIND DS        XL1                 <> B'1... ....' INDICA TSO
*
WORKA15  DS        CL15
WORKA60  DS        CL60
WORKD    DS        D
WORKF    DS        F
STLINBAR DS        F                   <> ALMACENA LINEA COMIEMZO BAROM
WORKH    DS        H
*
TOTRGSEL DS        PL5                 <> TOTAL REGISTROS SELECCIONADOS
*
SWARG    DS        CL1                 <> LOCALIZAR ARGUMENTOS 1,2,3
SWRANGO  DS        CL1                 <> RANGO SOLICITADO
*                                         X'80' FECHA Y HORA INICIO
*                                         X'40' DESDE O NO EXISTE
*
KP0      DC        P'0'
KP1      DC        P'1'
KH0      DC        H'0'
KH2      DC        H'2'
KH8      DC        H'8'
KH9      DC        H'9'
KF10000  DC        F'10000'
KF0      DC        F'0'
KF1      DC        F'1'
KF20     DC        F'20'
KF4096   DC        F'4096'
KC04     DC        C'04'
KC05     DC        C'05'
KCO      DC        C'O '
KCOO     DC        C'OO'
KCOY     DC        C'OY'
KCY      DC        C'Y '
KCYO     DC        C'YO'
KCYY     DC        C'YY'
KH47     DC        H'47'
BLANCOS  DC        CL60' '
KCEROS   DC        C'00'
KFDSNEND DC        C'SE ACABARON LOS FICHEROS'
KASTERIS DC        CL8'********'
KMASK1   DC        CL3'.**'            <> MASCARA ACCESO AL CATALOGO
KMDBSEL  DC        CL8'MDBSEL'         <> FICHERO MDB'S SELECCIONADOS
*
KJOB     DC        C'JOB00000'         <> PLANTILLAS
KSTC     DC        C'STC00000'
KTSU     DC        C'TSU00000'
*
AISPLINK DS        F                   <> DIRECCION CARGA ISPLINK
AMDFECHS DS        F                   <> DIRECCION CARGA MODULO FECHAS
AMDCATSI DS        F                   <> DIRECCION CARGA ACCESO CATALO
AMDTPUT  DS        F                   <> DIRECCION MODULO MDTPUT
AMDALDIN DS        F                   <> DIRECCION MDALDIN ALLOC.DINAM
AMDCVLOG DS        F                   <> DIRECCION MDCVLOG
*
STREG3A9 DS        7F                  <> SAVE RESTORE DE REGISTROS
WBUSDAT  DS        F                   <> ADDR CAMPO A BUSCAR
WBUSDATL DS        F                   <> LONGITUD CAMPO A BUSCAR
WBUSCAM  DS        F                   <> SERIE DONDE BUSCAR
WBUSCAML DS        F                   <> LONGITUD DE LA SERIE
SWLOC    DS        CL1                 <> SWITCH DE LOCALIZACION
*
BASINI   DS        CL7
BASFIN   DS        CL7
BASHOY   DS        CL7
HORHOY   DS        CL4
*
HOYSTAMP DS        0CL17
HOYGREGO DS        CL8
HOYPUNT2 DS        CL1
HOYHACHE DS        CL1
HOYHORA  DS        CL7                 <> CON PRIEMERA DECIMA STAMP
*
FECINIJ  DS        CL7                 <> CAMPOS PARA COMPARACION CON
HORINIE  DS        CL5                 <> LOS REGISTROS DE OPERLOG
FECFINJ  DS        CL7
HORFINE  DS        CL5
*
GLBID    DS        0CL24               <> ENGLOBA EXISTENCIA VALORES
JOBID    DS        CL8                 <> VALORES CONSTRUIDOS
STCID    DS        CL8
TSUID    DS        CL8
*
VLOARGD$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARGH$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARG1$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARG2$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARG3$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARGM$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOARGN$ DS        F                   <> LONGITUDES ARGUMENTOS
VLOSDSN$ DS        F                   <> LONGITUDES ARGUMENTOS
VNJOB$   DS        F                   <> LONGITUDES ARGUMENTOS
VNTSU$   DS        F                   <> LONGITUDES ARGUMENTOS
VNSTC$   DS        F                   <> LONGITUDES ARGUMENTOS
*
FOPERLOG DCB       DDNAME=FOPERLOG,MACRF=GL,DSORG=PS,EODAD=ZOPERLOG
*
FSESLOG  DCB       DDNAME=XXXXXXXX,MACRF=PM,DSORG=PS
*
KVPUT    DC        CL8'VPUT '
KVDEFINE DC        CL8'VDEFINE'
KCHAR    DC        CL8'CHAR '
KDISPLAY DC        CL8'DISPLAY '
KPANEL   DC        CL8'VLOGP00 '
KEDIT    DC        CL8'EDIT    '
*
STSAVEDS DS        CL44' '              <> FICHERO PARA DATOS CONVERT.
*
WSLOGDSN DS        CL46' '
*
CVLOGPRM DS        0CL52
CVLOGLEN DS        CL2                 NO SE USA SOLO POSICIONAMIENTO
CVLOGDD  DS        CL8
CVLOGDSN DS        CL44
*
         DS        0H
@MSL     DC        CL40' '
*
*        CAMPOS OBTENIDOS DEL PANEL
*
@FECINI  DS        0CL8
@AI      DC        CL04' '
@MI      DC        CL02' '
@DI      DC        CL02' '
*
@HORAINI DS        0CL4
@HI      DC        CL02' '
@NI      DC        CL02' '
*
@FECFIN  DS        0CL8
@AF      DC        CL04' '
@MF      DC        CL02' '
@DF      DC        CL02' '
*
@HORAFIN DS        0CL4
@HF      DC        CL02' '
@NF      DC        CL02' '
*
@GMTINI  DS        0CL8
@AIGMT   DC        CL04' '
@MIGMT   DC        CL02' '
@DIGMT   DC        CL02' '
*
@HORGINI DS        0CL4
@HIGMT   DC        CL02' '
@NIGMT   DC        CL02' '
*
@GMTFIN  DS        0CL8
@AFGMT   DC        CL04' '
@MFGMT   DC        CL02' '
@DFGMT   DC        CL02' '
*
@HORGFIN DS        0CL4
@HFGMT   DC        CL02' '
@NFGMT   DC        CL02' '
*
@VLOARGD DC        CL21' '
@VLOARGH DC        CL21' '
@VLOARG1 DC        CL30' '
@VLOARG2 DC        CL30' '
@VLOARG3 DC        CL30' '
@VLOSDSN DC        CL28' '
@COMPA   DS        0CL2             <> ENGLOBA LOS DOS SIGUIENTES
@X       DC        CL01' '
@Y       DC        CL01' '
@VLOARGM DC        CL60' '
@VNJOB   DC        CL05' '
@VNSTC   DC        CL05' '
@VNTSU   DC        CL05' '
@VLOARGN DC        CL8' '
*
TBMAQS   DC        33CL8' '
*
TBTRMAQ  DC        XL1'FF',XL15'00'
         DC        XL16'00' 1
         DC        XL16'00' 2
         DC        XL16'00' 3
         DC        XL16'00' 4
         DC        XL16'00' 5
         DC        XL11'00',X'6B',4X'00'
         DC        XL16'00' 7
         DC        XL16'00' 8
         DC        XL16'00' 9
         DC        XL16'00' A
         DC        XL16'00' B
         DC        X'00',C'ABCDEFGHI',6X'00'
         DC        X'00',C'JKLMNOPQR',6X'00'
         DC        X'0000',C'STUVWXYZ',6X'00'
         DC        C'0123456789',6X'00'
*
TVAR     DS        0F
         DC        CL12'(MSL)',A(@MSL),A(L'@MSL)
LVARE    EQU       *-TVAR
         DC        CL12'(DI)',A(@DI),A(L'@DI)
         DC        CL12'(MI)',A(@MI),A(L'@MI)
         DC        CL12'(AI)',A(@AI),A(L'@AI)
         DC        CL12'(HI)',A(@HI),A(L'@HI)
         DC        CL12'(NI)',A(@NI),A(L'@NI)
         DC        CL12'(DF)',A(@DF),A(L'@DF)
         DC        CL12'(MF)',A(@MF),A(L'@MF)
         DC        CL12'(AF)',A(@AF),A(L'@AF)
         DC        CL12'(HF)',A(@HF),A(L'@HF)
         DC        CL12'(NF)',A(@NF),A(L'@NF)
         DC        CL12'(VLOARGD)',A(@VLOARGD),A(L'@VLOARGD)
         DC        CL12'(VLOARGH)',A(@VLOARGH),A(L'@VLOARGH)
         DC        CL12'(VLOARG1)',A(@VLOARG1),A(L'@VLOARG1)
         DC        CL12'(VLOARG2)',A(@VLOARG2),A(L'@VLOARG2)
         DC        CL12'(VLOARG3)',A(@VLOARG3),A(L'@VLOARG3)
         DC        CL12'(VLOSDSN)',A(@VLOSDSN),A(L'@VLOSDSN)
         DC        CL12'(X)',A(@X),A(L'@X)
         DC        CL12'(Y)',A(@Y),A(L'@Y)
         DC        CL12'(VLOARGM)',A(@VLOARGM),A(L'@VLOARGM)
         DC        CL12'(VLOARGN)',A(@VLOARGN),A(L'@VLOARGN)
         DC        CL12'(VNJOB)',A(@VNJOB),A(L'@VNJOB)
         DC        CL12'(VNSTC)',A(@VNSTC),A(L'@VNSTC)
         DC        CL12'(VNTSU)',A(@VNTSU),A(L'@VNTSU)
TVARL    EQU       (*-TVAR)/LVARE
KTVARL   DC        A(TVARL)
LVARN    EQU       0,12
LVARD    EQU       L'LVARN,4
LVARL    EQU       L'LVARN+L'LVARD,4
*
TBMENSA  EQU       *
         DC        CL40'** FECHA INICIAL INVALIDA               '  00
TBMENSAE EQU       *-TBMENSA
         DC        CL40'** FECHA FINAL INVALIDA                 '  01
         DC        CL40'** FECHA INICIAL MAYOR QUE FINAL        '  02
         DC        CL40'** HORA INICIAL MAYOR QUE FINAL         '  03
         DC        CL40'** FALTAN IDENTIFICACIONES O ARGUMENTOS '  04
         DC        CL40'** ERROR GRAVE** OBTENCION FECHA DEL DIA'  05
         DC        CL40'** FECHA FINAL ESTA POR LLEGAR          '  06
         DC        CL40'** AUN NO ES LA HORA FINAL. PACIENCIA.  '  07
         DC        CL40'** MAXIMO 9 DIAS DIFERENCIA ENTRE FECHAS'  08
         DC        CL40'** ERROR EN IDENTIFICACION DE MAQUINAS  '  09
         DC        CL40'** ERRORES EN ACCESO A CATALOGO         '  10
         DC        CL40'<> ERROR ASIGNACION FICHEROS. VER FECHAS'  11
         DC        CL40'<> NINGUN DATO SELECC. ATENCION MAY/MIN.'  12
         DC        CL40'** IDENTIFIC/NOMBRE-TAREA SON EXCLUSIVOS'  13
         DC        CL40'** ARGUMENTOS/COMPARADORES DESSINCRONIZ.'  14
         DC        CL40'<> ERROR ASIGNACION FICHERO RESULTADOS  '  15
         DC        CL40'<> ERROR DESASIG/BORRAR FICHERO RESULTA.'  16
         DC        CL40'<> ERROR AL CONVERTIR FECHAS EN GMT.    '  17
TBMENSAL DC        A(TBMENSAE)
*
*        +----------------------------------------+
*>>>>>>>>|   PARAMETROS DE LLAMADA A MDTPUT       |--------------------
*        +----------------------------------------+
         DS        0F
$TPUTPRM DC        H'86'               <> INICIALIZAR A 86
$TPUTX   DC        CL2'20'             <> INICIALIZAR CON LA LINEA
$TPUTC1  DC        CL1','              <> SIEMPRE UNA COMA
$TPUTY   DC        CL2'01'             <> INICIALIZAR CON LA COLUMNA
$TPUTC2  DC        CL1','              <> SIEMPRE UNA COMA
$TPUTTXT DC        CL80' '             <> INICIALIZAR CON EL TEXTO
*
TBTPUTMS DS        0F
*                   ----+----1----+----2----+----3----+----4----+----5-
*              ---+----6----+----7----+----8
         DC    CL80'------- EXPLORANDO                                 X
                                   ---------'
         DC    CL80' '
         DC    CL80'....+....1....+....2....+....3....+....4....+....5.X
               ...+....6....+....7....+....8'
         DC    CL80'---------- LINEAS EXPLORADAS (EN DECENAS DE MILLAR)X
               --------------------<JPO/ALD>'
         DC    CL1'*'                  <> FIN DE TABLA
*        +----------------------------------------+
*>>>>>>>>|   PARAMETROS DE LLAMADA A MDALDIN      |--------------------
*        +----------------------------------------+
KOPINIT  DC        CL10'INIT '
KOPEND   DC        CL10'END  '
KOPALLOC DC        CL10'ALLOC  '
KOPUNALL DC        CL10'UNALLOC '
MDDAT2A  DC        CL50'DD=FOPERLOG SHR CLOSE ; '
MDDAT2B  DC        CL55'DSN= '         <> OJO INSERCCION DEL ; FINAL
*
MDDAT3AA DC        CL50'OLD DELETE CLOSE ; '
MDDAT3AU DC        CL11'DELETE ; '
MDDAT3B  DC        CL55'DSN= '         <> OJO INSERCCION DEL ; FINAL
*
MDALWORK DC        F'0'                <> WORK FACILITADA POR MODULO
*
@SYSSIMB ASASYMBP  DSECT=NO
@SYMBRC  DS        F
@SYMBLGT DS        F
*
@SYMBLIN DC       CL10' '
*
         LTORG
*
AWFECHS  DC        A(WFECHS)
WFECHS   ORG       *+$INFELEN
*
*        +----------------------------------------+
*>>>>>>>>|   PARAMETROS DE LLAMADA A MDCATSI      |--------------------
*        +----------------------------------------+
         DS        0F
$CODIGCA DS        H                   <> CODIGOS DE LLAMADA
*                                         0   OBTIENE DATOS
*                                         1   FINAL DE DATOS
*                                      <> CODIGOS DE RETORNO
*                                         0   FUNCION CORRECTAMENTE
*
$FILTRO  DS        CL44                <> FILTRO DE BUSQUEDA
$CLAVEMD DS        CL4                 <> CLAVE PARA MODULO
*                                         PRIMERA LLAMADA CEROS BIN.
*                                         NO TOCAR POR EL PROGRAMA
$FILLER  DS        CL2                 <> AJUSTE
*
$DATLEN  DS        F     >>> 89 <<<    <> LONGITUD DATOS A DEVOLVER
$DATOSR  DS        0CL1                <> COMIENZO DATOS RECUPERADOS
$DRCATNA DS        CL44                <> NOMBRE DE CATALOGO
$DRTIPO  DS        CL1                 <> TIPO DE ENTRADA
*                                         A: FICHERO NO VSAM
*                                         B: GRUPO DE GENERACION
*                                         C: CLUSTER
*                                         D: COMPONENTE DATOS VSAM
*                                         G: ALTERNATE INDEX
*                                         I: COMPONENTE INDICES VSAM
*                                         H: GENERATION DATASET
*                                         R: PATH DE VSAMSAM
*                                         X: ALIAS
*                                         U: ENTRADA CONEX.CAT.USUARIO
*                                         L: LIBRARY TAPE AM
*                                         W: ENTRY VOLUME TAPE
$DRENAME DS        CL44                <> NOMBRE DE ENTRADA
$FILLE2  DS        CL3                 <> SEGUNDO FILLER
$WRKLEN  DS        F                   <> TAMA#O BUFFER MODULO
$WORKA   DS        CL4096              <> AREA DE TRABAJO MODULO
*
         INFECHSA                      <> PARAMETROS LLAMADA MDFECHS
*
         IEAVM105                      <> MAPA DE REGISTROS MDB
*
         DCBD      DSORG=PS            <> MAPA DE REGISTROS MDB
*
         END       SYVERLOG
