//* - INS.MVSIPO.A06X.POST ------------------ MIEMBRO: MVSX08   ------
//* -                                                                 -
//* - OBJETIVO: INCLUSION DE PROGRAMA DE USUARIO PARA DESCARGAR EL    -
//* -           OPERATIONS LOG (OPERLOG) DEL SYSPLEX.                 -
//* -           MARCAR EL FUENTE, SYS1.SAMPLIB(IEAMDBLG), POR SI SE   -
//* -           PRODUJERAN CAMBIOS.                                   -
//* - PRODUCTO: z/OS V1.7                                             -
//* - FMID:     HBB7720                                               -
//* - USERMOD:  @MVSX08                                               -
//* -                                                                 -
//* - COMENTARIOS: Se marcan con <USR> los cambios introducidos.      -
//* -           Es necesario definir DDDEF(TLINKLIB) asignada al      -
//* -           DSN(SYST.LINKLIB), a fin de emplear CALLLIBS.         -
//* -           El JCLIN emplea un DSN ficticio (SYST.TLINKLIB).      -
//* -------------------------------------------------------------------
//P10COPY  EXEC PGM=IEBCOPY,REGION=2M
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   DISP=SHR,DSN=SYS1.SAMPLIB,
//         UNIT=SYSALLDA,VOL=SER=SYA0R5
//SYSUT2   DD   DISP=(,PASS),DSN=&&SAMPMOD,
//         LIKE=SYS1.SAMPLIB
//SYSIN    DD   *
 COPY I=((SYSUT1,R)),O=SYSUT2
 S M=IEAMDBLG
//*
//IEAMDBLG EXEC PGM=ASMA90,REGION=4M,
// PARM=('NOESD,NODECK,OBJECT,LANGUAGE(ES),LINECOUNT(80)')
//STEPLIB  DD DSN=ASM.SASMMOD1,DISP=SHR,UNIT=3390,VOL=SER=SYA0R2
//SYSUT1   DD DSN=&&WRKFIL,SPACE=(1700,(400,50)),UNIT=3390
//SYSLIB   DD DISP=SHR,DSN=SMPE.MVSTZNA.SMPMTS
//         DD DSN=SYS1.MACLIB,DISP=SHR,UNIT=SYSALLDA,VOL=SER=SYA0R5
//         DD DSN=SYS1.MODGEN,DISP=SHR,UNIT=SYSALLDA,VOL=SER=SYA0R5
//         DD DSN=SYST.FUENTES,DISP=SHR,UNIT=SYSALLDA,VOL=SER=SYA0P1
//SYSLIN   DD DISP=SHR,DSN=INS.MVSIPO.A06X.EXITOBJ(IEAMDBLG)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
* +--- ZOS170A --------- IEAMDBLG ------------------------------------+
* |                                                                   |
* | NOMBRE ....... IEAMDBLG                                           |
* |                                                                   |
* | UBICACION .... SYS1.LINKLIB        AMODE(31) RMODE(24)            |
* |                                                                   |
* | AUTOR ........ JOSE MARIA MARTINEZ BESTEIRO (C) 1999              |
* |                ANGEL LUIS DOMINGUEZ MARTIN. (C) 1999              |
* |                SYS1.SAMPLIB(IEAMDBLG)       (C) IBM               |
* |                                                                   |
* | DESCRIPTIVE-NAME: Sample program to read records from an          |
* |                   Operations Log stream and convert them to       |
* |                   SYSLOG format, and to delete records from       |
* |                   the stream.                                     |
* |                                                                   |
* | STATUS= HBB7707                                                   |
* |                                                                   |
* | FUNCIONES .... PROGRAMA PARA VACIADO DE OPERLOG CON CREACION POR  |
* |                ALLOC DINAMICA DEL FICHERO DE SALIDA, INCLUYENDO   |
* |                EN EL NOMBRE DEL MISMO LOS DATOS DE FECHA Y HORA   |
* |                DEL PRIMER REGISTRO.                               |
* |                                                                   |
* |                2005/11/22: SE PASA A UTILIZAR GMT TIME PARA LA    |
* |                CONSTRUCCION DEL DSNAME DEL FICHERO DE SALIDA.     |
* |                                                                   |
* | OBJETIVOS .... TRATAMIENTO DE OPERLOG DEL SISTEMA                 |
* |                                                                   |
* | LENGUAJE ..... ASSEMBLER H.                                       |
* |                                                                   |
* | TIPO ......... PROGRAMA                                           |
* |                                                                   |
* | PARAMETROS ... COPY(.start_date..,end_date.), DELETE(date)        |
* |                    (>nnn)                           (>nnn)        |
* |                Ver detalles en SAMPLIB                            |
* |                                                                   |
* |                Parámetros incorporados por la instalación:        |
* |                COPY(ALL)                                          |
* |                   Copia los registros recogidos en el log-stream  |
* |                   desde el más antiguo hasta el momento de        |
* |                   inicio del programa.                            |
* |                COPY(MDB)                                          |
* |                   Copia los registros, con el mismo criterio que  |
* |                   la opción ALL, sobre un fichero de salida que   |
* |                   se asigna dinámicamente, según el patrón de DSN |
* |                   determinado en la variable $DATOSA.             |
* |                   Se emplea la rutina de usuario MDALDIN.         |
* |                DELETE(ALL)                                        |
* |                   Marca para eliminación los registros procesados |
* |                   en las opciones COPY(ALL|MDB).                  |
* |                ENQ                                                |
* |                   Parametro opcional, dirigido a impedir la       |
* |                   ejecucion concurrente del programa dentro del   |
* |                   sysplex. Su codificacion supone el intento de   |
* |                   obtener un encolamiento sobre el recurso        |
* |                   OPERLOG.IEAMDBLG; si se consigue, el proceso    |
* |                   continua, si no, finaliza con un RC=04.         |
* |                                                                   |
* | Utilización .. JCL para su utilización:                           |
* |                                                                   |
* |                //DESCARG EXEC PGM=IEAMDBLG,                       |
* |                //        PARM='parámetros_de_ejecución'           |
* |                //SYSLOG  DD   SYSOUT=*                            |
* |                                                                   |
* +---------------------MARTINEZ-BESTEIRO / DOMINGUEZ (C) 1999 -------+
IEAMDBLG CSECT ,
*                                                                     *
* We need amode 31 for logger services and rmode 24 for the DCB.  @P8C*
*                                                                     *
* We need rmode 24 for MDALDIN services                           <USR>
*                                                                     *
IEAMDBLG AMODE 31
IEAMDBLG RMODE 24
***********************************************************************
* begin linkage                                                       *
***********************************************************************
         BAKR  R14,0              save regs
         USING IEAMDBLG,R15
         MODID ,                  eye catcher and date
         L     R9,0(R1,0)          save parm addr
         LM    R11,R12,BASES      get bases
         L     R5,BASE3           get third base                   @04A
         DROP  R15
         USING IEAMDBLG,R11,R12,R5  address them                   @04C
         B     BASESOK            skip over adcons
         DC    CL8'ZOS170A'                                       <USR>
BASES    DC    A(IEAMDBLG,IEAMDBLG+4096)
BASE3    DC    A(IEAMDBLG+8192)                                    @04A
BASESOK  LA    R13,SV             point R13 to save area
         MVC   4(4,R13),=C'F1SA'  set acro in save area
***********************************************************************
* end linkage                                                         *
***********************************************************************
*
***********************************************************************
* Begin initialization                                                *
***********************************************************************
*
***********************************************************************
*  If COPY was specified, get end and start dates or calculate    @D2A*
*  defaults, yesterday and "oldest" respectively.                 @D2A*
*                                                                 @D2A*
*  If DELETE was specified, get delete date.                      @D2A*
*  If HCFORMAT was specified, set the appropriate flag.           @04A*
***********************************************************************
*
*  R9 -> parm                                                      @D2A
*
*  Results:
*    PFLAGS -- DELETE flag set if DELETE was specified,            @D2A
*              COPY flag set if COPY was specified,                @D2A
*              HCFORMAT flag set if HCFORMAT was specified,        @04A
*              YEAR flag set if the HCFORMAT keyword was not       @04A
*                   specified (YEAR is the default), or if         @04A
*                   HCFORMAT(YEAR) was specified,                  @04A
*              CENTURY flag set if HCFORMAT(CENTURY) was specified @04A
*    MFLAGS - All flags initialized as off                         @01A
*    SDATE - If COPY is specified, the specified starting date or  @D2C
*            default to 1900001; otherwise zero                    @D2C
*            COPY(ALL) copies all data in syslog format           <USR>
*            COPY(MDB) copies all data in MDB format              <USR>
*    EDATE - If COPY is specified, the day after the specified     @D2C
*            ending date or default to today;otherwise zero        @D2C
*    DDATE - If DELETE is specified, the day after the deletion    @D2C
*            date; otherwise zero                                  @D2C
*            DELETE(ALL) marks all MDBs for deletion              <USR>
*    SSTCK, ESTCK, and DSTCK are the same dates in STCK format.
*    COPYDAYS - If COPY(>nnn) is specified, the number of days     @D2A
*            nnn; otherwise binary zero                            @D2A
*    DELDAYS  - If DELETE(>nnn) is specified, the number of days   @D2A
*            nnn; otherwise binary zero                            @D2A
*    ALL   - Option for parameters COPY and DELETE. It stands for <USR>
*            all MBDs in logstream since the oldest one to that   <USR>
*            with same TOD of IEAMDBLG start time.                <USR>
*    ENQ   - Requests IEAMDBLG to prevent other IEAMDBLG process  <USR>
*            to run concurrently within the same Sysplex          <USR>
*
         MVI   ENQFLG,0            clear out serialization flag   <USR>
         MVI   PFLAGS,0            clear out parm flags            @D2A
         OI    PFLAGS,YEAR         Set the default flag if the         *
                                   the HCFORMAT keyword is not         *
                                   specified (YEAR is the default).    *
                                                                   @04A
         MVI   MFLAGS,0            clear out miscellaneous flags   @01A
         XC    SDATE,SDATE         clear out start date
         XC    EDATE,EDATE         clear out end date
         XC    DDATE,DDATE         clear out del date
         XC    COPYDAYS,COPYDAYS   clear out number of days        @D2A
         XC    DELDAYS,DELDAYS     clear out number of days        @D2A
         LH    R3,0(R9)            length of parm                  @D2A
         LA    R9,2(R9)            get past length
         CH    R3,=H'0'            is there a parm?                @D2A
         BE    BADPARM             no, error (parm is required)    @D2A
         CH    R3,=H'256'          is it too long (for TRT)?       @D2A
         BNH   PLENOK              no, ok                          @D2A
BADPARM  LA    R2,BADPMSG          point to parm error msg
         BAS   R14,MESSR           display it
         ABEND 1,DUMP              abend
PLENOK   DS    0H                                                  @D2A
PLOOP    DS    0H                                                  @D2A
*        loop through parameter processing each entry              @D2A
*        r9 = address of remaining parm                            @D2A
*        r3 = length of remaining parm                             @D2A
         LR    R14,R9              initial starting point          @D2A
PLOOPR   DS    0H                                                  @D2A
*        resume the scan                                           @D2A
*        r14 = address of resume point                             @D2A
         LA    R1,0(R3,R9)         point past parm (in case there  @D2AX
                                   is no comma)                    @D2A
         LR    R15,R1              end of parm + 1                 @D2A
         SR    R15,R14             subtract start addr to get len  @D2A
         BCTR  R15,0               subtract 1 to get machine len   @D2A
         SR    R2,R2               clear reg. for character found  @D2A
         EX    R15,TRT1            scan the parm; r1 will point to     X
                                   comma or lt paren or end+1 of parm  X
                                                                   @D2A
         C     R2,ZLPAREN          did it stop on left paren?      @D2A
         BNE   PSCANOK             no, ok                          @D2A
*        scan to right paren                                       @D2A
         LA    R15,0(R3,R9)        end of parm + 1                 @D2A
         SR    R15,R1              subtract start addr to get len  @D2A
         EX    R15,TRT2            scan to right paren             @D2A
         BZ    BADPARM             error if not found              @D2A
         LR    R14,R1              set resume address              @D2A
         B     PLOOPR              resume the scan                 @D2A
PSCANOK  DS    0H                                                  @D2A
         LR    R4,R1               save pointer to comma or end    @D2A
         SR    R4,R9               length of this parm entry       @D2A
*                                                                  @D2A
*        interpret and process a parm entry                        @D2A
*        r9 = address of parm entry                                @D2A
*        r4 = length of parm entry                                 @D2A
         CH    R4,=H'3'            is length at least 3 ("ENQ")?  <USR>
         BL    BADPARM             no, error                       @D2A
         CLC   =C'COPY',0(R9)      is it COPY?                     @D2A
         BNE   PNOTCOPY            no                              @D2A
         TM    PFLAGS,COPY         was COPY already processed?     @D2A
         BO    BADPARM             yes,error                       @D2A
         OI    PFLAGS,COPY         set COPY flag                   @D2A
         CH    R4,=H'5'            is length 5?                    @D2A
         BL    PNEXT               length less than 5, must be 4,      X
                                   'COPY', use defaults            @D2A
         BE    BADPARM             length 5, error                 @D2A
         CLI   4(R9),C'('          does it start with left paren?  @D2A
         BNE   BADPARM             no, error                       @D2A
         LA    R15,0(R4,R9)        end of parm + 1                 @D2A
         BCTR  R15,0               end of parm                     @D2A
         CLI   0(R15),C')'         does it end with right paren?   @D2A
         BNE   BADPARM             no, error                       @D2A
         CH    R4,=H'6'            is it 'COPY()'                  @D2A
         BE    PNEXT               yes, use defaults               @D2A
         CH    R4,=H'21'           are both dates given?           @D2A
         BNE   PNOTBOTH            no, keep checking               @D2A
         CLI   12(R9),C','         is there a comma?               @D2A
         BNE   BADPARM             no, error                       @D2A
         MVC   SDATE,5(R9)         save start date                 @D2A
         MVC   EDATE,13(R9)        save end date                   @D2A
         B     PNEXT               look for next entry             @D2A
PNOTBOTH CH    R4,=H'9'            is it user defined             <USR>
         BNE   PNOTALL             new format                     <USR>
         CLC   =C'ALL',5(R9)       COPY(ALL)?                     <USR>
         BNE   PCOPYMDB            no, seguir comprobando         <USR>
         OI    PFLAGS,COPYALL      set COPY(ALL) flag             <USR>
         B     PNEXT               look for next entry            <USR>
PCOPYMDB CH    R4,=H'9'            is it user defined             <USR>
         BNE   PNOTALL             new format                     <USR>
         CLC   =C'MDB',5(R9)       COPY(MDB)?                     <USR>
         BNE   BADPARM             no, error                      <USR>
         OI    PFLAGS,COPYMDB      set COPY(MDB) flag             <USR>
         B     PNEXT               look for next entry            <USR>
PNOTALL  DS    0H                                                 <USR>
         CH    R4,=H'13'           is it start all alone?          @D2A
         BE    PSTART              yes, so save it
         CH    R4,=H'14'           could it be one date w/comma?   @D2A
         BNE   PCOPYND             no, must be ">nnn"              @D2A
         CLI   12(R9),C','         does it end with comma?         @D2A
         BE    PSTART              yes, so it's "start_date,"
         CLI   5(R9),C','          does it start with comma?       @D2A
         BNE   BADPARM             no, error
         MVC   EDATE,6(R9)         save end date                   @D2A
         B     PNEXT               look for next entry             @D2A
PSTART   MVC   SDATE,5(R9)         save start date                 @D2A
         B     PNEXT               look for next entry             @D2A
PCOPYND  DS    0H            must be COPY(>nnn)                    @D2A
         CH    R4,=H'8'            is it too short?                @D2A
         BL    BADPARM             yes, error                      @D2A
         CH    R4,=H'10'           is it too long?                 @D2A
         BH    BADPARM             yes, error                      @D2A
         CLI   5(R9),C'>'          does it start with >?           @D2A
         BNE   BADPARM             no, error                       @D2A
*        save number of days, n thru nnn                           @D2A
         MVC   COPYDAYS,=C'000'    initialize receiving field      @D2A
         LR    R14,R4              get length of entry             @D2A
         SH    R14,=H'8'           get length of number - 1        @D2A
         LA    R15,COPYDAYS+2      end of receiving field          @D2A
         SR    R15,R14             back up to correct position     @D2A
         EX    R14,MVCCOPY         move in number of days          @D2A
         B     PNEXT               look for next entry             @D2A
PNOTCOPY DS    0H                                                  @D2A
         CLC   =C'DELETE',0(R9)    is it DELETE?                   @D2A
         BNE   PSERIAL             Check if serialization req'd    @04C
         TM    PFLAGS,DELETE       was DELETE already processed?   @D2A
         BO    BADPARM             yes,error                       @D2A
         OI    PFLAGS,DELETE       set DELETE flag                 @D2A
         CH    R4,=H'10'           is length 10 (the minimum)?     @P5C
         BL    BADPARM             error if less than min          @D2A
         CLI   6(R9),C'('          does it start with left paren?  @D2A
         BNE   BADPARM             no, error                       @D2A
         LA    R15,0(R4,R9)        end of parm + 1                 @D2A
         BCTR  R15,0               end of parm                     @D2A
         CLI   0(R15),C')'         does it end with right paren?   @D2A
         BNE   BADPARM             no, error                       @D2A
         CLC   =C'ALL',7(R9)       is it "DELETE(ALL)"            <USR>
         BNE   PDELD               no, test another opcion        <USR>
         OI    PFLAGS,DELEALL      set DELETE(ALL) flag           <USR>
         B     PNEXT               look for next entry            <USR>
PDELD    DS    0H                                                 <USR>
         CH    R4,=H'15'           is it "DELETE(yyyyddd)"         @D2A
         BNE   PDELND              no, must be ">nnn"              @D2A
         MVC   DDATE,7(R9)         save delete date                @D2A
         B     PNEXT               look for next entry             @D2A
PDELND   DS    0H            must be DELETE(>nnn)                  @D2A
*              we already checked for minimum length               @D2A
         CH    R4,=H'12'           is it too long?                 @D2A
         BH    BADPARM             yes, error                      @D2A
         CLI   7(R9),C'>'          does it start with >?           @D2A
         BNE   BADPARM             no, error                       @D2A
*        save number of days, n thru nnn                           @D2A
         MVC   DELDAYS,=C'000'     initialize receiving field      @D2A
         LR    R14,R4              get length of entry             @D2A
         SH    R14,=H'10'          get length of number - 1        @D2A
         LA    R15,DELDAYS+2       end of receiving field          @D2A
         SR    R15,R14             back up to correct position     @D2A
         EX    R14,MVCDEL          move in number of days          @D2A
         B     PNEXT                                               @D2A
PSERIAL  DS    0H                                                  @04A
         CLC   =C'ENQ',0(R9)       is it ENQ?                     <USR>
         BNE   CHKFRMT             Check if HCFORMAT is specified <USR>
         TM    ENQFLG,ENQREQ       was  ENQ   already processed?  <USR>
         BO    BADPARM             yes,error                      <USR>
         OI    ENQFLG,ENQREQ       set ENQ flag                   <USR>
         B     PNEXT
CHKFRMT  DS    0H                                                  @04A
         CLC   =C'HCFORMAT',0(R9)  is it HCFORMAT?                 @04A
         BNE   BADPARM             no, error                       @04A
         TM    PFLAGS,HCFORMAT     was HCFORMAT already processed? @04A
         BO    BADPARM             yes,error                       @04A
         OI    PFLAGS,HCFORMAT     set HCFORMAT flag               @04A
         CH    R4,=H'14'           is length 14 (the minimum)?     @04A
         BL    BADPARM             error if less than min          @04A
         CLI   8(R9),C'('          does it start with left paren?  @04A
         BNE   BADPARM             no, error                       @04A
         LA    R15,0(R4,R9)        end of parm + 1                 @04A
         BCTR  R15,0               end of parm                     @04A
         CLI   0(R15),C')'         does it end with right paren?   @04A
         BNE   BADPARM             no, error                       @04A
         CH    R4,=H'14'           is it the right length for          X
                                   "HCFORMAT(YEAR)"?               @04A
         BNE   CHKCENT             No, check for "HCFORMAT(CENTURY)"   X
                                                                   @04A
         CLC   =C'YEAR',9(R9)      is it "HCFORMAT(YEAR)"          @04A
         BNE   BADPARM             no, error                       @04A
         B     PNEXT               look for next entry             @04A
CHKCENT  DS    0H                                                  @04A
         CH    R4,=H'17'           is it the right length for          X
                                   "HCFORMAT(CENTURY)"?            @04A
         BNE   BADPARM             no, error                       @04A
         CLC   =C'CENTURY',9(R9)   is it "HCFORMAT(CENTURY)"       @04A
         BNE   BADPARM             no, error                       @04A
         OI    PFLAGS,CENTURY      Indicate that the output            *
                                   should have a 4-digit year      @04A
         B     PNEXT               look for next entry             @04A
TRT1     TRT   0(*-*,R14),TRTTAB1  scan parm for comma or l. paren @D2A
TRT2     TRT   0(*-*,R1),TRTTAB2   scan parm for r. paren          @D2A
MVCCOPY  MVC   0(*-*,R15),6(R9)    move in number of days          @D2A
MVCDEL   MVC   0(*-*,R15),8(R9)    move in number of days          @D2A
PNEXT    DS    0H                                                  @D2A
*        get to next parm entry                                    @D2A
         A     R4,=F'1'            add comma to len of this entry  @D2A
         AR    R9,R4               point to next entry             @D2A
         SR    R3,R4               calculate remaining length      @D2A
         BP    PLOOP               loop back until parm is done    @D2A
*
PARMDONE DS    0H   see if defaults are needed
* Formato antiguo de TIME; se sustituye y hace compatible A2M.    <USR>
*        TIME  ,                   get today's date                @D2A
*        ST    1,DATEWORK          copy it
*        AP    DATEWORK(4),=P'1900000' add to correct the century
*        UNPK  TDATE,DATEWORK      convert and save today's date   @D2A
*        OI    TDATE+6,C'0'        fix sign                        @D2A
*                                                      Principio  <USR>
         TIME  DEC,@TIMEDAT,LINKAGE=SYSTEM,                            X
               DATETYPE=YYYYDDD         obtener la fecha de hoy
         UNPK  @HIPL(9),@TIMEDAT(5)     convertir
         UNPK  @FIPL(9),@TIMEDAT+8(5)   y guardar
         MVC   TDATE(7),@FIPL+1         fecha y hora
*                                                      Fin        <USR>
*                                                                  @D2A
*        check parameters                                          @D2A
*                                                                  @D2A
         TM    PFLAGS,COPY         was copy specified?             @D2A
         BNO   PVDELETE            no, so see if delete            @D2A
*                                                                  @D2A
*        check for valid copy days                                 @D2A
*                                                                  @D2A
         NC    COPYDAYS,COPYDAYS   was copy days given?            @D2A
         BZ    PNCOPYD             no, so check for dates          @D2A
         LA    R15,L'COPYDAYS      length of copydays field        @D2A
PCOPYDL  LA    R14,COPYDAYS-1(R15) position within copydays        @D2A
         CLI   0(R14),C'0'         is character less than 0?       @D2A
         BL    BADPARM             yes, error                      @D2A
         CLI   0(R14),C'9'         is character greater than 9?    @D2A
         BH    BADPARM             yes, error                      @D2A
         BCT   R15,PCOPYDL         loop to check all chars         @D2A
         PACK  DAYSWORK,COPYDAYS   convert to decimal              @D2A
         PACK  DATEWORK,TDATE      get today's date                @D2A
         SP    DATEWORK+2(2),DAYSWORK subtract days from today     @D2A
         BAS   R14,FIXDATE         adjust for the year             @D2A
         UNPK  EDATE,DATEWORK      save it as end date             @D2A
         OI    EDATE+6,C'0'        fix sign                        @D2A
         MVC   SDATE,=C'1900001'   set start date to earliest      @D2A
         B     PVDELETE            go see if delete was specified  @D2A
PNCOPYD  DS    0H   ">nnn" was not specified                       @D2A
*
*        see if start date was given, get default if not
*
         CLC   SDATE,=XL7'00'      was start date given?
         BE    PSTARTDF            no, so get default
         LA    R9,SDATE            point to start date
         BAS   R14,CHKDATE         see if it is valid
         LTR   R15,R15             is date valid?
         BNZ   BADPARM             error if not
         B     PENDCK              check end date                  @D2A
*
*        get default start date of 1900001                         @D2A
*
PSTARTDF MVC   SDATE,=C'1900001'   Get default start date          @D2A
*                                                                 <USR>
*        Asigna end date para la opción COPY(ALL)                 <USR>
*                                                                 <USR>
         TM    PFLAGS,COPYALL      Se especificó COPY(ALL|MDB)?   <USR>
         BNO   PENDCK              No, ir a verificaciones        <USR>
         MVC   EDATE,TDATE         Asignamos la fecha de hoy      <USR>
         B     PENDOK              y se toma tal cual             <USR>
*
*        check for valid end date                                  @D2A
*                                                                  @D2A
PENDCK   CLC   EDATE,=XL7'00'      was end date given?             @D2A
         BE    PENDDEF             no, so get default              @D2A
         LA    R9,EDATE            point to end date               @D2A
         BAS   R14,CHKDATE         see if it is valid              @D2A
         LTR   R15,R15             is date valid?                  @D2A
         BNZ   BADPARM             error if not                    @D2A
         CLC   EDATE,TDATE         is it after today?              @D2A
         BH    BADPARM             yes, error                      @D2A
*                                                                  @D2A
*        recalculate end date as the day after the given date      @D2A
*                                                                  @D2A
         PACK  DATEWORK,EDATE      convert end date to decimal     @D2A
         AP    DATEWORK+2(2),=PL1'1' add 1 to day                  @D2A
         BAS   R14,FIXDATE         adjust for the year             @D2A
         UNPK  EDATE,DATEWORK      save it as end date             @D2A
         OI    EDATE+6,C'0'        fix sign                        @D2A
         B     PENDOK                                              @D2A
*                                                                  @D2A
*        set default end date as today                             @D2A
*                                                                  @D2A
PENDDEF  MVC   EDATE,TDATE         get today's date                @D2A
PENDOK   DS    0H                                                  @D2A
*
*
*
         CLC   SDATE,EDATE         see if start date < end date    @D2A
         BNL   BADPARM             error if not
*                                                                  @D2A
*        see if DELETE was specified                               @D2A
*                                                                  @D2A
PVDELETE DS    0H                                                  @D2A
         TM    PFLAGS,DELETE       was delete specified?           @D2A
         BNO   PDELOK              no, ok                          @D2A
*                                                                  @D2A
*        check for valid delete days                               @D2A
*                                                                  @D2A
         NC    DELDAYS,DELDAYS     was delete days given?          @D2A
*        BZ    PNDELD              no, so check the given date    <USR>
         BZ    PDELAL              no, check DELETE(ALL) function <USR>
         LA    R15,L'DELDAYS       length of deldays field         @D2A
PDELDL   LA    R14,DELDAYS-1(R15)  position within deldays         @D2A
         CLI   0(R14),C'0'         is character less than 0?       @D2A
         BL    BADPARM             yes, error                      @D2A
         CLI   0(R14),C'9'         is character greater than 9?    @D2A
         BH    BADPARM             yes, error                      @D2A
         BCT   R15,PDELDL          loop to check all chars         @D2A
         PACK  DAYSWORK,DELDAYS    convert to decimal              @D2A
         PACK  DATEWORK,TDATE      get today's date                @D2A
         SP    DATEWORK+2(2),DAYSWORK subtract days from today     @D2A
         BAS   R14,FIXDATE         adjust for the year             @D2A
         UNPK  DDATE,DATEWORK      save it as delete date          @D2A
         OI    DDATE+6,C'0'        fix sign                        @D2A
         B     PDELOK              done with DELETE                @D2A
*
*        Asigna delete date para la opción DELETE(ALL)            <USR>
*                                                                 <USR>
PDELAL   TM    PFLAGS,DELEALL      Se especificó DELETE(ALL)?     <USR>
         BNO   PNDELD              No, ir a verificaciones        <USR>
         MVC   DDATE,TDATE         Se asigna fecha de hoy         <USR>
         B     PDELOK              y se toma tal cual             <USR>
*                                                                  @D2A
*        check for valid delete date                               @D2A
*                                                                  @D2A
PNDELD   LA    R9,DDATE            point to delete date            @D2A
         BAS   R14,CHKDATE         see if it is valid              @D2A
         LTR   R15,R15             is date valid?                  @D2A
         BNZ   BADPARM             error if not                    @D2A
*                                                                  @D2A
*        recalculate delete date as the day after the given date   @D2A
*                                                                  @D2A
         PACK  DATEWORK,DDATE      convert delete date to decimal  @D2A
         AP    DATEWORK+2(2),=PL1'1' add 1 to day                  @D2A
         BAS   R14,FIXDATE         adjust for the year             @D2A
         UNPK  DDATE,DATEWORK      save it as delete date          @D2A
         OI    DDATE+6,C'0'        fix sign                        @D2A
PDELOK   DS    0H                                                  @D2A
*                                                                  @D2A
* convert dates to stck format                                     @D2A
*                                                                  @D2A
         LA    R3,SDATE            start date yyyyddd              @D2A
         LA    R4,SSTCK            field for stck form             @D2A
         BAS   R14,CONVSTCK        convert yyyyddd to stck format  @D2A
         LA    R3,EDATE            end   date yyyyddd              @D2A
         LA    R4,ESTCK            field for stck form             @D2A
         TM    PFLAGS,COPYALL      Se especificó COPY(ALL|MDB)    <USR>
         BNO   CONTCONV            No, continuar                  <USR>
         PACK  WORK5,@HIPL(9)      convertir  hora actual a stck  <USR>
         MVC   CONVTIME,WORK5      move date                      <USR>
CONTCONV DS    0H                                                 <USR>
         BAS   R14,CONVSTCK        convert yyyyddd to stck format  @D2A
         LA    R3,DDATE            delete date yyyyddd             @D2A
         LA    R4,DSTCK            field for stck form             @D2A
         TM    PFLAGS,DELEALL      Se especificó DELETE(ALL)      <USR>
         BNO   FINCONV             No, continuar                  <USR>
         PACK  WORK5,@HIPL(9)      convertir  hora actual a stck  <USR>
         MVC   CONVTIME,WORK5      move date                      <USR>
         BAS   R14,CONVSTCK        convert yyyyddd to stck format  @D2A
***********************************************************************
* Before IEAMDBLG continues processing, check if serialization        *
* has been requested. If so, try to get OPERLOG.IEAMDBLG resource     *
* enqueued, and proceed. If serialization fails, program ends with    *
* a RC=04.                                                            *
***********************************************************************
FINCONV  DS    0H                                                 <USR>
         TM    ENQFLG,ENQREQ       Serialization requested?       <USR>
         BNO   PROCEED                                            <USR>
         ENQ   (MAJNAME,MINNAME,E,,SYSTEMS),RET=USE               <USR>
         LTR   R15,R15                                            <USR>
         BNZ   ENQERR                                             <USR>
*                                                                 <USR>
         OI    ENQFLG,ENQSUC       set ENQ succesfull flag        <USR>
         B     PROCEED                                            <USR>
*                                                                 <USR>
ENQERR   DS    0H                                                 <USR>
*        WTO   '**IEAMDBLG** COULD NOT SERIALIZE'                 <USR>
         SLR   R15,R15                                            <USR>
         LA    R15,4                                              <USR>
         B     ENDOFPGM                                           <USR>
*                                                                 <USR>
PROCEED  DS    0H                                                 <USR>
***********************************************************************
* Obtain a buffer area for logger record and set up its base          *
***********************************************************************
         STORAGE OBTAIN,LENGTH=STRBUFFL,BNDRY=PAGE get storage for buff
         LR    R10,R1              save its address
         USING STRBUFF,R10         addressability
***********************************************************************
* Obtain a buffer area for MDBBUF record and save its address     <USR>
***********************************************************************
         STORAGE OBTAIN,LENGTH=MDBBUFFL,BNDRY=PAGE get storage for buff
         ST    R1,MDBBUFA          save its address
***********************************************************************
*
***********************************************************************
*  If COPY was specified, open the output file                     @03A
*  Connect to the log stream                                          *
*  If a recoverable error is detected, write it to the output file @03A
***********************************************************************
         TM    PFLAGS,COPY         was copy specified?             @03A
         BNO   STARTCON            no, skip open, go to IXGCONN    @03A
         TM    PFLAGS,COPYMDB      se especificó COPY(MDB)        <USR>
         BO    STARTCON            Sí, no abrir OFILE             <USR>
         OPEN  (OFILE,OUTPUT)      open the file                   @03M
         C     R15,=F'8'           see if open worked              @03M
         BL    OPENOK              continue if so                 <USR>
OPENNOK  DS    0H                                                 <USR>
         ABEND 3,DUMP                                              @03M
OPENOK   DS    0H                                                  @03M
         OI    MFLAGS,OPEN         Output file opened              @01A
STARTCON DS    0H                                                  @03A
         MVC   LOGRMSGT,=CL10'IXGCONN-1' insert in case of error   @P6C
         IXGCONN REQUEST=CONNECT,  connect to the log stream           X
               AUTH=WRITE,                                             X
               STREAMNAME=STRNAME,                                     X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    CONNOK              yes, continue                   @D2A
*
*        error during connect
*        see if it is "possible loss of data". If it is, write a   @01C
*        message to the output file.                               @01A
*                                                                  @D2A
*        IXGRSNCODECONNPOSSIBLELOSSOFDATA = possible loss of data  @D2A
*
         L     R14,RSNCODE         get reason code                 @D2A
         N     R14,=AL4(IXGRSNCODEMASK) AND it with logger mask    @D2A
***********************************************************************
*        IXGRSNCODEWOWWARNING and IXGRSNCODEDIRECTORYFULLWARNING   @02A
*        would be errors on an actual write to the operlog, but    @02A
*        they are conditions that can be ignored for IEAMDBLG      @02A
***********************************************************************
         C     R14,=AL4(IXGRSNCODEWOWWARNING) Write warning?       @02A
         BE    CONNOK              Yes, ok, continue               @02A
         C     R14,=AL4(IXGRSNCODEDSDIRECTORYFULLWARNING)  Is the
*                                  directory full?                 @02A
         BE    CONNOK              Yes, continue                   @02A
         C     R14,=AL4(IXGRSNCODECONNPOSSIBLELOSSOFDATA) is it        X
                                   possible loss of data?          @D2A
         BNE   LOGRERR             no, connect error, abend        @01C
         BAS   R14,GAPMSG          indicate data may be missing    @01A
         B     CONNOK              continue                        @01A
***********************************************************************
*        LOGRERR is entered from several points in this module     @01A
*        to write an error message to the issuing console and      @01A
*        ABEND the program with a U0002 code.                      @01A
***********************************************************************
LOGRERR  DS    0H   error return code from a system logger request
         UNPK  LOGRMRET(4),RETCODE+2(3) get return code
         TR    LOGRMRET,HEXTAB     make it printable
         MVI   LOGRMRET+3,C','     replace lost character
         UNPK  LOGRMRSN(5),RSNCODE+2(3) get reason code
         TR    LOGRMRSN,HEXTAB     make it printable
         MVI   LOGRMRSN+4,C' '     replace lost character
         LA    R2,LOGRMSG          point to error message
         BAS   R14,MESSR           display it
         TM    MFLAGS,OPEN         output file opened?             @01A
         BNO   GODUMP              No, don't write to or close it  @01A
         CLOSE OFILE               close output file               @01A
         CLOSE MFILE               close output file              <USR>
         NI    MFLAGS,X'FF'-OPEN   indicate file now closed        @01A
GODUMP   DS    0H
         ABEND 2,DUMP              abend
***********************************************************************
* End initialization                                                  *
***********************************************************************
         EJECT ,
***********************************************************************
* Begin COPY                                                      @D2A*
***********************************************************************
*                                                                 @D2A*
*  If COPY was specified:                                         @D2A*
*                                                                 @D2A*
*   Start a log stream browse session and position the log stream @D2A*
*   to first record in the range                                  @D2A*
*                                                                 @D2A*
*   Copy loop:                                                    @D2A*
*                                                                 @D2A*
*    Read successive records from the stream, starting with the   @D2A*
*    earliest record bearing the start date and ending with the   @D2A*
*    latest record on or before the end date. Indicate if there   @01C*
*    was a gap or deleted records immediately before the first    @01A*
*    record to be printed with a special message to the output    @01A*
*    file.                                                        @01A*
*                                                                 @D2A*
*    For each record (MDB) that is read:                          @D2A*
*                                                                 @D2A*
*     Get the general and CP objects                              @D2A*
*                                                                 @D2A*
*     Extract the fixed info                                      @D2A*
*                                                                 @D2A*
*     For every line (text object) in the message:                @D2A*
*                                                                 @D2A*
*      Write a syslog-format line to the output file              @D2A*
*                                                                 @D2A*
*      If line was too long, also write a continuation line       @D2A*
*                                                                 @01A*
*      If IXGBRWSE indicated records were missing between the     @01A*
*      current and previous record (due to a gap or deleted       @01A*
*      records) write a special message to the output file.       @01A*
*                                                                 @D2A*
*   End the log stream browse session                             @D2A*
*                                                                 @D2A*
*   Close the output file                                         @D2A*
*                                                                 @D2A*
*                                                                 @D2A*
***********************************************************************
CONNOK   DS    0H                                                  @01M
         TM    PFLAGS,COPY         was copy specified?             @D2A
         BNO   NOTCOPY             no, so skip it                  @D2A
***********************************************************************
*        issue BROWSE START to get browse session going
*        and position to first record in range
***********************************************************************
         XC    RECCOUNT,RECCOUNT   zero record count
         MVC   LOGRMSGT,=CL10'IXGBRWSE-1' insert in case of error  @P6C
         IXGBRWSE REQUEST=START,                                       X
               SEARCH=SSTCK,           start date                      X
               GMT=NO,                 GMT   time                      X
               BROWSETOKEN=BRWTOKEN,                                   X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    FIRSTOK             yes, so we have starting position
***********************************************************************
*        error in BROWSE START
*        see if it is just a gap in the stream, and continue if so @P6A
*        see if there are just no records in range
*                                                                  @02A
*        If the return code was 8 or more, set flag to indicate    @02A
*        IXGBRWSE REQUEST=END should be bypassed                   @02A
*
*        IXGRSNCODEWARNINGGAP = request successful but data missing@P6A
*        IXGRSNCODEWARNINGDEL = request successful but records had @01A
*                               been previously deleted            @01A
*        IXGRSNCODEEOFGAP  = end of file due to gap                @01A
*        IXGRSNCODEEOFDELETE = end of file because all subsequent  @01A
*                              records previously deleted          @01A
*        IXGRSNCODENOBLOCK = block does not exist
*        IXGRSNCODELOSSOFDATAGAP = a section of data is            @01A
*                               permanently missing                @01A
*        IXGRSNCODELOSSOFDATAEOF = premature end of file due to    @01A
*                               records permanently missing        @01A
*        IXGRSNCODEEMPTYSTREAM = no records in stream. Issue       @03A
*                            message MLG004I and exit program      @03A
***********************************************************************
         CLC   RETCODE,=AL4(IXGRETCODEERROR) RC of 8 or more?      @02A
         BL    STARTOK             No,  REQUEST=START worked       @02A
         OI    MFLAGS,NOBREND      Yes. Do not do REQUEST=END      @02A
STARTOK  DS    0H                                                  @02A
         CLC   RETCODE,=AL4(IXGRETCODECOMPERROR) Logger error?     @02A
*                                  (Return code 12 or higher)      @02A
         BNL   LOGRERR             yes, close and return           @02A
         L     R14,RSNCODE         get reason code
         N     R14,=AL4(IXGRSNCODEMASK) and it with logger mask
         C     R14,=AL4(IXGRSNCODEEMPTYSTREAM) empty log stream?   @03A
         BNE   NOTEMPTY            no, continue checking           @03A
         LA    R2,EMPTYSTM         point to info msg               @03A
         BAS   R14,MESSR           display it                      @03A
         B     COPYDONE            done with copy                  @03A
NOTEMPTY DS    0H                                                  @03A
         C     R14,=AL4(IXGRSNCODEWARNINGGAP) is it a gap?         @P6A
         BE    GAPORDEL            YES, write message to output    @01A
         C     R14,=AL4(IXGRSNCODEWARNINGDEL) records deleted?     @01A
         BE    GAPORDEL            Yes, write message and quit     @01A
         C     R14,=AL4(IXGRSNCODEEOFGAP) EOF because gap to end?  @01A
         BE    GAPEOF
         C     R14,=AL4(IXGRSNCODELOSSOFDATAGAP) records permanently
*                                  missing?                        @01A
         BE    GAPORDEL            Yes, write message              @01A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAEOF) premature end of @ile
*                                  records permanently missing?    @01A
         BE    GAPEOF              Yes, write message and quit     @01A
         C     R14,=AL4(IXGRSNCODEEOFDELETE) EOF because all       @01A
*                                  subsequent records deleted?     @01A
         BNE   OPENOK2             no, continue checking           @01A
GAPEOF   EQU   *                                                   @01A
         OI    MFLAGS,REACHEOF     indicate end of file reached    @01A
GAPORDEL EQU   *                                                   @01A
         BAS   R14,GAPMSG          Write record to sysout file     @01A
         TM    MFLAGS,REACHEOF     was end of file reached?        @01A
         BO    COPYDONE            yes, done                       @01A
         B     FIRSTOK             continue                        @01A
OPENOK2  EQU   *                                                   @01A
         C     R14,=AL4(IXGRSNCODENOBLOCK) is it block not found?
         BNE   LOGRERR             no, display the error
*        no records in range
         LA    R2,EMPTYMSG         point to info msg
         BAS   R14,MESSR           display it
         B     COPYDONE            done with copy                  @D2C
FIRSTOK  DS    0H
*
***********************************************************************
* Begin copy loop                                                 @D2A*
***********************************************************************
*
***********************************************************************
*  Read successive records from the stream, starting with the         *
*  earliest record bearing the start date and ending with the         *
*  latest record on or before the end date                            *
***********************************************************************
*
COPYLOOP DS    0H                                                  @D2C
***********************************************************************
***********************************************************************
*
* get next record from log stream
*
         MVC   LOGRMSGT,=CL10'IXGBRWSE-2' insert in case of error  @P6C
         IXGBRWSE REQUEST=READCURSOR, read next record                 X
               BROWSETOKEN=BRWTOKEN,                                   X
               BUFFER=STRBUFF,                                         X
               BUFFLEN=STRBLEN,                                        X
               DIRECTION=OLDTOYOUNG,                                   X
               RETBLOCKID=CURRBLK,                                     X
               TIMESTAMP=CURRSTCK,                                     X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    READCOK             yes, continue
***********************************************************************
*        error in BROWSE READCURSOR
*        see if it is just a gap in the stream, and continue if so
*        see if we reached EOF and end if so                       @D2A
*
*        IXGRSNCODEWARNINGGAP = request successful but data missing
*        IXGRSNCODEWARNINGDEL = request successful but records     @01A
*                               were previously deleted            @01A
*        IXGRSNCODEWARNINGLOSSOFDATA = request successful but data
*                               missing due to environment error   @02A
*        IXGRSNCODEEOFGAP     = EOF because all subsequent records @01A
*                               unavailable due to gap             @01A
*        IXGRSNCODEEOFDELETE  = reached EOF because subsequent     @01C
*                               records previously deleted         @01A
*        IXGRSNCODEENDREACHED = reached EOF                        @D2A
*        IXGRSNCODELOSSOFDATAGAP = records permanently missing     @01A
*        IXGRSNCODELOSSOFDATAEOF = premature end of file due to    @01A
*                               records permanenely missing        @01A
***********************************************************************
         L     R14,RSNCODE         get reason code
         N     R14,=AL4(IXGRSNCODEMASK) and it with logger mask
         C     R14,=AL4(IXGRSNCODEWARNINGGAP) is it a gap?
         BE    READCOKG            yes, note that                  @01C
         C     R14,=AL4(IXGRSNCODEWARNINGDEL) Records deleted?     @01A
         BE    READCOKG            yes, note that                  @01A
         C     R14,=AL4(IXGRSNCODEWARNINGLOSSOFDATA) Records deleted
*                                  due to environmental error?     @02A
         BE    READCOKG            yes, note that                  @02A
         C     R14,=AL4(IXGRSNCODEEOFGAP) is it EOF because        @01A
*                                  gap until end of file?          @01A
         BE    SETEOFLG            yes, note that                  @01A
         C     R14,=AL4(IXGRSNCODEEOFDELETE) is it EOF because     @01C
*                                  subsequent records deleted?     @01A
         BE    SETEOFLG            yes, note that                  @01C
         C     R14,=AL4(IXGRSNCODEENDREACHED) is it EOF?           @D2A
         BE    COPYDONE            yes, done                       @D2A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAGAP) records permanently
*                                  missing?                        @01A
         BE    READCOKG            Yes, note that                  @01A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAEOF) premature end of
*                                  file due to records permanently
*                                  missing?                        @01A
         BNE   LOGRERR             no, display the error           @01A
SETEOFLG EQU   *                                                   @01A
         OI    MFLAGS,REACHEOF     indicate EOF reached            @01A
READCOKG EQU   *                                                   @01A
         BAS   R14,GAPMSG          Write record to sysout file     @01A
         TM    MFLAGS,REACHEOF     EOF reached?                    @01A
         BNZ   COPYDONE            yes, done                       @01A
READCOK  DS    0H
*
* readcursor worked; see if we are past the end date               @D2C
*
         CLC   CURRSTCK+8(8),ESTCK   are we at the end?            @P1C
         BL    NOTEND              no, ok
         CLC   RECCOUNT,=F'0'      was this the first read?
         BNE   COPYDONE            no, so copy is done             @D2C
*
* show no records processed
*
         LA    R2,EMPTYMSG         point to info msg
         BAS   R14,MESSR           display it
         B     COPYDONE            done with copy                  @D2C
NOTEND   DS    0H
*
* increment record count
*
         L     R15,RECCOUNT        get record count
         A     R15,=F'1'           add 1
         ST    R15,RECCOUNT        store new count
*
***********************************************************************
*  For each record (MDB) that is read:                                *
*     Get the general and CP objects                                  *
*     Extract the fixed info                                          *
*     For every line (text object) in the message                     *
*        Write a syslog-format line to the output file                *
*        If line was too long, also write a continuation line         *
***********************************************************************
STARTMDB LR    R8,R10              point to mdb in buffer
         USING MDB,R8
         MVI   FLAGS1,0            clear processing flags
*                                                                 <USR>
* A¦adido para copiar el MDB a MDBLOG                             <USR>
*                                                                 <USR>
         TM    PFLAGS,COPYMDB      Se especificó COPY(MDB)        <USR>
         BNO   NCOPYMDB            No, continuar la copia         <USR>
         TM    FLAGS2,MDBALDIN     Se creó ya MFILE?              <USR>
         BNO   ALDINNO             Si no, ir a ALDINNO            <USR>
         B     ALDINOK             en caso contrario, ALDINOK     <USR>
ALDINNO  BAS   R14,MDBDYN          ir a MDBDYN                    <USR>
*                                                                 <USR>
ALDINOK  DS    0H                                                 <USR>
         PUT   MFILE,(R8)          PUT THE MDB RECORD             <USR>
         B     COPYLOOP            continuamos con el             <USR>X
                                   siguiente                      <USR>
*                                                                 <USR>
NCOPYMDB DS    0H                                                 <USR>
*                                                                 <USR>
         MVC   LOGBUF(128),=CL128' '  clear out log record         @04C
         LR    R6,R8               calc end of mdb in R6
         AH    R6,MDBLEN           start+mdblen in header
         LA    R7,MDBHLEN(0,R8)    address of first object
         CR    R7,R6               see if this is the end
         BNL   COPYLOOP            get another MDB if so (no           X
                                   objects)                        @D2C
         DROP  R8
         USING MDB,R7
*
* scan MDB objects looking for general and CP objects, and
* save syslog information from them
*
OBJLP    DS    0H                  loop through the objects
         LH    R3,MDBTYPE          get type
         C     R3,=A(MDBGOBJ)      check for general object
         BNE   NOTG                not general object
         TM    FLAGS1,FLAGGO       see if first general object
         BO    NXTOBJ              no, skip it
         OI    FLAGS1,FLAGGO       show general object was found
         USING MDBG,R7             addressability to general object
***********************************************************************
* Move general object fields into log record or save them
***********************************************************************
         BAS   R14,GENINFO         Fill in the appropriate fields      X
                                   in the log record from the MDB      X
                                   general object                  @04A
         MVC   JOBNAME,MDBGJBNM    save job name
         SR    R15,R15             clear a reg
         ICM   R15,7,MDBGSEQ       message sequence number
         CVD   R15,DBLWD           convert to decimal
         UNPK  MLID,DBLWD          save low 3 digits as ebcdic         X
                                   multiline id
         OI    MLID+2,C'0'         make it printable
         B     NXTOBJ              bump to next object
*
NOTG     DS    0H
         C     R3,=A(MDBCOBJ)      check for control prog object
         BNE   NXTOBJ              not control prog object, get next
         TM    FLAGS1,FLAGCO       see if first control prog object
         BO    NXTOBJ              no, skip it
         USING MDBSCP,R7           addressability to ctl prog object
         CLC   MDBCPNAM,=C'MVS '   make sure it is an MVS object
         BNE   NXTOBJ              if not, just skip cp object
         CLC   MDBCVER,=AL4(MDBCVER5) see if it's the right version
         BL    COPYLOOP            skip MDB if not                 @D2C
         OI    FLAGS1,FLAGCO       set processed control prog object
***********************************************************************
* Move control pgm object fields into log record or save them
*
* set up record type
***********************************************************************
         BAS   R14,CPINFO          Fill in the appropriate fields      X
                                   in the log record from the MDB      X
                                   CP object                       @04A
***********************************************************************
* save console id, console name, MCS flags, and descriptors        @P4C
***********************************************************************
         MVC   CONSID,MDBCCNID     save console id
         MVC   CONSNAME,MDBCCNNM   save console name               @D1A
         MVC   MCSFLAGS,MDBCMCSF   save MCS flags                  @D1A
         MVC   DESCS,MDBCDESC      save descriptor codes           @P4A
***********************************************************************
* remember whether this is a WTL
***********************************************************************
         MVI   WTLFLAG,C'N'        assume not wtl
         TM    MDBCMSC2,MDBCWTL    is it a wtl?
         BNO   NXTOBJ              no, ok
         MVI   WTLFLAG,C'Y'        show it's a wtl
***********************************************************************
NXTOBJ   DS    0H                  find next object
***********************************************************************
         TM    FLAGS1,FLAGGO+FLAGCO see if we found general and SCP
         BO    FNDTXT              got them, loop through text objs
         USING MDB,R7
         AH    R7,MDBLEN           bump to next object
         CR    R7,R6               see if this is the end
         BL    OBJLP               no, process this object
         B     COPYLOOP            missing necessary objects,          X
                                   skip it                         @D2C
         DROP  R7
***********************************************************************
* find text objects, convert them to syslog records
***********************************************************************
FNDTXT   DS    0H
         LA    R7,MDBHLEN(0,R8)    address of first object
         CR    R7,R6               see if this is the end
         BNL   COPYLOOP            get another MDB if so               X
                                   objects)                        @D2C
         USING MDB,R7
***********************************************************************
* fill in jobname/consname field
***********************************************************************
         BAS   R14,JOBINFO         Fill in jobname/consname field  @04A
*
* scan MDB looking for text objects
*
***********************************************************************
TOBJLP   CLC   MDBTYPE,=AL2(MDBTOBJ) check for text object
         BNE   NXTTOBJ             not text object, try next
***********************************************************************
* text object - convert it to syslog record and PUT it to the file
*
***********************************************************************
         USING MDBT,R7             addressability to text object
***********************************************************************
* calculate length of text in R2
***********************************************************************
         LH    R2,MDBTLEN          get text object length
         S     R2,=A(MDBTMSGT-MDBTLEN) subtract non-text size
         BNP   NXTTOBJ             skip it if length is zero or less
         LA    R3,MDBTMSGT         get address of text
         CLI   WTLFLAG,C'Y'        is it a wtl?
         BNE   NOTWTL              no, skip to the non-wtl case
***********************************************************************
*
* message came from a wtl
*
* PUT only the text (no control info) from the first line
*
***********************************************************************
         CH    R2,=H'128'          does text length exceed max?
         BNH   WTLLOK              no, ok
         LA    R2,128              set it to max
WTLLOK   S     R2,=F'1'            subtract 1 for mvc
         BM    COPYLOOP            skip it if negative (length < 1)@D2C
         EX    R2,WTLMV            move in the text
         LA    R2,5(0,R2)          add for RDW and get back the 1
         STH   R2,LOGBUFL          set record length               @P4C
*                                                                 3@P8D
         PUT   OFILE,LOGBUFP       PUT the WTL record              @P8C
*                                                                 4@P8D
         B     COPYLOOP            get next MDB                    @D2C
WTLMV    MVC   LOGBUF(*-*),0(R3)   executed above
*
NOTWTL   DS    0H
***********************************************************************
* not a wtl
*
***********************************************************************
         BAS   R14,PROCLINE        Process text line               @04A
*
* bump to next object
*
NXTTOBJ  DS    0H
         USING MDB,R7
         AH    R7,MDBLEN           bump to next object
         CR    R7,R6               see if this is the end
         BL    TOBJLP              no, look at this object
         DROP  R7
         B     COPYLOOP            done with this mdb; get next    @D2C
*
***********************************************************************
* End copy loop                                                   @D2C*
***********************************************************************
COPYDONE DS    0H                                                  @D2A
***********************************************************************
*  If the return code from IXGBRWSE REQUEST=START had an error,    @02A
*  "do not perform REQUEST=END" bit will have been set.            @02A
***********************************************************************
         TM    MFLAGS,NOBREND      Bypass REQUEST=END?             @02A
         BO    SHUTFILE            Yes, continue to shut file      @02A
***********************************************************************
*  End the log stream browse session                                  *
***********************************************************************
         MVC   LOGRMSGT,=CL10'IXGBRWSE-3' insert in case of error  @P6C
         IXGBRWSE REQUEST=END,                                         X
               BROWSETOKEN=BRWTOKEN,                                   X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BNE   LOGRERR             no, display error
*
***********************************************************************
*  Close the output file                                              *
***********************************************************************
SHUTFILE DS    0H                                                  @02A
         NI    MFLAGS,X'FF'-NOBREND  Reset bit for DELETE's use    @02A
         CLOSE OFILE
         CLOSE MFILE                                              <USR>
***********************************************************************
*  *START* ARRANQUE DE RUTINA INVESTIGADORA DEL LOG               @D2A*
*  2004-03-02  SE SUSTITUYE EL ARRANQUE DE ESTA RUTINA SECUNDARIA @D2A*
*              POR LA GRABACION DE UN FICHERO TEMPORAL QUE SERA   @D2A*
*              LEIDO EN UN PASO POSTERIOR POR EL LOOGERSF         @D2A*
***********************************************************************
         OPEN      (FIOPERL,(OUTPUT))
         PUT       FIOPERL
         MVC       0(44,R1),$DATOSA1+4
         MVI       45(R1),C' '
         MVC       46(35,R1),45(R1)
         CLOSE     (FIOPERL)
***********************************************************************
*  *END*   ARRANQUE DE RUTINA INVESTIGADORA DEL LOG               @D2A*
***********************************************************************
***********************************************************************
* End COPY                                                        @D2A*
***********************************************************************
NOTCOPY  DS    0H                                                  @D2A
***********************************************************************
* Begin DELETE                                                    @D2A*
***********************************************************************
*                                                                 @D2A*
*  If delete was specified:                                       @D2A*
*                                                                 @D2A*
*   Start a log stream browse session and position the log stream @D2A*
*   to oldest record to be kept                                   @D2A*
*                                                                 @D2A*
*   Delete all records prior to that position                     @D2A*
*                                                                 @D2A*
*   End the log stream browse session                             @D2A*
*                                                                 @D2A*
***********************************************************************
         TM    PFLAGS,DELETE       was delete specified?           @D2A
         BNO   NOTDEL              no, skip                        @D2A
* start browse session                                             @D2A
         MVC   LOGRMSGT,=CL10'IXGBRWSE-4' insert in case of error  @P6C
         IXGBRWSE REQUEST=START,                                       X
               SEARCH=DSTCK,           deletion date                   X
               GMT=NO,                 GMT   time                      X
               BROWSETOKEN=BRWTOKEN,                                   X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE                                     @D2A
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    DPOINTOK            yes, so we have deletion point  @D2A
*                                                                  @D2A
*        error in BROWSE START                                     @D2A
*        see if it is just a gap in the stream, and continue if so @P6A
*        see if there are just no records after deletion date      @D2A
*                                                                  @D2A
*        If the return code is 8 or more, set flag indicating      @02A
*        IXGBRWSE REQUEST=END should not be performed              @02A
*                                                                  @02A
*        IXGRSNCODEDIRECTGORYFULLWARNING = directory full          @02A
*        IXGRSNCODEEMPTYSTREAM = no records in log stream          @02A
*        IXGRSNCODEWARNINGGAP = request successful but data missing@P6A
*        IXGRSNCODEWARNINGDEL = records have been deleted          @01A
*        IXGRSNCODEEOFGAP = EOF because subsequent records not     @01A
*                           available due to gap                   @01A
*        IXGRSNCODEEOFDELETE = EOF because subsequent records      @01A
*                           previously deleted                     @01A
*        IXGRSNCODENOBLOCK = block does not exist                  @D2A
*        IXGRSNCODELOSSOFDATAGAP = records permanently missing     @01A
*        IXGRSNCODELOSSOFDATAEOF = premature end of file due to    @01A
*                             records permanently missing          @01A
*        IXGRSNCODEWARNINGLOSSOFDATA = loss of data situation      @P7A
*                                                                  @D2A
         CLC   RETCODE,=AL4(IXGRETCODEERROR) RC 8 or more?         @02A
         BL    STARTOKD            Yes, continue                   @02A
         OI    MFLAGS,NOBREND      No, do not do REQUEST=END       @02A
STARTOKD DS    0H                                                  @02A
         CLC   RETCODE,=AL4(IXGRETCODECOMPERROR) Logger error?     @02A
         BE    LOGRERR             Yes, close and return           @02A
         L     R14,RSNCODE         get reason code                 @D2A
         N     R14,=AL4(IXGRSNCODEMASK) and it with logger mask    @D2A
         C     R14,=AL4(IXGRSNCODEDSDIRECTORYFULLWARNING)  Is the
*                                  directory full?                 @02A
         BE    DPOINTOK            Yes, ok, we have deletion pt.   @02A
         C     R14,=AL4(IXGRSNCODEEMPTYSTREAM) Log stream empty?   @02A
         BE    DELDONE             Yes, nothing to delete          @02A
         C     R14,=AL4(IXGRSNCODEWARNINGGAP) is it a gap?         @P6A
         BE    DPOINTOK            yes, so we have deletion point  @P6A
         C     R14,=AL4(IXGRSNCODEWARNINGDEL) records deleted?     @01A
         BE    DPOINTOK            yes, so we have deletion point  @01A
         C     R14,=AL4(IXGRSNCODEEOFGAP) is it EOF because of a   @01A
*                                  gap in records to the end?      @01A
         BE    DELALL              yes, delete all records         @01A
         C     R14,=AL4(IXGRSNCODEEOFDELETE) is it EOF because of  @01A
*                                  deleted records?                @01A
         BE    DELALL              yes, delete all records         @01A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAGAP) is it records
*                                  permanently lost?               @01A
         BE    DPOINTOK            yes, so we have deletion point  @01A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAEOF) premature end of @ile
*                                  from records permanently lost?  @01A
         BE    DELALL              yes, delete all records         @01A
         C     R14,=AL4(IXGRSNCODEWARNINGLOSSOFDATA) loss of data? @P7A
         BE    DELALL              yes, delete all records         @P7A
         C     R14,=AL4(IXGRSNCODENOBLOCK) is it block not found?  @D2A
         BNE   LOGRERR             no, display the error           @D2A
*        no records after deletion date - delete them all          @D2A
DELALL   EQU   *                                                   @01A
         MVC   LOGRMSGT,=CL10'IXGDELET-1' insert in case of error  @P6C
         IXGDELET STREAMTOKEN=STRTOKEN, delete records                 X
               BLOCKS=ALL,                                             X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE                                     @D2A
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BNE   LOGRERR             no, display error               @D2A
         B     DELDONE             done with delete                @D2A
*        delete by blockid                                         @D2A
DPOINTOK MVC   LOGRMSGT,=CL10'IXGBRWSE-5' insert in case of error  @P6C
         IXGBRWSE REQUEST=READCURSOR, get block id of next record      X
               BROWSETOKEN=BRWTOKEN,                                   X
               BUFFER=STRBUFF,                                         X
               BUFFLEN=STRBLEN,                                        X
               DIRECTION=OLDTOYOUNG,                                   X
               RETBLOCKID=DELBLK,                                      X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE                                     @D2A
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    DPOINTDL            yes, continue                   @P6A
         L     R14,RSNCODE         get reason code                 @P6A
         N     R14,=AL4(IXGRSNCODEMASK) and it with logger mask    @P6A
         C     R14,=AL4(IXGRSNCODEWARNINGGAP) is it a gap?         @P6A
         BE    DPOINTDL            yes, continue                   @01A
         C     R14,=AL4(IXGRSNCODEWARNINGLOSSOFDATA) Records lost due
*                                  to environmental error?         @02A
         BE    DPOINTDL            yes, continue                   @02A
         C     R14,=AL4(IXGRSNCODELOSSOFDATAGAP) records permanently
*                                  lost?                           @01A
         BE    DPOINTDL            yes, continue                   @01A
         C     R14,=AL4(IXGRSNCODEWARNINGDEL) records deleted?     @01A
         BNE   LOGRERR             no, display error               @D2A
DPOINTDL MVC   LOGRMSGT,=CL10'IXGDELET-2' insert in case of error  @P6C
         IXGDELET STREAMTOKEN=STRTOKEN, delete records                 X
               BLOCKS=RANGE,                                           X
               BLOCKID=DELBLK,                                         X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BNE   LOGRERR             no, display error
DELDONE  DS    0H
         TM    MFLAGS,NOBREND        Bypass REQUEST=END?           @02A
         BO    NOTDEL                Yes                           @02A
         MVC   LOGRMSGT,=CL10'IXGBRWSE-6' insert in case of error  @P6C
         IXGBRWSE REQUEST=END,                                         X
               BROWSETOKEN=BRWTOKEN,                                   X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE                                     @D2A
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BE    NOTDEL              yes, begin cleanup              @P9C
***********************************************************************
*        Check for acceptable nonzero return/reason code           @P9A
*        combinations, including                                   @P9A
*        RC8/RS0804 - IXGRSNCODENOBLOCK - no block identifier      @P9A
***********************************************************************
         CLC   RETCODE,=AL4(IXGRETCODEERROR) Return Code 8?        @P9A
         BNE   LOGRERR             no, display error               @P9A
         CLC   RSNCODE,=AL4(IXGRSNCODENOBLOCK) no block id?        @P9A
         BE    NOTDEL              yes, this condition is ok       @P9A
         BNE   LOGRERR             no, display error               @D2A
***********************************************************************
* End DELETE                                                      @D2A*
***********************************************************************
NOTDEL   DS    0H                                                  @D2A
***********************************************************************
* Begin Cleanup                                                   @D2A*
***********************************************************************
*                                                                 @D2A*
*  Disconnect from the log stream                                 @D2A*
*                                                                 @D2A*
*  Free the buffer area                                           @D2A*
*                                                                 @D2A*
*  Exit                                                           @D2A*
*                                                                 @D2A*
***********************************************************************
         MVC   LOGRMSGT,=CL10'IXGCONN-2' insert in case of error   @P6C
         IXGCONN REQUEST=DISCONNECT, disconnect from the log stream    X
               STREAMTOKEN=STRTOKEN,                                   X
               ANSAREA=ANSAREA,                                        X
               ANSLEN=ANSLEN,                                          X
               RETCODE=RETCODE,                                        X
               RSNCODE=RSNCODE
         CLC   RETCODE,=AL4(IXGRETCODEOK) did it work ok?          @P6C
         BNE   LOGRERR             no, display error
*
         STORAGE RELEASE,LENGTH=STRBUFFL,ADDR=(R10) free the buffer
*
         L     R10,MDBBUFA
         STORAGE RELEASE,LENGTH=MDBBUFFL,ADDR=(R10) free the buffer
*
CHECKDEQ DS    0H
         TM    ENQFLG,ENQSUC                                      <USR>
         BNO   ENDOFPGM                                           <USR>
         MVC   @TIEMPOW,KDEFECTO   <> Forcing a delay             <USR>
         STIMER WAIT,DINTVL=@TIEMPOW                              <USR>
         DEQ   (MAJNAME,MINNAME,,SYSTEMS),RET=NONE                <USR>
ENDOFPGM DS    0H                                                 <USR>
         PR    ,                   exit
*
***********************************************************************
* End cleanup                                                         *
***********************************************************************
*
***********************************************************************
* Begin subroutines                                                   *
***********************************************************************
*
***********************************************************************
* CHKDATE - validate start/end date                                   *
*                                                                     *
*   Input:                                                            *
*     R9 -> date presumably in the form yyyyddd                       *
*     R14 = return address                                            *
*                                                                     *
*   Output:                                                           *
*     if date is valid, set r15 = 0, otherwise set r15 = nonzero      *
***********************************************************************
CHKDATE  LA    R15,1(0,0)          assume date is invalid
         TRT   0(7,R9),NUMTAB      scan for numbers
         BNZR  R14                 not all numbers, exit
         PACK  DATEWORK,0(7,R9)    pack the date
         CP    DATEWORK+2(2),=P'366'    is it gt 366?
         BHR   R14                 yes, error
         BE    CHKDLEAP            366, must be a leap year
         CP    DATEWORK+2(2),=P'1' is it lt 1?
         BLR   R14                 yes, error
         SR    R15,R15             show date is valid
         BR    R14                 exit
*        day is 366 -- make sure it's a leap year
* Rutina de verificación de bisiestos obsoleta y sustituida       <USR>
*HKDLEAP SRP   DATEWORK,64-3,0     shift out ddd
*        DP    DATEWORK,=PL1'4'    divide year by 4
*        CP    DATEWORK+3(1),=P'0' see if remainder is zero
*        BNER  R14                 exit if not, error
CHKDLEAP TM    TDATE+1,X'01'       ES ANO IMPAR?                  <USR>
         BO    R14                 SI, NO ES BISIESTO: error.     <USR>
         TM    TDATE+1,X'12'       ES DIVISIBLE POR CUATRO        <USR>
         BM    R14                 NO, NO ES BISIESTO: error.     <USR>
         CLI   TDATE+1,X'00'       ACABADO EN '00'                <USR>
         BNE   R14                 NO, ANO BISIESTO: error.       <USR>
         TM    TDATE,X'01'         CENTENA IMPAR ?                <USR>
         BO    R14                 SI, NO ES BISIESTO: error.     <USR>
         TM    TDATE,X'12'         DIVISIBLE POR CUATROCI.        <USR>
         BM    R14                 NO, DEVOLVER CONTROL: error.   <USR>
         SR    R15,R15             show date is valid
         BR    R14                 exit
*
***********************************************************************
* FIXDATE - adjust year after adding / subtracting days           @D2A*
*                                                                 @D2A*
*   Input:                                                        @D2A*
*     WORKDATE = date in the form yyyyddd packed; day may be zero @D2A*
*                or less, or over 365 (366 for leap years)        @D2A*
*     R14 = return address                                        @D2A*
*                                                                 @D2A*
*   Output:                                                       @D2A*
*     None; date in WORKDATE is adjusted to correct year and day  @D2A*
***********************************************************************
FIXDATE  DS    0H                                                  @D2A
         MVC   DATEWRK1,DATEWORK   copy date                       @D2A
         OI    DATEWRK1+3,X'0F'    force sign positive             @D2A
         SRP   DATEWRK1,64-3,0     shift out ddd                   @D2A
         NC    DATEWORK,=X'0000FFFF' zero out year in datework     @D2A
FIXDBACK DS    0H   back up year if day is zero or less            @D2A
         CP    DATEWORK,=PL1'0'    is the day zero?                @D2A
         BH    FIXDFWD             >0, ok                          @D2A
*        day is 0 or less; adjust day and back up to previous year @D2A
         AP    DATEWORK,=P'365'    adjust day                      @D2A
         SP    DATEWRK1,=PL1'1'    subtract 1 from year            @D2A
*        if leap year, add 1 to day                                @D2A
         MVC   DATEWRK2,DATEWRK1   copy the year                   @D2A
         DP    DATEWRK2,=PL1'4'    divide by 4                     @D2A
         CP    DATEWRK2+3(1),=PL1'0' is remainder zero (leap yr)?  @D2A
         BNE   FIXDBACK            no, not leap year,loop          @D2A
         AP    DATEWORK,=PL1'1'    add 1 to day                    @D2A
         B     FIXDBACK            loop                            @D2A
FIXDFWD  DS    0H   add to year if day is over 365 (366 if leap yr)@D2A
         MVC   DATEWRK2,DATEWRK1   copy the year                   @D2A
         DP    DATEWRK2,=PL1'4'    divide by 4                     @D2A
         CP    DATEWRK2+3(1),=PL1'0' is remainder zero (leap yr)?  @D2A
         BE    FIXDFWDL            yes                             @D2A
*        not leap year                                             @D2A
         CP    DATEWORK,=PL2'365'  is day over 365?                @D2A
         BNH   FIXDDONE            no, done                        @D2A
         SP    DATEWORK,=PL2'365'  subtract 365 from day           @D2A
FIXDFWDA AP    DATEWRK1,=PL1'1'    add 1 to year                   @D2A
         B     FIXDFWD             loop back                       @D2A
*        leap year                                                 @D2A
FIXDFWDL CP    DATEWORK,=PL2'366'  is day over 366?                @D2A
         BNH   FIXDDONE            no, done                        @D2A
         SP    DATEWORK,=PL2'366'  subtract 366 from day           @D2A
         B     FIXDFWDA            add to year                     @D2A
FIXDDONE SRP   DATEWRK1,3,0        adjust year to form yyyyddd     @D2A
         AP    DATEWORK,DATEWRK1   add year back in                @D2A
         BR    R14                 exit                            @D2A
*                                                                  @D2A
***********************************************************************
* CONVSTCK -Convert date from yyyyddd to stck format              @D2A*
*                                                                 @D2A*
*   Input:                                                        @D2A*
*     R3 -> date to convert, yyyyddd packed                       @D2A*
*     R4 -> field to hold STCK format date                        @D2A*
*     R14 = return address                                        @D2A*
*                                                                 @D2A*
*   Output:                                                       @D2A*
*     None; converted date is stored at address in R4.            @D2A*
*     Branches to BADPARM if conversion fails.                    @D2A*
*     Returns with no change if input date is binary zero.        @D2A*
***********************************************************************
CONVSTCK BAKR  R14,0               save caller's environment       @D2A
         CLC   0(7,R3),=XL7'0'     is input date zero?             @D2A
         BE    CONVDONE            yes, just return                @D2A
         PACK  WORK5,0(8,R3)       move date                      <USR>
         MVC   CONVDATE,WORK5      to parm area                   <USR>
*        PACK  CONVDATE,0(7,R3)    move date to parm area         <USR>
*        SP    CONVDATE,=P'1900000' strip off century             <USR>
         CONVTOD CONVVAL=CONVWORK,  convert to stck value              X
               TODVAL=(R4),                                            X
               TIMETYPE=DEC,       cambio tipo BIN por DEC        <USR>X
               DATETYPE=YYYYDDD    empleamos el formato yyyyddd   <USR>
*              DATETYPE=YYDDD      en lugar de yyddd              <USR>
         LTR   R15,R15             did it work?                    @D2A
         BZ    CONVDONE            no, error en la conversión     <USR>
         ABEND 26,DUMP             abend específico               <USR>
CONVDONE PR    ,                   return                          @D2A
*
*
***********************************************************************
* MESSR -- Display a message                                          *
*                                                                     *
*   Input:                                                            *
*     r2 -> text of message                                           *
*     R14 = return address                                            *
***********************************************************************
MESSR    DS    0H
         BAKR  R14,0               save caller's environment
         WTO   TEXT=(R2),          display message                     X
               ROUTCDE=(2,11)
         PR                        return to caller
*
***********************************************************************
* PUTREC -- PUT a record to the output file and set up for next       *
*                                                                     *
*   Input:                                                            *
*     r3 -> text                                                      *
*     r4  = text length                                               *
*     R14 = return address                                            *
***********************************************************************
PUTREC   DS    0H
         BAKR  R14,0               save caller's environment
         LR    R1,R4               length of text
         S     R1,=F'1'            subtract 1 for mvc
         BM    PUTRECX             return if negative (length < 1)
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYRR            No, customer wants a 2-digit year   X
                                   in the output records           @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
         LA    R2,HCRTEXT          borrow r2 (PR will restore it)  @04A
         A     R2,LOFF               for offset to text in log record  X
                                                                   @04A
         EX    R1,PUTMV            move in the text                @04A
         A     R1,=A(HCRHEADL+5)   calculate length of log record  @04A
         DROP  R9                  Drop addressability to HCRREC   @04A
         B     PUTCONT             continue to calculate output        X
                                   record length                   @04A
TWODGYRR DS    0H                  Process 2-digit year records    @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCL,R9              addressability to HCL mapping   @04A
         LA    R2,HCLTEXT          borrow r2 (PR will restore it)
         A     R2,LOFF               for offset to text in log record
         EX    R1,PUTMV            move in the text
         A     R1,=A(HCLHEADL+5)   calculate length of log record
         DROP  R9                  Drop addressability to HCL      @04A
PUTCONT  DS    0H
         A     R1,LOFF               including the offset
         STH   R1,LOGBUFL          move it into prefix
*                                                                 3@P8D
         PUT   OFILE,LOGBUFP       PUT the syslog record           @P8C
*                                                                 4@P8D
*
* set up for next record
*
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYRN            No, customer wants a 2-digit year   X
                                   in the output records           @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
         ICM   R15,1,HCRREQTP     save request type                @04A
         MVC   HCRREC(128),=CL128' ' clear out log record          @04A
         STCM  R15,1,HCRREQTP     restore request type             @04A
         MVI   FIRSTLNE,C'N'       show this is no longer first line   X
                                                                   @04A
         DROP  R9                  Drop addressability to HCRREC   @04A
         B     PUTRECX             Exit subroutine                 @04A
TWODGYRN DS    0H                  Process 2-digit year records    @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCL,R9              addressability to HCL mapping   @04A
         ICM   R15,1,HCLREQTP     save request type
         MVC   HCL(128),=CL128' ' clear out log record
         STCM  R15,1,HCLREQTP     restore request type
         MVI   FIRSTLNE,C'N'       show this is no longer first line
         DROP  R9                  Drop addressability to HCL      @04A
PUTRECX  PR    ,                  return
PUTMV    MVC   0(*-*,R2),0(R3)    executed instruction
*
***********************************************************************
* GAPMSG -- PUT special record to the output file indicating       @01A
*           data missing (due to deleted record, gap, etc.)        @01A
*           and set up for the next                                @01A
*                                                                  @01A
*   Input:                                                         @01A
*     RETCODE = service routine return code                        @01A
*     RSNCODE = service routine reason code                        @01A
*     R14 = return address                                         @01A
*     Logger service routine already initialized from LOGRMSGT     @01A
*                                                                  @01A
***********************************************************************
GAPMSG   DS    0H                                                  @01A
         BAKR  R14,0               save caller's environment       @01A
         TM    MFLAGS,OPEN         is there an output dataset?     @02A
         BNO   PUTGOK              No, skip writing message        @02A
         MVC   NOMSGRTN,LOGRMSGT   put name of logger service routine
*                                  where gap found in message      @01A
         LR    R6,R14              save R14 across putrec call     @01A
*                                  (restored by PR anyway)         @01A
         UNPK  NOMSGRC(4),RETCODE+2(3)  get return code            @01A
         TR    NOMSGRC,HEXTAB      make it printable               @01A
         MVI   NOMSGRC+3,C','      replace lost character          @01A
         UNPK  NOMSGRS(5),RSNCODE+2(3) get reason code             @01A
         TR    NOMSGRS,HEXTAB      make it printable               @01A
         MVI   NOMSGRS+4,C' '      replace lost character          @01A
         MVC   LOGBUF(128),=CL128' '  blank message text area      @04C
         MVC   LOGBUF,NOMSGMSG     move text into log buffer       @01A
         LH    R3,NOMSGAL2         length of message               @01A
         LA    R3,4(,R3)           Add for RDW                     @01A
         STH   R3,LOGBUFL          set record length               @01A
*                                                                 3@P8D
         PUT   OFILE,LOGBUFP       PUT the record                  @01A
*                                                                 3@P8D
PUTGOK   EQU   *                                                   @01A
         PR    ,                   return                          @01A
*
***********************************************************************
* GENINFO -- Get information from the MDB general object and          *
*            fill in the appropriate log record fields.               *
*            Use the HCL or HCR to map the log records depending      *
*            on whether the output records should have a 2-digit      *
*            year or a 4-digit year respectively.                 @04A*
*                                                                     *
*   Input:                                                        @04A*
*     r7 -> MDBG                                                  @04A*
*     R14 = return address                                        @04A*
***********************************************************************
GENINFO  DS    0H                                                  @04A
         BAKR  R14,0               save caller's environment       @04A
         USING MDBG,R7             addressability to general object    X
                                                                   @04A
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYR1            No, customer wants a 2-digit year   X
                                   in the output records           @04A
*
* set up log record base
*                                                                  @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
         MVC   HCRSYSID,MDBGOSNM   system name                     @04A
         MVC   HCRDATE,MDBGDSTP    date with 4-digit year (yyyyddd)    X
                                                                   @04A
         MVC   HCRTIME,MDBGTIMH    time                            @04A
         MVI   HCRTIME+2,C':'      separate with                   @04A
         MVI   HCRTIME+5,C':'       colons                         @04A
         DROP  R9                                                  @04A
         B     GENEXIT             Exit subroutine                 @04A
TWODGYR1 DS    0H                  Process 2-digit year output records X
                                                                   @04A
* set up log record base
*                                                                  @04M
         LA    R9,LOGBUF           syslog record                   @04C
         USING HCL,R9              addressability                  @04C
         MVC   HCLSYSID,MDBGOSNM   system name                     @04M
         MVC   HCLDATE,MDBGDSTP+2  date (note that MDB form is yyyyddd)
         MVC   HCLTIME,MDBGTIMH    time                            @04M
         MVI   HCLTIME+2,C':'      separate with                   @04M
         MVI   HCLTIME+5,C':'       colons                         @04M
         DROP  R9                                                  @04A
GENEXIT  DS    0H                  Exit subroutine                 @04A
         DROP  R7                  Drop addressability to MDB general  X
                                   object                          @04A
         PR                        return to caller                @04A
*
***********************************************************************
* CPINFO --  Get information from the MDB CP object and               *
*            fill in the appropriate log record fields.               *
*            Use the HCL or HCR to map the log records depending      *
*            on whether the output records should have a 2-digit      *
*            year or a 4-digit year respectively.                 @04A*
*                                                                     *
*   Input:                                                        @04A*
*     r7 -> MDBSCP                                                @04A*
*     R14 = return address                                        @04A*
***********************************************************************
CPINFO   DS    0H                                                  @04A
         BAKR  R14,0               save caller's environment       @04A
         USING MDBSCP,R7           addressability to cp object     @04A
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYR2            No, customer wants a 2-digit year   X
                                   in the output records           @04A
*
* set up log record base
*                                                                  @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
         MVI   HCRRECTP,HCRMLWTO   assume a multiline msg          @04A
         CLC   MDBCLCNT,=F'1'      see if more than one line       @04A
         BH    CPROK4              ok if so                        @04A
         MVI   HCRRECTP,HCRWTO     make it a single line message   @04A
         TM    MDBMLVL1,MDBMLR     is it a wtor?                   @04A
         BNO   CPROK4              no, ok                          @04A
         MVI   HCRRECTP,HCRWTOR    make it a wtor                  @04A
***********************************************************************
* set up request type                                              @04A
***********************************************************************
CPROK4   TM    MDBCMSC2,MDBCOCMD   is it an operator cmd echo?     @04A
         BNO   CPNOP4              no, try next                    @04A
         MVI   HCRREQTP,HCRCMD     mark it as operator command     @04A
         CLC   MDBCCNID,=F'0'      is it an internal cmd (cons id=0)?  X
                                                                   @04A
         BNE   CPRC4               no, so HCLCMD is ok             @04A
         MVI   HCRREQTP,HCRINTNL   mark it as internal command     @04A
         B     CPRC4                                               @04A
CPNOP4   TM    MDBCATT1,MDBCMCSC   is it a command response?       @04A
         BO    CPRSP4              yes, mark it so                 @04A
         TM    MDBDESC1,MDBDESCE   is it desc=5 (also cmd resp)    @04A
         BNO   CPRC4               no, not cmd response            @04A
CPRSP4   MVI   HCRREQTP,HCRRESP   mark it as command response      @04A
***********************************************************************
* make routing codes printable                                     @04A
***********************************************************************
CPRC4    UNPK  TWORK(9),MDBCERC(5) unpack first 28 routing codes   @04A
         TR    TWORK(7),HEXTAB     make them printable             @04A
         MVC   HCRROUTC,TWORK      move into record                @04A
***********************************************************************
* make request flags printable                                     @04A
***********************************************************************
         UNPK  TWORK(9),MDBCXMOD(5) unpack request flags           @04A
         TR    TWORK(8),HEXTAB     make them printable             @04A
         MVC   HCRREQFL,TWORK      move into record                @04A
         MVC   REQFL,TWORK         save for second line            @04A
         DROP  R9                                                  @04A
         B     CPEXIT              Exit subroutine                 @04A
TWODGYR2 DS    0H                  Process 2-digit year output records X
                                                                   @04A
* set up log record base
*                                                                  @04M
         LA    R9,LOGBUF           syslog record                   @04C
         USING HCL,R9              addressability                  @04C
         MVI   HCLRECTP,HCLMLWTO   assume a multiline msg          @04M
         CLC   MDBCLCNT,=F'1'      see if more than one line       @04M
         BH    CPROK               ok if so                        @04M
         MVI   HCLRECTP,HCLWTO     make it a single line message   @04M
         TM    MDBMLVL1,MDBMLR     is it a wtor?                   @04M
         BNO   CPROK               no, ok                          @04M
         MVI   HCLRECTP,HCLWTOR    make it a wtor                  @04M
***********************************************************************
* set up request type                                              @04M
***********************************************************************
CPROK    TM    MDBCMSC2,MDBCOCMD   is it an operator cmd echo?     @04M
         BNO   CPNOP               no, try next                    @04M
         MVI   HCLREQTP,HCLCMD     mark it as operator command     @04M
         CLC   MDBCCNID,=F'0'      is it an internal cmd (cons id=0)?  X
                                                                   @04M
         BNE   CPRC                no, so HCLCMD is ok             @04M
         MVI   HCLREQTP,HCLINTNL   mark it as internal command     @04M
         B     CPRC                                                @04M
CPNOP    TM    MDBCATT1,MDBCMCSC   is it a command response?       @04M
         BO    CPRSP               yes, mark it so                 @04M
         TM    MDBDESC1,MDBDESCE   is it desc=5 (also cmd resp)    @04M
         BNO   CPRC                no, not cmd response            @04M
CPRSP    MVI   HCLREQTP,HCLRESP   mark it as command response      @04M
***********************************************************************
* make routing codes printable                                     @04M
***********************************************************************
CPRC     UNPK  TWORK(9),MDBCERC(5) unpack first 28 routing codes   @04M
         TR    TWORK(7),HEXTAB     make them printable             @04M
         MVC   HCLROUTC,TWORK      move into record                @04M
***********************************************************************
* make request flags printable                                     @04M
***********************************************************************
         UNPK  TWORK(9),MDBCXMOD(5) unpack request flags           @04M
         TR    TWORK(8),HEXTAB     make them printable             @04M
         MVC   HCLREQFL,TWORK      move into record                @04M
         MVC   REQFL,TWORK         save for second line            @04M
         DROP  R9                                                  @04A
CPEXIT   DS    0H                  Exit subroutine                 @04A
         DROP  R7                  Drop addressability to MDB CP       X
                                                                   @04A
         PR                        return to caller                @04A
*
***********************************************************************
* JOBINFO--  Get jobname information and fill in the                  *
*            appropriate log record fields.                           *
*            Use the HCL or HCR to map the log records depending      *
*            on whether the output records should have a 2-digit      *
*            year or a 4-digit year respectively.                 @04A*
*                                                                     *
*   Input:                                                        @04A*
*     r7 -> MDB                                                   @04A*
*     R14 = return address                                        @04A*
***********************************************************************
JOBINFO  DS    0H                                                  @04A
         BAKR  R14,0               save caller's environment       @04A
         USING MDB,R7              addressability to MDB object    @04A
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYR3            No, customer wants a 2-digit year   X
                                   in the output records           @04A
*
* set up log record base
*                                                                  @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
         CLI   HCRREQTP,HCRCMD     is it a command?                @04A
         BNE   NOTCMD4             no, try next                    @04A
         CLC   CONSID,=F'128'      is it an instream command?      @04A
         BE    GETCONS4            yes, use console name (INSTREAM)    X
                                                                   @04A
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04A
         BE    GETCONS4            yes, use console name           @04A
         B     CHKMCS4             go see if it's an MCS console   @04A
NOTCMD4  CLI   HCRREQTP,HCRINTNL   is it an internal command?      @04A
         BNE   NOTINTL4            no, try next                    @04A
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04A
         BNE   GETJOB4             no, so use job name             @04A
         MVI   HCRREQTP,HCRCMD     change request type to "command"    X
                                                                   @04A
         B     GETCONS4            use console name (INTERNAL)     @04A
NOTINTL4 CLI   HCRREQTP,HCLRESP    is it a command response?       @04A
         BNE   GETJOB4             no, so use job name             @04A
         TM    MCSFLAG1,MDBMCSB+MDBMCSH was it sent by console id      X
                                        in reg 0?                  @04A
         BZ    GETJOB4             no, use job name                @04A
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04A
         BNE   GETJOB4             no, so use job name             @04A
         CLC   CONSID,=F'0'        is it internal?                 @04A
         BE    GETCONS4            yes, use console name (INTERNAL)    X
                                                                   @04A
         CLC   CONSID,=F'128'      is it instream?                 @04A
         BE    GETCONS4            yes, use console name (INSTREAM)    X
                                                                   @04A
CHKMCS4  CLI   CONSID,X'00'        is console class zero (MCS)?    @04A
         BE    GETJOB4             yes, use job name               @04A
         TM    CONSID,X'E0'        is console class a JES3 console?    X
                                                                   @04A
         BNZ   GETJOB4             yes, so use job name            @04A
***********************************************************************
* move console name into hcr                                       @04A
***********************************************************************
GETCONS4 MVC   HCRCONID,CONSNAME   move in console name from MDB   @04A
         CLC   CONSID,=F'0'        is it "internal"?               @04A
         BNE   CONSNOT4            no, ok                          @04A
         MVC   HCRCONID,=CL8'INTERNAL' move in "internal"          @04A
         B     MDBJBOK4                                            @04A
CONSNOT4 CLC   CONSID,=F'128'      is it "instream"?               @04A
         BNE   MDBJBOK4            no, ok                          @04A
         MVC   HCRCONID,=CL8'INSTREAM' move in "instream"          @04A
         B     MDBJBOK4            done with job/console field     @04A
***********************************************************************
*        move in job name                                          @04A
GETJOB4  MVC   HCRJOBID,JOBNAME    move in job name                @04A
*
MDBJBOK4 DS    0H                                                  @04A
*                                                                  @04A
* erase the timestamp if NOTIME was requested                      @04A
***********************************************************************
         TM    MCSFLAG2,MDBMCSI    was "NOTIME" requested?         @04A
         BNO   TIMEOK              no, so leave time alone         @04A
         MVC   HCRTIME,=CL11' '    blank out the time stamp        @04A
         DROP  R9                                                  @04A
         B     TIMEOK              Exit subroutine                 @04A
TWODGYR3 DS    0H                  Process 2-digit year output records X
                                                                   @04A
* set up log record base
*                                                                  @04M
         LA    R9,LOGBUF           syslog record                   @04C
         USING HCL,R9              addressability                  @04C
         CLI   HCLREQTP,HCLCMD     is it a command?                @04M
         BNE   NOTCMD              no, try next                    @04M
         CLC   CONSID,=F'128'      is it an instream command?      @04M
         BE    GETCONS             yes, use console name (INSTREAM)    X
                                                                   @04M
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04M
         BE    GETCONS             yes, use console name           @04M
         B     CHKMCS              go see if it's an MCS console   @04M
NOTCMD   CLI   HCLREQTP,HCLINTNL   is it an internal command?      @04M
         BNE   NOTINTL             no, try next                    @04M
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04M
         BNE   GETJOB              no, so use job name             @04M
         MVI   HCLREQTP,HCLCMD     change request type to "command"    X
                                                                   @04M
         B     GETCONS             use console name (INTERNAL)     @04M
NOTINTL  CLI   HCLREQTP,HCLRESP    is it a command response?       @04M
         BNE   GETJOB              no, so use job name             @04M
         TM    MCSFLAG1,MDBMCSB+MDBMCSH was it sent by console id      X
                                        in reg 0?                  @04M
         BZ    GETJOB              no, use job name                @04M
         CLC   JOBNAME,=CL8' '     is jobname blank?               @04M
         BNE   GETJOB              no, so use job name             @04M
         CLC   CONSID,=F'0'        is it internal?                 @04M
         BE    GETCONS             yes, use console name (INTERNAL)    X
                                                                   @04M
         CLC   CONSID,=F'128'      is it instream?                 @04M
         BE    GETCONS             yes, use console name (INSTREAM)    X
                                                                   @04M
CHKMCS   CLI   CONSID,X'00'        is console class zero (MCS)?    @04M
         BE    GETJOB              yes, use job name               @04M
         TM    CONSID,X'E0'        is console class a JES3 console?    X
                                                                   @04M
         BNZ   GETJOB              yes, so use job name            @04M
***********************************************************************
* move console name into hcl                                       @04M
***********************************************************************
GETCONS  MVC   HCLCONID,CONSNAME   move in console name from MDB   @04M
         CLC   CONSID,=F'0'        is it "internal"?               @04M
         BNE   CONSNOTI            no, ok                          @04M
         MVC   HCLCONID,=CL8'INTERNAL' move in "internal"          @04M
         B     MDBJOBOK                                            @04M
CONSNOTI CLC   CONSID,=F'128'      is it "instream"?               @04M
         BNE   MDBJOBOK            no, ok                          @04M
         MVC   HCLCONID,=CL8'INSTREAM' move in "instream"          @04M
         B     MDBJOBOK            done with job/console field     @04M
***********************************************************************
*        move in job name                                          @04M
GETJOB   MVC   HCLJOBID,JOBNAME    move in job name                @04M
*                                                                  @04M
MDBJOBOK DS    0H                                                  @04M
*                                                                  @04M
* erase the timestamp if NOTIME was requested                      @04M
***********************************************************************
         TM    MCSFLAG2,MDBMCSI    was "NOTIME" requested?         @04M
         BNO   TIMEOK              no, so leave time alone         @04M
         MVC   HCLTIME,=CL11' '    blank out the time stamp        @04M
         DROP  R9                                                  @04A
TIMEOK   DS    0H                                                  @04M
***********************************************************************
* remember this is the first line in the message                   @04M
         MVI   FIRSTLNE,C'Y'       set first-line indicator        @04M
         DROP  R7                  Drop addressability to MDB object   X
                                                                   @04A
         PR                        return to caller                @04A
***********************************************************************
* PROCLINE-  Process the line. Test to see if the message if a        *
*            multiline message, and if so set the appropriate         *
*            log record fields.                                       *
*            Test to see if the line fits in one output record.       *
*            If line does not fit in one output record, then          *
*            split the line. Finally put the output record in         *
*            the output dataset.                                      *
*            Use the HCL or HCR to map the log records depending      *
*            on whether the output records should have a 2-digit      *
*            year or a 4-digit year respectively.                 @04A*
*                                                                     *
*   Input:                                                        @04A*
*     r7 -> MDBT                                                  @04A*
*     R14 = return address                                        @04A*
***********************************************************************
PROCLINE DS    0H                                                  @04A
         BAKR  R14,0               save caller's environment       @04A
         USING MDBT,R7             addressability to MDB Text          X
                                   object                          @04A
         TM    PFLAGS,CENTURY      Does customer want a 4-digit year   X
                                   in output records               @04A
         BNO   TWODGYR4            No, customer wants a 2-digit year   X
                                   in the output records           @04A
*
* set up log record base
*                                                                  @04A
         LA    R9,LOGBUF           syslog record                   @04A
         USING HCRREC,R9           addressability to HCR mapping   @04A
***********************************************************************
* see if this is line 2 or greater of a multiline, and if so
*     show the multiline id and
*     fill in the record type from the line type                   @04A
***********************************************************************
         CLI   FIRSTLNE,C'Y'       see if this is the first line   @04A
         BE    MDBMLOK4            bypass if so                    @04A
         MVC   HCRMLID,MLID        move in the multiline id number @04A
         MVC   HCRREQFL,REQFL      move in request flags           @04A
         TM    MDBTLNT1,MDBTLABT   see if label line               @04A
         BNO   TXTNL4              no, try data                    @04A
         MVI   HCRRECTP,HCRLABEL   show it is a label              @04A
TXTNL4   TM    MDBTLNT1,MDBTDATT   see if data line                @04A
         BNO   TXTND4              no, try end                     @04A
         MVI   HCRRECTP,HCRDATA    show it is data                 @04A
TXTND4   TM    MDBTLNT1,MDBTENDT   see if end line                 @04A
         BNO   MDBMLOK4            no, ok                          @04A
         MVI   HCRRECTP,HCRDTEND   show it is the end line         @04A
MDBMLOK4 DS    0H                                                  @04A
***********************************************************************
* place text behind control info                                   @04A
***********************************************************************
         MVC   LOFF,=F'0'          init offset of text in log record
*                                   (zero for first line, then one)
*                                                                  @04A
***********************************************************************
* loop through text, issue PUT for each piece of text up to length 128
*                                                                  @04A
***********************************************************************
TXTLP4   C     R2,=A(128-HCRHEADL) see if text is too long for buf@er  X
                                                                   @04A
         BNH   TXTDN4              do last piece if not            @04A
***********************************************************************
* truncate at a blank or comma, get length in R4                   @04A
***********************************************************************
         LA    R4,127-HCRHEADL(0,R3) starting position             @04A
         LA    R1,118-HCRHEADL(0,R3) ending position               @04A
         MVC   BLANKCT,=F'1'       assume there is a blank         @04A
TXTSC4   CLI   0(R4),C' '          look for a blank                @04A
         BE    TXTL4               stop if found                   @04A
         CLI   0(R4),C','          look for a comma                @04A
         BNE   TXTBK4              not found, try previous position    X
                                                                   @04A
         LA    R4,1(,R4)           keep comma on this line         @04A
         MVC   BLANKCT,=F'0'       show no blank found             @04A
         B     TXTL4               split the line                  @04A
TXTBK4   BCTR  R4,0                back up                         @04A
         CR    R4,R1               see if at end position          @04A
         BNL   TXTSC4              loop back if not                @04A
         LA    R4,128-HCRHEADL(0,R3) too big - trunc at 128        @04A
         MVC   BLANKCT,=F'0'       show no blank found             @04A
TXTL4    SR    R4,R3               calculate length                @04A
***********************************************************************
* issue PUT for the partial text                                   @04A
***********************************************************************
         BAS   R14,PUTREC          PUT the syslog record           @04A
         MVI   HCRRECTP,HCRSPLIT   show this is a continuation     @04A
         MVC   LOFF,=F'1'          adjust text offset for cont. lines  X
                                                                   @04A
         A     R4,BLANKCT          skip the blank if there was one @04A
         SR    R2,R4               reduce the count                @04A
         AR    R3,R4               bump down the record            @04A
         B     TXTLP4              loop to do all pieces           @04A
***********************************************************************
* issue PUT for last (or only) piece                               @04A
*                                                                  @04A
TXTDN4   DS    0H                                                  @04A
*                                                                  @04A
* if this is the first line of a multiline and is not an operator  @04A
*     request (descriptor code 9), append the multiline id to the  @04A
*     text.  If there is not enough room in the line for the id,   @04A
*     print it on the next (split) line by itself.                 @04A
***********************************************************************
         CLI   HCRRECTP,HCRMLWTO   is it first line of multiline?  @04A
         BNE   NOTFIRST            no, ok                          @04A
         TM    DESC2,MDBDESCI      is it descriptor code 9?        @04A
         BO    NOTFIRST            yes, ok                         @04A
         C     R2,=A(128-HCRHEADL-4) see if there is room for mlid @04A
         BH    MLSPLIT4            go split line if not            @04A
*        build line with mlid appended                             @04A
         LR    R14,R2              get text length                 @04A
         BCTR  R14,0               subtract 1 for MVC              @04A
         EX    R14,MLMVC4          move in the text                @04A
         LA    R14,MLTEMPLN(R2)    end of text + 1                 @04A
         MVC   0(4,R14),HCID       append mlid                     @04A
         A     R2,=F'4'            add 4 to length for mlid        @04A
         LA    R3,MLTEMPLN         point to new line               @04A
         B     NOTFIRST            go put the line                 @04A
MLMVC4   MVC   MLTEMPLN(*-*),0(R3) executed above                  @04A
*        put the line and build a split line containing the MLID   @04A
MLSPLIT4 DS    0H                                                  @04A
         LR    R4,R2               get text length                 @04A
         BAS   R14,PUTREC          put the line                    @04A
         MVI   HCRRECTP,HCRSPLIT   show this is a continuation     @04A
         L     R2,=F'4'            length of mlid                  @04A
         LA    R3,HCID             address of mlid                 @04A
         DROP  R9                                                  @04A
         B     NOTFIRST            go put the line                 @04A
TWODGYR4 DS    0H                  Process 2-digit year output records X
                                                                   @04A
* set up log record base
*                                                                  @04M
         LA    R9,LOGBUF           syslog record                   @04C
         USING HCL,R9              addressability                  @04C
***********************************************************************
* see if this is line 2 or greater of a multiline, and if so
*     show the multiline id and
*     fill in the record type from the line type                   @04M
***********************************************************************
         CLI   FIRSTLNE,C'Y'       see if this is the first line   @04M
         BE    MDBMLOK             bypass if so                    @04M
         MVC   HCLMLID,MLID        move in the multiline id number @04M
         MVC   HCLREQFL,REQFL      move in request flags           @04M
         TM    MDBTLNT1,MDBTLABT   see if label line               @04M
         BNO   TXTNL               no, try data                    @04M
         MVI   HCLRECTP,HCLLABEL   show it is a label              @04M
TXTNL    TM    MDBTLNT1,MDBTDATT   see if data line                @04M
         BNO   TXTND               no, try end                     @04M
         MVI   HCLRECTP,HCLDATA    show it is data                 @04M
TXTND    TM    MDBTLNT1,MDBTENDT   see if end line                 @04M
         BNO   MDBMLOK             no, ok                          @04M
         MVI   HCLRECTP,HCLDTEND   show it is the end line         @04M
MDBMLOK  DS    0H                                                  @04M
***********************************************************************
* place text behind control info                                   @04M
***********************************************************************
         MVC   LOFF,=F'0'          init offset of text in log record
*                                   (zero for first line, then one)
*                                                                  @04M
***********************************************************************
* loop through text, issue PUT for each piece of text up to length 128
*                                                                  @04M
***********************************************************************
TXTLP    C     R2,=A(128-HCLHEADL) see if text is too long for buf@er  X
                                                                   @04M
         BNH   TXTDN               do last piece if not            @04M
***********************************************************************
* truncate at a blank or comma, get length in R4                   @04M
***********************************************************************
         LA    R4,127-HCLHEADL(0,R3) starting position             @04M
         LA    R1,118-HCLHEADL(0,R3) ending position               @04M
         MVC   BLANKCT,=F'1'       assume there is a blank         @04M
TXTSC    CLI   0(R4),C' '          look for a blank                @04M
         BE    TXTL                stop if found                   @04M
         CLI   0(R4),C','          look for a comma                @04M
         BNE   TXTBK               not found, try previous position    X
                                                                   @04M
         LA    R4,1(,R4)           keep comma on this line         @04M
         MVC   BLANKCT,=F'0'       show no blank found             @04M
         B     TXTL                split the line                  @04M
TXTBK    BCTR  R4,0                back up                         @04M
         CR    R4,R1               see if at end position          @04M
         BNL   TXTSC               loop back if not                @04M
         LA    R4,128-HCLHEADL(0,R3) too big - trunc at 128        @04M
         MVC   BLANKCT,=F'0'       show no blank found             @04M
TXTL     SR    R4,R3               calculate length                @04M
***********************************************************************
* issue PUT for the partial text                                   @04M
***********************************************************************
         BAS   R14,PUTREC          PUT the syslog record           @04M
         MVI   HCLRECTP,HCLSPLIT   show this is a continuation     @04M
         MVC   LOFF,=F'1'          adjust text offset for cont. lines  X
                                                                   @04M
         A     R4,BLANKCT          skip the blank if there was one @04M
         SR    R2,R4               reduce the count                @04M
         AR    R3,R4               bump down the record            @04M
         B     TXTLP               loop to do all pieces           @04M
***********************************************************************
* issue PUT for last (or only) piece                               @04M
*                                                                  @04M
TXTDN    DS    0H                                                  @04M
*                                                                  @04M
* if this is the first line of a multiline and is not an operator  @04M
*     request (descriptor code 9), append the multiline id to the  @04M
*     text.  If there is not enough room in the line for the id,   @04M
*     print it on the next (split) line by itself.                 @04M
***********************************************************************
         CLI   HCLRECTP,HCLMLWTO   is it first line of multiline?  @04M
         BNE   NOTFIRST            no, ok                          @04M
         TM    DESC2,MDBDESCI      is it descriptor code 9?        @04M
         BO    NOTFIRST            yes, ok                         @04M
         C     R2,=A(128-HCLHEADL-4) see if there is room for mlid @04M
         BH    MLSPLIT             go split line if not            @04M
*        build line with mlid appended                             @04M
         LR    R14,R2              get text length                 @04M
         BCTR  R14,0               subtract 1 for MVC              @04M
         EX    R14,MLMVC           move in the text                @04M
         LA    R14,MLTEMPLN(R2)    end of text + 1                 @04M
         MVC   0(4,R14),HCID       append mlid                     @04M
         A     R2,=F'4'            add 4 to length for mlid        @04M
         LA    R3,MLTEMPLN         point to new line               @04M
         B     NOTFIRST            go put the line                 @04M
MLMVC    MVC   MLTEMPLN(*-*),0(R3) executed above                  @04M
*        put the line and build a split line containing the MLID   @04M
MLSPLIT  DS    0H                                                  @04M
         LR    R4,R2               get text length                 @04M
         BAS   R14,PUTREC          put the line                    @04M
         MVI   HCLRECTP,HCLSPLIT   show this is a continuation     @04M
         L     R2,=F'4'            length of mlid                  @04M
         LA    R3,HCID             address of mlid                 @04M
         DROP  R9                                                  @04A
NOTFIRST DS    0H                                                  @04M
*                                                                  @04M
         LR    R4,R2               get length of text              @04M
         BAS   R14,PUTREC          PUT the syslog record           @04M
         DROP  R7                  Drop addressability to MDB Text     X
                                   object                          @04A
         PR                        return to caller                @04A
*                                                                 <USR>
* Rutina de asignación dinámica de MDBLOG                         <USR>
*                                                                 <USR>
MDBDYN   DS    0H                                                 <USR>
         BAKR  R14,0               save caller's environment      <USR>
         USING MDB,R8                                             <USR>
*        LR    R6,R8               calc end of mdb in R6          <USR>
*        AH    R6,MDBLEN           start+mdblen in header         <USR>
         LA    R7,MDBHLEN(0,R8)    address of first object        <USR>
         DROP  R8                                                 <USR>
         USING MDBG,R7                                            <USR>
*        +------------------------------------+                   <USR>
*>>>>>>>>|   OBTENCION DEL NOMBRE DEL SYSPLEX |<<<<<<<<<<<<<<<<<<<<USR>
*        +------------------------------------+                   <USR>
         DS        0H                                             <USR>
         LA        R3,INSISWK                                     <USR>
         USING     INSISTMA,R3                                    <USR>
         MVC       @MDSICAL,=AL2(@MDSILEN)                        <USR>
         LINK      EP=MDSISTM,PARAM=((R3))                        <USR>
*                                                                 <USR>
         LA        R1,$DATOSA1+L'$DATOSA1-1      <> FIN DE DSNAME <USR>
LB10     DS        0H                                             <USR>
         CLI       0(R1),C' '          <> BUSQUEDA PRIMER NO BLANC<USR>
         BNE       LB10A                                          <USR>
         BCT       R1,LB10             <> REHACER BUCLE           <USR>
LB10A    DS        0H                                             <USR>
         MVC       1(L'@PLEXNAM,R1),@PLEXNAM                      <USR>
*                                                                 <USR>
         DROP      R3                                             <USR>
*        +------------------------------------+                   <USR>
*>>>>>>>>| Convert GMT date to YYYMMDD format |<<<<<<<<<<<<<<<<<<<<USR>
*        +------------------------------------+                   <USR>
STCKCONV DS        0H                                             <USR>
         STCKCONV STCKVAL=GMTCSTCK,  convert GMT stck value       <USR>X
               CONVVAL=$TOD,         to TOD format                <USR>X
               TIMETYPE=DEC,                                      <USR>X
               DATETYPE=YYYYMMDD                                  <USR>
         UNPK  WORKA15(9),$TODDTE(5)  Unpack GMT date             <USR>
         NI    WORKA15,B'11001111' Translate millenium for letter <USR>
         MVC   W_DATE(8),WORKA15      Store MDB GMT date          <USR>
         UNPK  WORKA15(9),$TODTME(5)  Unpack DMB GMT time
         MVC   W_TIME+1(6),WORKA15    Store MDB GMT time
*                                                                 <USR>
LB20     DS        0H                                             <USR>
         LA        R1,$DATOSA1+L'$DATOSA1-1      <> FIN DE DSNAME <USR>
*                                                                 <USR>
LB30     DS        0H                                             <USR>
         CLI       0(R1),C' '          <> BUSQUEDA PRIMER NO BLANC<USR>
         BNE       LB30A                                          <USR>
         BCT       R1,LB30             <> REHACER BUCLE           <USR>
LB30A    DS        0H                                             <USR>
         LA        R1,1(,R1)           <> AVANZAR EL NO BLANCO    <USR>
         MVI       0(R1),C'.'          <> PUNTO TRAS PLEXNAME     <USR>
*                                                                 <USR>
         LA    R1,1(R1)               Address R1 for 4th Qualifier<USR>
         MVC   0(L'W_DATE,R1),W_DATE  Put SMF Record Date         <USR>
         LA    R1,L'W_DATE-1(R1)      Address R1 for 5th Q.       <USR>
         MVI   1(R1),C'.'             Put dot                     <USR>
         MVC   2(L'W_TIME,R1),W_TIME  Put SMF Record Time         <USR>
*                                                                 <USR>
*        MVC       1(L'W_DATE,R1),W_DATE                          <USR>
*        MVI       1+L'W_DATE(R1),C'.'           <> PUNTO TRAS FEC<USR>
*        MVI       1+L'W_DATE+1(R1),C'H'         <> PREFIJO DE HOR<USR>
*        MVC       1+L'W_DATE+1+1(2,R1),MDBGTIMH                  <USR>
*        MVC       1+L'W_DATE+1+1+2(2,R1),MDBGTIMH+3              <USR>
*   LLQ: Hhhmmss                                                  <USR>
*        MVC       1+L'W_DATE+1+1+2+2(2,R1),MDBGTIMH+6            <USR>
*                                                                 <USR>
         LA    R15,LB80            llamada a MDALDIN              <USR>
         N     R15,OFF31           STRIP OFF AMODE(31) BIT        <USR>
         BASSM R14,R15             SET AMODE                      <USR>
*                                                                 <USR>
LB80     MVC   WTO004+8(50),$DATOSA1
WTO004   WTO   '                                                      '
         CALL  MDALDIN,                                           <USR>X
               ($WORKDIN,$PETICI,$DATOSA,$DATOSB),VL              <USR>
         LA    R14,LB80OK          GET RESUME ADDRESS             <USR>
         O     R14,ON31            TURN ON AMODE(31) BIT          <USR>
         BSM   0,R14               SET AMODE(31)                  <USR>
LB80OK   DS    0H                                                 <USR>
         LTR   R15,R15             <> CODIGO RETORNO MDALDIN      <USR>
         BZ    LB90                <> ASIGNACION CORRECTA, SEGUIR <USR>
*                                                                 <USR>
         WTO   '**IEAMDBLG** ASIGNACION DINAMICA ERRONEA. '       <USR>
         ABEND 888,DUMP                                           <USR>
LB90     DS    0H                                                 <USR>
         OI    FLAGS2,MDBALDIN     establecer indicador MDBALDIN  <USR>
         OPEN  (MFILE,OUTPUT)      ABRIR MFILE                    <USR>
         C     R15,=F'8'           VERIFICO LA OPEN:              <USR>
         BL    LB92                SI FUE BIEN, CONTINUO;         <USR>
         WTO   '**IEAMDBLG** FALLO EN OPEN DE MFILE. '            <USR>
         ABEND 888,DUMP                                           <USR>
LB92     DS    0H                                                 <USR>
         OI    MFLAGS,OPEN         Fichero abierto                <USR>
         PR                        Retornar                       <USR>
*
***********************************************************************
* End subroutines                                                     *
***********************************************************************
*
***********************************************************************
* static variables                                                    *
***********************************************************************
*
*      translate table for testing for ebcdiic numbers
*
NUMTAB   DC    240X'FF',10X'00',6X'FF'
*                                                                  @D2A
*      translate tables for scanning parm field                    @D2A
*                                                                  @D2A
TRTTAB1  DC    256X'00'                                            @D2A
         ORG   TRTTAB1+C','         stop on comma                  @D2A
         DC    C','                                                @D2A
         ORG   TRTTAB1+C'('         stop on right paren            @D2A
         DC    C'('                                                @D2A
         ORG   ,                                                   @D2A
TRTTAB2  DC    256X'00'                                            @D2A
         ORG   TRTTAB2+C')'         stop on left paren             @D2A
         DC    C')'                                                @D2A
         ORG   ,                                                   @D2A
ZLPAREN  DC    0F'0',3X'00',C'('   3 zeros and a left paren        @D2A
*
*      translate table for hex conversion
*      must be at least 240 bytes past base
HEXTAB   EQU   *-240
         DC    C'0123456789ABCDEF' must follow hextab
*
STRNAME  DC    CL26'SYSPLEX.OPERLOG' stream name
ANSLEN   DC    A(L'ANSAREA)        length of logger's answer area
STRBUFFL EQU   64*1024             length of largest log record
STRBLEN  DC    A(STRBUFFL)
*                                                                 <USR>
MDBBUFFL EQU   64*1024             LENGTH OF LARGEST MDB RECORD   <USR>
MDBBLEN  DC    A(MDBBUFFL)                                        <USR>
         LTORG
*
*        +--------------------------------+
*>>>>>>>>| AREAS DE LLAMADA A MDALDIN     |                       <USR>
*        +--------------------------------+                       <USR>
$PETICI  DC        CL10'ALLOC  '                                  <USR>
*                                                                 <USR>
$WORKDIN DC        F'0'                <> WORK FACILITADA POR MOD <USR>
*                                                                 <USR>
$DATOSA  DS        0CL68                                          <USR>
$DATOSA0 DC        CL15'DD=MDBLOG '                               <USR>
$DATOSA1 DC        CL50'DSN=OPERLOG.'                             <USR>
$DATOSA2 DC        CL03' ; '                                      <USR>
*
$DATOSB  DC        CL99' NEW CATLG CDELETE UNIT=3390                   X
               RLSE VB LRECL=4096 BLKSIZE=8196 CLOSE ; '          <USR>
*                                                                 <USR>
*-------- AREA DE LLAMADA AL COMANDO                              <USR>
*                                                                 <USR>
*        DS        0H                                             <USR>
A_PARM   DS        F                                              <USR>
PARM_OUT DS        H                                              <USR>
WF1      DC        C'START LOGGERSF,FICH='                        <USR>
WF2      DC        CL44' '                                        <USR>
WFLEN    EQU       *-WF1                                          <USR>
*                                                                 <USR>
*-------- SERIALIZATION AREA                                      <USR>
*                                                                 <USR>
SERIAL   DS        0H                                             <USR>
MAJNAME  DC        CL7'OPERLOG'                                   <USR>
MINNAME  DC        CL8'IEAMDBLG'                                  <USR>
*                                                                 <USR>
ENQFLG   DS        XL1             Serialization flag             <USR>
ENQREQ   EQU       X'01'           Enqueue was requested          <USR>
ENQSUC   EQU       X'02'           Enqueue was succesfull         <USR>
*                                                                 <USR>
@TIEMPOW DS    D                                                  <USR>
KDEFECTO DC    C'00030000'         Delay of 3 minutes             <USR>
***********************************************************************
* dynamic variables                                                   *
***********************************************************************
*
***********************************************************************
*
$TIMEDAT DS    CL16                                               <USR>
$FIPL    DS    CL9                                                <USR>
$HIPL    DS    CL9                                                <USR>
@TIMEDAT DS    CL16                                               <USR>
@FIPL    DS    CL9                                                <USR>
@HIPL    DS    CL9                                                <USR>
***********************************************************************
$TOD     DS    0XL16               Area for STCKCONV output       <USR>
$TODTME  DC     XL4'0'                                            <USR>
         DC     XL4'0'                                            <USR>
$TODDTE  DC     XL4'0'                                            <USR>
         DC     XL4'0'                                            <USR>
***********************************************************************
SV       DS    18F                 save area
DATEWORK DS    F                   work area for checking dates
DATEWRK1 DS    F                   work area for checking dates
DATEWRK2 DS    F                   work area for checking dates    @D2A
DAYSWORK DS    F                   work area for checking dates    @D2A
SSTCK    DS    2F                  start date in stck format
ESTCK    DS    2F                  end date in stck format
DSTCK    DS    2F                  delete date in stck format
WORK5    DS    CL5                 Work area                      <USR>
WORKA15  DS    CL15                Work area                      <USR>
W_DATE   DC    CL8'YYYYMMDD'       Work area for date conversion  <USR>
W_TIME   DC    CL7'THHMMSS'        SMF Record Date
MDBBUFA  DS    F                   dirección buffer MDB           <USR>
CONVWORK DC    4F'0'               parm area for convtod macro
CONVTIME EQU   CONVWORK,4          time in parm area              <USR>
CONVDATE EQU   CONVWORK+8,4        date in parm area
CURRSTCK DS    2F,2F               timestamps (GMT,local) of curr rec
GMTCSTCK EQU   CURRSTCK,8          GMT of curr rec                <USR>
LOCCSTCK EQU   CURRSTCK+8,8        Local time of curr rec         <USR>
RETCODE  DS    F                   return code from logger
RSNCODE  DS    F                   reason code from logger
BLANKCT  DS    F                   count of blanks in message segment
LOFF     DS    F                   offset of text in log record
RECCOUNT DS    F                   number of logger records read
DBLWD    DS    D                   work area for cvd
SDATE    DS    XL7                 start date as ebcdiic yyyyddd
EDATE    DS    XL7                 end date as ebcdiic yyyyddd
DDATE    DS    XL7                 delete date as ebcdiic yyyyddd
$GMT     DS    XL7                 today's GMT time               <USR>
TDATE    DS    XL7                 today's date as ebcdiic yyyyddd @D2A
COPYDAYS DS    CL3                 copy days ebcdiic nnn           @D2A
DELDAYS  DS    CL3                 delete days ebcdiic nnn         @D2A
STRTOKEN DS    CL16                token for accessing stream
BRWTOKEN DS    CL4                 token for browse session
ANSAREA  DS    CL(ANSAA_LEN)       answer area for log requests
CURRBLK  DS    XL8                 block id of current block
DELBLK   DS    XL8                 block id of blk after one to delete
TWORK    DS    CL16                work area for hex translate
JOBNAME  DS    CL8                 jobname
CONSNAME DS    CL8                 console name                    @D1A
CONSID   DS    XL4                 console id
MCSFLAGS DS    0CL2                MCS flags from MDB              @D1A
MCSFLAG1 DS    X                   MCS flag 1                      @D1A
MCSFLAG2 DS    X                   MCS flag 2                      @D1A
HCID     DC    CL4' '              hardcopy id                     @P4A
         ORG   HCID+1              multiline id goes in bytes 2-4  @P4A
MLID     DC    C'NNN'              multiline id from message
         ORG   ,                                                   @P4A
MLTEMPLN DC    CL80' '             work area for split line        @P4A
*                                                                  @P4A
DESCS    DS    0XL2                copy of descriptor codes        @P4A
DESC1    DS    XL1                 descriptor codes byte 1         @P4A
DESC2    DS    XL1                 descriptor codes byte 2         @P4A
*                                                                  @P4A
REQFL    DC    CL8' '              copy of request flags
WTLFLAG  DS    C                   'Y' indicates a WTL
FIRSTLNE DS    C                   'Y' indicates the first msg line
*
FLAGS1   DS    XL1                 mdb flags
FLAGGO   EQU   X'01'               processed general object
FLAGCO   EQU   X'02'               processed control prog object
*
FLAGS2   DS    XL1                 Marcadores de control          <USR>
MDBALDIN EQU   X'01'               MDBALDIN correcto              <USR>
*
PFLAGS   DS    XL1                 parameter flags                 @D2A
COPY     EQU   X'01'               "COPY" was specified            @D2A
DELETE   EQU   X'02'               "DELETE" was specified          @D2A
HCFORMAT EQU   X'04'               "HCFORMAT" was specified        @04A
YEAR     EQU   X'08'               "HCFORMAT(YEAR)" was specified      *
                                    (this is also the default)     @04A
CENTURY  EQU   X'10'               "HCFORMAT(CENTURY)" was specified   *
                                                                   @04A
*
COPYALL  EQU   X'20'               "COPY(ALL)" was specified      <USR>
COPYMDB  EQU   X'60'               "COPY(MDB)"  was specified     <USR>
DELEALL  EQU   X'80'               "DELETE(ALL)" was specified    <USR>
*
MFLAGS   DS    XL1                 Miscellaneous flags             @01A
OPEN     EQU   X'80'               Output file has been opened     @01A
REACHEOF EQU   X'40'               End of file reached             @01A
NOBREND  EQU   X'20'               Return code of 8 or more on     @02C
*                                  IXGBRWSE REQUEST=START. Do not  @02A
*                                  perform IXGBRWSE REQUEST=END    @02A
*
OFF31    DC    0F'0',XL4'7FFFFFFF' anded to a reg to turn off bit 0
ON31     DC    0F'0',XL4'80000000' ored to a reg to turn on bit 0
*                                                                 <USR>
         DS        0H              **ALINEAR A MEDIA PALABRA**    <USR>
INSISWK  ORG       *+2+@MDSILEN                                   <USR>
*                                                                 <USR>
STPLEX   DS        CL8 <> NOMBRE DEL SYSPLEX                      <USR>
*                                                                 <USR>
         DS        0H                                             <USR>
*                                                                 <USR>
MFILE    DCB   DDNAME=MDBLOG,      dcb for output file            <USR>X
               DSORG=PS,                                          <USR>X
               MACRF=PM                                           <USR>
*
*                                                                 <USR>
FIOPERL  DCB   DDNAME=FIOPERL,     dcb for output file            <USR>X
               DSORG=PS,                                          <USR>X
               MACRF=PL,                                          <USR>X
               RECFM=F,LRECL=80,BLKSIZE=80                        <USR>
*
*
* buffer for log record
*
LOGBUFP  DS    0F                  prefix to log record
LOGBUFL  DS    H                   length of logbuf data + 4
         DC    H'0'
LOGBUF   DS    CL128               log record (mapped by ihahclog)
*
OFILE    DCB   DDNAME=SYSLOG,      dcb for output file                 X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               RECFM=VB,                                               X
               LRECL=132           128 + 4 for rdw
*
***********************************************************************
* messages                                                            *
***********************************************************************
*                                 1         2         3         4
*                        1234567890123456789012345678901234567890123456
BADPMSG  DC    AL2(36),C'MLG001I INVALID OR MISSING PARAMETER'     @D2C
*
LOGRMSG  DC    AL2(LOGRMLEN)
LOGRMSGD DC    C'MLG002I ERROR DURING SYSTEM LOGGER '              @P5C
LOGRMSGT DC    CL10' ',C', RETURN CODE '                           @P6C
LOGRMRET DC    CL3' ',C', REASON CODE '
LOGRMRSN DS    CL4,C' '
LOGRMLEN EQU   *-LOGRMSGD                                          @P5C
*                                 1         2         3         4
*                        1234567890123456789012345678901234567890123456
         DS    0H                   for alignment                  @03A
EMPTYMSG DC    AL2(27),C'MLG003I NO RECORDS IN RANGE'
         DS    0H                   for alignment                  @03A
EMPTYSTM DC    AL2(27),C'MLG004I LOG STREAM IS EMPTY'              @03A
***********************************************************************
* Output record                                                    @01A
***********************************************************************
         DS    0H                   for alignment                  @03A
NOMSGAL2 DC    AL2(NOMSGLEN)        length field                   @01A
NOMSGMSG DC    C'ILG0001 RECORDS NOT AVAILABLE. '                  @01A
NOMSGRTN DC    CL10' '              IXG service routine instance   @01A
NOMSGM2  DC    C' RETURN CODE '     more text                      @01A
NOMSGRC  DC    CL4'   ,'            return code                    @01A
NOMSGM3  DC    C' REASON CODE '     more text                      @01A
NOMSGRS  DC    CL4' '               reason code                    @01A
         DC    CL1' '               pad character for unpack       @01A
NOMSGLEN EQU   *-NOMSGMSG           Message text length            @01A
*
         EJECT
***********************************************************************
* dsects                                                              *
***********************************************************************
*
STRBUFF  DSECT                     buffer for log records
         ORG   *+STRBUFFL          length of buffer
*-------- AREA DE LLAMADA AL MDSISTM  ----------------------------<USR>
         INSISTMA                                                 <USR>
*
         IXGANSAA LIST=YES         logger answer area
         PUSH  PRINT
         PRINT NOGEN
         IEAVG132 ,                mdb prefix
         IEAVM105 ,                mdb
         IHAHCLOG ,                hardcopy log format
         CVT   DSECT=YES           cvt
         POP   PRINT
*
***********************************************************************
* equates                                                             *
***********************************************************************
*
         IXGCON ,                  System logger equates
*
***********************************************************************
* register usage                                                      *
***********************************************************************
*
R1       EQU   1                   work and parm reg
R2       EQU   2                   work reg
R3       EQU   3                   work reg
R4       EQU   4                   work reg
R5       EQU   5                   module base                     @04A
R6       EQU   6                   pointer to end of the mdb
R7       EQU   7                   base for mdb objects
R8       EQU   8                   base for mdb
R9       EQU   9                   entry parameters and
*                                  base for hardcopy log record dsect
R10      EQU   10                  base for logger buffer
R11      EQU   11                  module base
R12      EQU   12                  module base
R13      EQU   13                  linkage
R14      EQU   14                  linkage
R15      EQU   15                  linkage
         END
/*
//SMP      EXEC $$$SMPE,COND=(0,NE)
//TEMPLIB  DD DISP=SHR,DSN=INS.MVSIPO.A06X.EXITOBJ
//SAMPMOD  DD DISP=(OLD,DELETE),DSN=&&SAMPMOD
//SMPPTFIN DD DATA,DLM='$$'
++USERMOD(@MVSX08) REWORK(06120402).
++VER(Z038) FMID(HBB7720).
++SAMP (IEAMDBLG) TXLIB(SAMPMOD).
++MOD (IEAMDBLG) TXLIB(TEMPLIB) DISTLIB(AOSB3).
++JCLIN CALLLIBS.
//LINKEDIT EXEC PGM=IEWL,REGION=768K,
// PARM='XREF,LET,LIST,AMODE=31,RMODE=24,REUS'
//SYSLMOD  DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=3390,VOL=SER=SYA0R1
//AOSB3    DD DSN=SYS1.AOSB3,DISP=SHR,UNIT=3390,VOL=SER=SYA0D4
//SYSLIB   DD DSN=SYST.TLINKLIB,DISP=SHR,UNIT=3390,VOL=SER=SYA0P1
//SYSLIN   DD *
         INCLUDE AOSB3(IEAMDBLG)
         ENTRY IEAMDBLG
         NAME  IEAMDBLG(R)
$$
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
  RECEIVE      S(@MVSX08) LIST SYSMODS SOURCEID(USREXIT).
  SET BDY(MVSTZNA).
  UCLIN.
   REP DDDEF(TLINKLIB)
       DATASET(SYST.LINKLIB)
       SHR
       UNIT(3390)
       VOLUME(SYA0P1)
   .
  ENDUCL.
  APPLY        S(@MVSX08) REDO.
/*
//
